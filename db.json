{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/lx/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/lx/source/css/base.styl","path":"css/base.styl","modified":1,"renderable":1},{"_id":"themes/lx/source/css/main.min.css","path":"css/main.min.css","modified":1,"renderable":1},{"_id":"themes/lx/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/lx/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":1,"renderable":1},{"_id":"themes/lx/source/images/cover.jpeg","path":"images/cover.jpeg","modified":1,"renderable":1},{"_id":"themes/lx/source/images/footer-l.jpeg","path":"images/footer-l.jpeg","modified":1,"renderable":1},{"_id":"themes/lx/source/images/footer-r.jpeg","path":"images/footer-r.jpeg","modified":1,"renderable":1},{"_id":"themes/lx/source/js/jquery.easing.min.js","path":"js/jquery.easing.min.js","modified":1,"renderable":1},{"_id":"themes/lx/source/images/post_cover.jpeg","path":"images/post_cover.jpeg","modified":1,"renderable":1},{"_id":"themes/lx/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/lx/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/lx/source/js/jquery.jside.menu.js","path":"js/jquery.jside.menu.js","modified":1,"renderable":1},{"_id":"themes/lx/source/js/local.search.js","path":"js/local.search.js","modified":1,"renderable":1},{"_id":"themes/lx/source/css/menu/button.styl","path":"css/menu/button.styl","modified":1,"renderable":1},{"_id":"themes/lx/source/css/menu/menu.styl","path":"css/menu/menu.styl","modified":1,"renderable":1},{"_id":"themes/lx/source/css/page_style/page_style.styl","path":"css/page_style/page_style.styl","modified":1,"renderable":1},{"_id":"source/巨匠手工收益计算器/地下天然水.png","path":"巨匠手工收益计算器/地下天然水.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/巨匠猫猫.png","path":"巨匠手工收益计算器/巨匠猫猫.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/水螅虫的伞盖.png","path":"巨匠手工收益计算器/水螅虫的伞盖.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/背景1.jpg","path":"巨匠手工收益计算器/背景1.jpg","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/葛根.png","path":"巨匠手工收益计算器/葛根.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/水之水晶.png","path":"巨匠手工收益计算器/水之水晶.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/雷之水晶.png","path":"巨匠手工收益计算器/雷之水晶.png","modified":1,"renderable":0},{"_id":"source/巨匠手工收益计算器/青柠罗勒草.png","path":"巨匠手工收益计算器/青柠罗勒草.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/about/index.md","hash":"23b9fc662bc6c68e74969db1b3d8a4687b205823","modified":1638215327654},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map.md","hash":"8a509e5471bb7c4ab41c005e9ce0cb5d82f35d4e","modified":1638215327618},{"_id":"source/_posts/Pow-x-n-10-（快速幂-大数取模问题）.md","hash":"c1e871a0cb65b1aa574208e882d7ce7f72af4483","modified":1638215327628},{"_id":"source/_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）.md","hash":"f7aa2d4ef1b5ca157676c28db76d582bb01af1ca","modified":1638215327628},{"_id":"source/_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）.md","hash":"2d68bab635a5e5b63c6d62c63835d3f567c49215","modified":1638215327650},{"_id":"source/_posts/巨匠手工收益计算器.md","hash":"4fb2f570cf5e858c60dbaafb966c91d88a1f1049","modified":1638215327651},{"_id":"source/_posts/微信小程序：灵活适配不同标题栏高度的设备的方法.md","hash":"95f85a9996c7b8d9b77d92ef75c7b8978decb28a","modified":1638215327651},{"_id":"source/_posts/牛客错题簿-CSS.md","hash":"a04d22af74f148db3f6da2b6e9044afb39dc9044","modified":1638215327652},{"_id":"source/_posts/牛客错题簿-HTML.md","hash":"19921b00be174b25b3d42295015c2eeda85d6859","modified":1638215327652},{"_id":"source/_posts/牛客错题簿-JS.md","hash":"50c176b2307c13fff71a5a66d291354036eec125","modified":1638215327653},{"_id":"source/巨匠手工收益计算器/index.html","hash":"c933d9ef41016c0e56ea1b9bc89ff25b83c0b0f8","modified":1638308762561},{"_id":"source/巨匠手工收益计算器/地下天然水.png","hash":"57435c86229e5d74642e95e4f2fc6aae2e16228c","modified":1638215327655},{"_id":"source/巨匠手工收益计算器/水螅虫的伞盖.png","hash":"e6e4fae8bbf15e3244824da968f589839427b968","modified":1638215327659},{"_id":"source/巨匠手工收益计算器/葛根.png","hash":"9ed75424006a051cdc3c2b17d1f3e6c983143b80","modified":1638215327661},{"_id":"source/巨匠手工收益计算器/水之水晶.png","hash":"4e7909168fb9032e3c6711db2cbff038677e7d14","modified":1638215327658},{"_id":"source/巨匠手工收益计算器/雷之水晶.png","hash":"3937d658abcf7959595851ba136d0eaaa3b86de9","modified":1638215327662},{"_id":"source/巨匠手工收益计算器/青柠罗勒草.png","hash":"f2c233f6dfec254ecf3ab92d935d696c8538cd07","modified":1638215327662},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/path-compression.jpg","hash":"2ad76c60d6d8f172555f45575da3bad866542aa2","modified":1638215327622},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qf1.png","hash":"ebab7bc8a320818e31d5952bec8009dc6abc14d1","modified":1638215327623},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qu2.png","hash":"c370ef1ff1e4458fcbf83ffe9802dfaccf193e2c","modified":1638215327626},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/compare-final.png","hash":"4324dcf04b74152be6de70860e3e1ee7cbe34953","modified":1638215327620},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/compare.png","hash":"710314ce886d5ca0e1c125b2f8d5197a70d4e998","modified":1638215327621},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qu1.png","hash":"0824bb0d2d6bb43a0028fafd26395aedb5bc2c27","modified":1638215327625},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qf2.png","hash":"c8abdb84d9c33272d5b815b72cec98adf467b2ad","modified":1638215327624},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/weighting.png","hash":"bdf83f353affd7055761dd54d46f6e509aa8fe36","modified":1638215327627},{"_id":"source/巨匠手工收益计算器/背景1.jpg","hash":"e344ca58d3436148f63e394d8a4f26e1832c050a","modified":1638215327661},{"_id":"themes/lx/.editorconfig","hash":"dc7797dd69f0037ef5048f6b6f3b0217c0e0efc4","modified":1638215327714},{"_id":"themes/lx/.gitignore","hash":"87ba54d22c49aaf9f302309244be4009278a5dc1","modified":1638215327718},{"_id":"themes/lx/LICENSE","hash":"4394e136b0ccaa770c057706f12d046ef1e0966f","modified":1638215327720},{"_id":"themes/lx/CODE_OF_CONDUCT.md","hash":"549cec0446b45a45760744fa88049a6b571c9ebe","modified":1638215327719},{"_id":"themes/lx/CONTRIBUTING.md","hash":"6e9a02510cf7965b9dd0c61006a1325114227563","modified":1638215327719},{"_id":"themes/lx/README.md","hash":"af86577f147c42913640fa8566d7a8f0ecbc8013","modified":1638215327720},{"_id":"themes/lx/_config.yml","hash":"a39a62b87da850ce1ea7fa298d261d06500258fc","modified":1638215327721},{"_id":"themes/lx/package.json","hash":"2c3add4c2d20429b9e3e048dfe82f664d18f73f3","modified":1638215327735},{"_id":"themes/lx/languages/en.yml","hash":"65e5bcbc883ac718fadb6a79505f145dec0c9e28","modified":1638215327722},{"_id":"themes/lx/README/README.zh.md","hash":"f8134501daa596ff36f032906ce7640ec3e4fe4e","modified":1638215327721},{"_id":"themes/lx/languages/zh.yml","hash":"56668514d677ec63a918ed932baacfbaa3d975e1","modified":1638215327723},{"_id":"themes/lx/.github/FUNDING.yml","hash":"70c496850d98768a2f52e8a6f154c03be22b20c0","modified":1638215327715},{"_id":"themes/lx/layout/archive.ejs","hash":"171588edc68c827814a6ddabcba77a659cebf3c6","modified":1638215327724},{"_id":"themes/lx/layout/index.ejs","hash":"5143c704fa9ebbc2bdce888c78d1cbbc9f60549c","modified":1638215327724},{"_id":"themes/lx/layout/layout.ejs","hash":"5c2db885ad301862e9c7a2b40fb530f85d9d8840","modified":1638215327725},{"_id":"themes/lx/layout/page.ejs","hash":"d48b85e518b0f60d0b3eb704f5a1a65189ae854c","modified":1638215327725},{"_id":"themes/lx/layout/post.ejs","hash":"eb6830cf6770d1c0f7cbb5b901fceeb32b4c014f","modified":1638215327731},{"_id":"themes/lx/source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1638215327743},{"_id":"themes/lx/.github/workflows/greetings.yml","hash":"f539aa99c9b941f427897fe636a79dbd7eef0fe9","modified":1638215327718},{"_id":"themes/lx/.github/ISSUE_TEMPLATE/--------feature-request.md","hash":"d169dff110923dd5fbc5ba3c3a966b2049ef0be1","modified":1638215327716},{"_id":"themes/lx/.github/ISSUE_TEMPLATE/------help-wanted.md","hash":"5cb6957ecd448779e4aedd735691e7f7fdb07e19","modified":1638215327717},{"_id":"themes/lx/layout/partials/aside.ejs","hash":"436da0db022602e9d91655ca2e767d651a80bcba","modified":1638215327726},{"_id":"themes/lx/.github/ISSUE_TEMPLATE/------bug-bug-report.md","hash":"ffa54dc9061531e1c4ad51f9f947f8cfc3034b63","modified":1638215327716},{"_id":"themes/lx/layout/partials/config.ejs","hash":"9eb72a63ba0757b5d2055875ca559fda511e1610","modified":1638215327726},{"_id":"themes/lx/layout/partials/footer.ejs","hash":"d2b0d7db0a7c8a3709fbd2ff9cf443599cffce94","modified":1638215327727},{"_id":"themes/lx/layout/partials/font.ejs","hash":"082edb9da043186dfe0ccaeb4942f837349861cb","modified":1638215327727},{"_id":"themes/lx/layout/partials/menu.ejs","hash":"7a5669635602506f2bf91866b0bcdeadec302e47","modified":1638215327728},{"_id":"themes/lx/layout/partials/pagination.ejs","hash":"d9e5a782597aed71d0b639c5beafa32dcd5a50c5","modified":1638215327728},{"_id":"themes/lx/layout/partials/post-footer.ejs","hash":"a6bcdf77c5b16963b5205e7df4c93d5dff951d83","modified":1638215327729},{"_id":"themes/lx/layout/partials/search.ejs","hash":"cdac775b4d170c54a91a3351c3027b228843ac1b","modified":1638215327730},{"_id":"themes/lx/layout/partials/post-header.ejs","hash":"435e2eb2473e870b1501d07cc8167d5900c6dc85","modified":1638215327729},{"_id":"themes/lx/layout/partials/sociallinks.ejs","hash":"e5263d447d3fe65710a108e46d8411bf46415550","modified":1638215327731},{"_id":"themes/lx/layout/partials/recent-posts.ejs","hash":"d8b047769630ccb38acc345c001b34686def8962","modified":1638215327730},{"_id":"themes/lx/layout/third-party/comment.ejs","hash":"2019105df99d8c8dd9ca0aef4a95aa4f050ea9fd","modified":1638215327734},{"_id":"themes/lx/layout/third-party/mathjax.ejs","hash":"22867399744379382e67b9a91b71f720c900b499","modified":1638215327734},{"_id":"themes/lx/scripts/helpers/font.js","hash":"231b3a10d229e9606ab965a24250a993bcaa29ec","modified":1638215327736},{"_id":"themes/lx/source/css/base.styl","hash":"c1abc364e9816f7b9c29401f9a28efa3045d8728","modified":1638215327740},{"_id":"themes/lx/scripts/tags/center-quote.js","hash":"695f2530317e906dd7de997a2a25455189006077","modified":1638215327737},{"_id":"themes/lx/scripts/tags/button.js","hash":"13e06e262d537636b525e38a6620e68f9c1d58c3","modified":1638215327737},{"_id":"themes/lx/scripts/tags/label.js","hash":"d3703b9c9a583783de487e153aac20542d7115b1","modified":1638215327738},{"_id":"themes/lx/scripts/tags/note.js","hash":"55ea05c45ea091826038f62f98fd1620f9960ce9","modified":1638215327738},{"_id":"themes/lx/scripts/tags/video.js","hash":"2235cbe69d313c6890e40955d5da20b955f185d3","modified":1638215327738},{"_id":"themes/lx/source/css/main.min.css","hash":"20c32e1a93832269ab5c9ed0f9b07c6921a86bea","modified":1638215327740},{"_id":"themes/lx/source/css/main.styl","hash":"f2ce5402d2c788314759fe963f3530823a4d4ce4","modified":1638215327741},{"_id":"themes/lx/source/images/avatar.jpeg","hash":"7ce0557fb0cdf3d05e2e3be975d73ea0e6635df6","modified":1638215327744},{"_id":"themes/lx/source/images/footer-l.jpeg","hash":"f036edc5f66ffbcc34c3d855414c6ca5ef30a04b","modified":1638215327746},{"_id":"themes/lx/source/images/footer-r.jpeg","hash":"5c7677ac85cf8a683b91e97702b7096017006b4f","modified":1638215327747},{"_id":"themes/lx/source/js/jquery.easing.min.js","hash":"54be6707bc47ec09b6b40f658cd6e840415379b9","modified":1638215327750},{"_id":"themes/lx/source/images/post_cover.jpeg","hash":"93f216636c87dbbe635d4bb6b944851d92d84723","modified":1638215327748},{"_id":"themes/lx/source/js/jquery.jside.menu.js","hash":"d15b40199520d22771f9a211ac4282041df2ae5a","modified":1638215327751},{"_id":"themes/lx/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1638215327749},{"_id":"themes/lx/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1638215327749},{"_id":"themes/lx/source/js/local.search.js","hash":"770e063f160c11b5cb6f0233629ce9ae70207edb","modified":1638215327751},{"_id":"themes/lx/layout/third-party/analytics/baidu-analytics.ejs","hash":"46e74e98dc950e9df7280c50c6cd07359de5b4fd","modified":1638215327732},{"_id":"themes/lx/layout/third-party/analytics/index.ejs","hash":"c98b574b2634de33694edb40b1f9120160b81acb","modified":1638215327733},{"_id":"themes/lx/source/css/menu/button.styl","hash":"4ea6d48484b235f3f3b480c6c478febc59c65354","modified":1638215327742},{"_id":"themes/lx/layout/third-party/analytics/google-analytics.ejs","hash":"9d95e4abfd45222934370861d6948300dc15d3ec","modified":1638215327733},{"_id":"themes/lx/source/css/menu/menu.styl","hash":"ebe4d6bc7e0081ad4d7659427abb98a1344c1aae","modified":1638215327742},{"_id":"themes/lx/source/css/page_style/page_style.styl","hash":"8c76756cd6fabe20c0926c4551295d9ab41cc465","modified":1638215327743},{"_id":"themes/lx/source/images/cover.jpeg","hash":"186350a358c03649b83d5501ee43c90b1cc1160e","modified":1638215327746},{"_id":"source/巨匠手工收益计算器/巨匠猫猫.png","hash":"2e9628b8ae800bb87ca6872db4202c26a549677f","modified":1638308662318},{"_id":"source/_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）/侧滑效果.gif","hash":"3b489ac4084d6ebd5b1b3de30b7d9d429f777af4","modified":1638215327650},{"_id":"public/巨匠手工收益计算器/index.html","hash":"0ef5d73bec37240c83ad1c729a2c9e20c3038811","modified":1638311321027},{"_id":"public/sitemap.xml","hash":"e37c6af7ca3684e3362165f8fbe3cf59a0c1766a","modified":1638311321027},{"_id":"public/search.xml","hash":"0f8646155b36448648a562b84aef9e5548ce3bea","modified":1638311321027},{"_id":"public/about/index.html","hash":"541564f87fde4de9b3ef8e2ae85a8abff0877f01","modified":1638311321027},{"_id":"public/2021/11/04/巨匠手工收益计算器/index.html","hash":"a86365e5d757baf796ed1127bbf777b4e04f5d4c","modified":1638311321027},{"_id":"public/2021/09/01/牛客错题簿-CSS/index.html","hash":"6e6c62d27f69b4036a026a0a63e4e73c24dca912","modified":1638311321027},{"_id":"public/2021/09/01/牛客错题簿-HTML/index.html","hash":"753ae79fb4aee24cffcaf043ea85c67d45832a45","modified":1638311321027},{"_id":"public/2021/08/14/微信小程序：灵活适配不同标题栏高度的设备的方法/index.html","hash":"bebbd863206351d132922d48dba0b5e7bb6f5544","modified":1638311321027},{"_id":"public/archives/2021/index.html","hash":"037299a272d0917998b6df9d66a7518827a49790","modified":1638311321027},{"_id":"public/archives/index.html","hash":"037299a272d0917998b6df9d66a7518827a49790","modified":1638311321027},{"_id":"public/archives/2021/08/index.html","hash":"581d6a5d86b52f99a9e7bbc191b2698f56ace9a9","modified":1638311321027},{"_id":"public/archives/2021/09/index.html","hash":"6acf119f80053358c2c35652d36753818c88e23f","modified":1638311321027},{"_id":"public/archives/2021/11/index.html","hash":"25b89c9428443b58ebc3965365fe891034378cb0","modified":1638311321027},{"_id":"public/categories/JS/index.html","hash":"b31baa95b0d66719ac59644e16c379cc90515cd4","modified":1638311321027},{"_id":"public/categories/微信小程序/index.html","hash":"d15ef9f34ce2f2bc546928f5baf68f84f1c5fece","modified":1638311321027},{"_id":"public/categories/JS/算法/index.html","hash":"6bf215b8effc104f3f94ecd96bcce12b88c63b7c","modified":1638311321027},{"_id":"public/categories/FF14/index.html","hash":"fe22af5bcd923d9c5f04d8963cc6a12db0877d43","modified":1638311321027},{"_id":"public/categories/CSS/index.html","hash":"d64bc0b5baac2e865a55c7dcf6b31933701a624b","modified":1638311321027},{"_id":"public/categories/FF14/项目/index.html","hash":"ef0169c9eae2b3b30d761aab9eb8430d17f81bf1","modified":1638311321027},{"_id":"public/categories/HTML/index.html","hash":"7c8fa348b2b9f9c144cc51ffce699910004f5529","modified":1638311321027},{"_id":"public/tags/JS/index.html","hash":"a50053df649a0e74fd435c85be34576989ec585d","modified":1638311321027},{"_id":"public/tags/算法/index.html","hash":"48e9f055b58c0fd659774eab8799840101c4d291","modified":1638311321027},{"_id":"public/tags/快速幂/index.html","hash":"3b334d3b480edc15b62e2b6a6553c08b7ddf86ca","modified":1638311321027},{"_id":"public/tags/大数越界/index.html","hash":"674fa81afae1c355e5e47ff9a9b5578a87e39ba5","modified":1638311321027},{"_id":"public/tags/微信小程序/index.html","hash":"d0ab9410120f41666f42ecec7847fa4de52bd2d1","modified":1638311321027},{"_id":"public/tags/fs/index.html","hash":"a7c2fefaa562b501a99ebce9eb6810573915203d","modified":1638311321027},{"_id":"public/tags/FF14/index.html","hash":"7061253751f904ed0bf83f1f1834b632d4f65158","modified":1638311321027},{"_id":"public/tags/项目/index.html","hash":"75d74ca202f2442e51c11a317b8c46aae9deba70","modified":1638311321027},{"_id":"public/tags/CSS/index.html","hash":"0ba45b88f5fdc5dad2afe3a67dab3420856af28f","modified":1638311321027},{"_id":"public/2021/09/01/牛客错题簿-JS/index.html","hash":"9a576fde745458241280a94ad83835ebc201b64f","modified":1638311321027},{"_id":"public/2021/08/29/Pow-x-n-10-（快速幂-大数取模问题）/index.html","hash":"4ced19efb3d4e2b34d1fc1cb8a4b4919dfd29287","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/index.html","hash":"4355cb05a5eb3942e8faa190d47b97ed678dfc47","modified":1638311321027},{"_id":"public/2021/08/18/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）/index.html","hash":"7b59c05d428f2996d73118d6f7b5cecfa342206c","modified":1638311321027},{"_id":"public/2021/08/16/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）/index.html","hash":"5940afe2962f3756b9b6a2033b07fc6c2205bcde","modified":1638311321027},{"_id":"public/tags/HTML/index.html","hash":"355a5eaa81613e9e3be31d7ab47802fcf4620db1","modified":1638311321027},{"_id":"public/index.html","hash":"365e63b3bcc89c812d24463cfb10f3fb211f5f64","modified":1638311321027},{"_id":"public/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1638311321027},{"_id":"public/images/avatar.jpeg","hash":"7ce0557fb0cdf3d05e2e3be975d73ea0e6635df6","modified":1638311321027},{"_id":"public/images/footer-l.jpeg","hash":"f036edc5f66ffbcc34c3d855414c6ca5ef30a04b","modified":1638311321027},{"_id":"public/images/footer-r.jpeg","hash":"5c7677ac85cf8a683b91e97702b7096017006b4f","modified":1638311321027},{"_id":"public/images/post_cover.jpeg","hash":"93f216636c87dbbe635d4bb6b944851d92d84723","modified":1638311321027},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1638311321027},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/地下天然水.png","hash":"57435c86229e5d74642e95e4f2fc6aae2e16228c","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/水螅虫的伞盖.png","hash":"e6e4fae8bbf15e3244824da968f589839427b968","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/葛根.png","hash":"9ed75424006a051cdc3c2b17d1f3e6c983143b80","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/雷之水晶.png","hash":"3937d658abcf7959595851ba136d0eaaa3b86de9","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/水之水晶.png","hash":"4e7909168fb9032e3c6711db2cbff038677e7d14","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/青柠罗勒草.png","hash":"f2c233f6dfec254ecf3ab92d935d696c8538cd07","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/path-compression.jpg","hash":"2ad76c60d6d8f172555f45575da3bad866542aa2","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/qf1.png","hash":"ebab7bc8a320818e31d5952bec8009dc6abc14d1","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/qu2.png","hash":"c370ef1ff1e4458fcbf83ffe9802dfaccf193e2c","modified":1638311321027},{"_id":"public/images/cover.jpeg","hash":"186350a358c03649b83d5501ee43c90b1cc1160e","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/compare-final.png","hash":"4324dcf04b74152be6de70860e3e1ee7cbe34953","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/compare.png","hash":"710314ce886d5ca0e1c125b2f8d5197a70d4e998","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/qf2.png","hash":"c8abdb84d9c33272d5b815b72cec98adf467b2ad","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/qu1.png","hash":"0824bb0d2d6bb43a0028fafd26395aedb5bc2c27","modified":1638311321027},{"_id":"public/2021/08/20/JS-Union-find-quick-union-weighting-path-compression-map/weighting.png","hash":"bdf83f353affd7055761dd54d46f6e509aa8fe36","modified":1638311321027},{"_id":"public/css/base.css","hash":"6d884ebc4f4c1a7c750e4b871ecfff6c28b47ed0","modified":1638311321027},{"_id":"public/js/jquery.easing.min.js","hash":"af83a43279779fbc716f40ba8c5280782027540a","modified":1638311321027},{"_id":"public/js/jquery.jside.menu.js","hash":"688b8b03f8590a05e35a1fbbc59f37bc36051aa1","modified":1638311321027},{"_id":"public/css/menu/button.css","hash":"ce03713a291978281b66ce9d5738c456020a8e61","modified":1638311321027},{"_id":"public/js/local.search.js","hash":"3dd788d1e64431feb8faca7a7f175d25ed31f25a","modified":1638311321027},{"_id":"public/css/menu/menu.css","hash":"70f8a5b346f4b106eebc1c5199bc4add479da3c5","modified":1638311321027},{"_id":"public/css/page_style/page_style.css","hash":"07178b2c270eafa0c21e424663946015bfc08b0e","modified":1638311321027},{"_id":"public/css/main.css","hash":"6918851c41dabfa45fcd46fdc871ed4a08c73109","modified":1638311321027},{"_id":"public/css/main.min.css","hash":"20c32e1a93832269ab5c9ed0f9b07c6921a86bea","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/背景1.jpg","hash":"e344ca58d3436148f63e394d8a4f26e1832c050a","modified":1638311321027},{"_id":"public/巨匠手工收益计算器/巨匠猫猫.png","hash":"2e9628b8ae800bb87ca6872db4202c26a549677f","modified":1638311321027},{"_id":"public/2021/08/16/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）/侧滑效果.gif","hash":"3b489ac4084d6ebd5b1b3de30b7d9d429f777af4","modified":1638311321027}],"Category":[{"name":"JS","_id":"ckwmo9e400004lsv00jaih9rz"},{"name":"微信小程序","_id":"ckwmo9e46000dlsv010s57fnh"},{"name":"算法","parent":"ckwmo9e400004lsv00jaih9rz","_id":"ckwmo9e47000jlsv0cxhz1nf0"},{"name":"FF14","_id":"ckwmo9e48000nlsv01nmdfpbj"},{"name":"CSS","_id":"ckwmo9e49000zlsv01onl9z3i"},{"name":"项目","parent":"ckwmo9e48000nlsv01nmdfpbj","_id":"ckwmo9e4a0014lsv0ener62yt"},{"name":"HTML","_id":"ckwmo9e4e001plsv0hbxefljy"}],"Data":[],"Page":[{"title":"关于我","date":"2021-08-30T10:07:56.000Z","comment":true,"_content":"\n## 个人发展\n\n来自北京邮电大学2018级（2022年毕业），信息与通信工程学院。比起通信和电子更热爱coding，主攻方向是前端开发，此外对移动端（Android之类）的开发也有兴趣。目前没有考研意向，静心准备秋招中。未来意向工作城市是合肥（恋人的家乡，生活压力也没有一线城市那么大），或许有些缺乏互联网企业的土壤，可能就业优先级是大厂>国企>恰烂钱。目前期望965以下的工作时间，因为本人没有做一番事业的偏向（但是会想要获得自己的能力应得的薪酬收入）。计划在闲暇时间（拿到offer后或者工作稳定后）写一些兴趣使然的程序，或许是实用工具或游戏。有少量的绘画功底，但近期没有精进的打算。\n\n2021.7~2021.8 在纷享销客公司Paas平台部实习（大前端），工作时间10-7.5-5。工作内容是用微信小程序+[hera](https://weidian-inc.github.io/hera/#/)开发跨平台APP。\n\n感受：跨平台开发好麻烦，要同时适配微信小程序，h5, android, ios.\n<!-- 2.不知道是能者多劳还是跟对mentor很重要，邻座研究生小姐姐入职不会做小程序，工资比我每天多拿60块，然后我入职第一天配环境第二天就做需求，没日没夜做到离职，小姐姐没事干，mentor都不派活，吐了。 -->\n\n## 思想倾向\n\n圣母白左（doge），支持各种政治正确如反种族歧视、性别歧视、性倾向歧视等。支持完善动保体系（理中客派）。\n\n温和转激进派女权主义者，目前对各种流派处包容态度，对能理解女性处境的男性持接纳态度，支持在部分很不平衡的方面矫枉过正，但反对没有理由的冲突。\n\n支持国内阶级斗争，坚决支持完善劳动法的实施（作为劳动者的屁股）。\n\n## 个人兴趣\n\n最终幻想14 -和恋人结识的地方，也是非常好的游戏\n![FF14-1](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_1.png)\n![FF14-2](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_2.png)\n![FF14-3](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_3.png)\n\n音乐方面：Vocaloid & 华语HipHop & 独立/日系/英伦摇滚\n\n最近在玩的游戏：荒野大镖客2，刺客信条：奥德赛、起源，火焰纹章：风花雪月。\n\n## 人生目标\n\n想要无止境地获取知识，以及在享乐中游戏人生。","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2021-08-30 18:07:56\ncomment: true\n---\n\n## 个人发展\n\n来自北京邮电大学2018级（2022年毕业），信息与通信工程学院。比起通信和电子更热爱coding，主攻方向是前端开发，此外对移动端（Android之类）的开发也有兴趣。目前没有考研意向，静心准备秋招中。未来意向工作城市是合肥（恋人的家乡，生活压力也没有一线城市那么大），或许有些缺乏互联网企业的土壤，可能就业优先级是大厂>国企>恰烂钱。目前期望965以下的工作时间，因为本人没有做一番事业的偏向（但是会想要获得自己的能力应得的薪酬收入）。计划在闲暇时间（拿到offer后或者工作稳定后）写一些兴趣使然的程序，或许是实用工具或游戏。有少量的绘画功底，但近期没有精进的打算。\n\n2021.7~2021.8 在纷享销客公司Paas平台部实习（大前端），工作时间10-7.5-5。工作内容是用微信小程序+[hera](https://weidian-inc.github.io/hera/#/)开发跨平台APP。\n\n感受：跨平台开发好麻烦，要同时适配微信小程序，h5, android, ios.\n<!-- 2.不知道是能者多劳还是跟对mentor很重要，邻座研究生小姐姐入职不会做小程序，工资比我每天多拿60块，然后我入职第一天配环境第二天就做需求，没日没夜做到离职，小姐姐没事干，mentor都不派活，吐了。 -->\n\n## 思想倾向\n\n圣母白左（doge），支持各种政治正确如反种族歧视、性别歧视、性倾向歧视等。支持完善动保体系（理中客派）。\n\n温和转激进派女权主义者，目前对各种流派处包容态度，对能理解女性处境的男性持接纳态度，支持在部分很不平衡的方面矫枉过正，但反对没有理由的冲突。\n\n支持国内阶级斗争，坚决支持完善劳动法的实施（作为劳动者的屁股）。\n\n## 个人兴趣\n\n最终幻想14 -和恋人结识的地方，也是非常好的游戏\n![FF14-1](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_1.png)\n![FF14-2](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_2.png)\n![FF14-3](https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_3.png)\n\n音乐方面：Vocaloid & 华语HipHop & 独立/日系/英伦摇滚\n\n最近在玩的游戏：荒野大镖客2，刺客信条：奥德赛、起源，火焰纹章：风花雪月。\n\n## 人生目标\n\n想要无止境地获取知识，以及在享乐中游戏人生。","updated":"2021-11-29T19:48:47.654Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckwmo9e3u0000lsv02fh4hkbz","content":"<h2 id=\"个人发展\"><a href=\"#个人发展\" class=\"headerlink\" title=\"个人发展\"></a>个人发展</h2><p>来自北京邮电大学2018级（2022年毕业），信息与通信工程学院。比起通信和电子更热爱coding，主攻方向是前端开发，此外对移动端（Android之类）的开发也有兴趣。目前没有考研意向，静心准备秋招中。未来意向工作城市是合肥（恋人的家乡，生活压力也没有一线城市那么大），或许有些缺乏互联网企业的土壤，可能就业优先级是大厂&gt;国企&gt;恰烂钱。目前期望965以下的工作时间，因为本人没有做一番事业的偏向（但是会想要获得自己的能力应得的薪酬收入）。计划在闲暇时间（拿到offer后或者工作稳定后）写一些兴趣使然的程序，或许是实用工具或游戏。有少量的绘画功底，但近期没有精进的打算。</p>\n<p>2021.7~2021.8 在纷享销客公司Paas平台部实习（大前端），工作时间10-7.5-5。工作内容是用微信小程序+<a href=\"https://weidian-inc.github.io/hera/#/\">hera</a>开发跨平台APP。</p>\n<p>感受：跨平台开发好麻烦，要同时适配微信小程序，h5, android, ios.</p>\n<!-- 2.不知道是能者多劳还是跟对mentor很重要，邻座研究生小姐姐入职不会做小程序，工资比我每天多拿60块，然后我入职第一天配环境第二天就做需求，没日没夜做到离职，小姐姐没事干，mentor都不派活，吐了。 -->\n\n<h2 id=\"思想倾向\"><a href=\"#思想倾向\" class=\"headerlink\" title=\"思想倾向\"></a>思想倾向</h2><p>圣母白左（doge），支持各种政治正确如反种族歧视、性别歧视、性倾向歧视等。支持完善动保体系（理中客派）。</p>\n<p>温和转激进派女权主义者，目前对各种流派处包容态度，对能理解女性处境的男性持接纳态度，支持在部分很不平衡的方面矫枉过正，但反对没有理由的冲突。</p>\n<p>支持国内阶级斗争，坚决支持完善劳动法的实施（作为劳动者的屁股）。</p>\n<h2 id=\"个人兴趣\"><a href=\"#个人兴趣\" class=\"headerlink\" title=\"个人兴趣\"></a>个人兴趣</h2><p>最终幻想14 -和恋人结识的地方，也是非常好的游戏<br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_1.png\" alt=\"FF14-1\"><br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_2.png\" alt=\"FF14-2\"><br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_3.png\" alt=\"FF14-3\"></p>\n<p>音乐方面：Vocaloid &amp; 华语HipHop &amp; 独立/日系/英伦摇滚</p>\n<p>最近在玩的游戏：荒野大镖客2，刺客信条：奥德赛、起源，火焰纹章：风花雪月。</p>\n<h2 id=\"人生目标\"><a href=\"#人生目标\" class=\"headerlink\" title=\"人生目标\"></a>人生目标</h2><p>想要无止境地获取知识，以及在享乐中游戏人生。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"个人发展\"><a href=\"#个人发展\" class=\"headerlink\" title=\"个人发展\"></a>个人发展</h2><p>来自北京邮电大学2018级（2022年毕业），信息与通信工程学院。比起通信和电子更热爱coding，主攻方向是前端开发，此外对移动端（Android之类）的开发也有兴趣。目前没有考研意向，静心准备秋招中。未来意向工作城市是合肥（恋人的家乡，生活压力也没有一线城市那么大），或许有些缺乏互联网企业的土壤，可能就业优先级是大厂&gt;国企&gt;恰烂钱。目前期望965以下的工作时间，因为本人没有做一番事业的偏向（但是会想要获得自己的能力应得的薪酬收入）。计划在闲暇时间（拿到offer后或者工作稳定后）写一些兴趣使然的程序，或许是实用工具或游戏。有少量的绘画功底，但近期没有精进的打算。</p>\n<p>2021.7~2021.8 在纷享销客公司Paas平台部实习（大前端），工作时间10-7.5-5。工作内容是用微信小程序+<a href=\"https://weidian-inc.github.io/hera/#/\">hera</a>开发跨平台APP。</p>\n<p>感受：跨平台开发好麻烦，要同时适配微信小程序，h5, android, ios.</p>\n<!-- 2.不知道是能者多劳还是跟对mentor很重要，邻座研究生小姐姐入职不会做小程序，工资比我每天多拿60块，然后我入职第一天配环境第二天就做需求，没日没夜做到离职，小姐姐没事干，mentor都不派活，吐了。 -->\n\n<h2 id=\"思想倾向\"><a href=\"#思想倾向\" class=\"headerlink\" title=\"思想倾向\"></a>思想倾向</h2><p>圣母白左（doge），支持各种政治正确如反种族歧视、性别歧视、性倾向歧视等。支持完善动保体系（理中客派）。</p>\n<p>温和转激进派女权主义者，目前对各种流派处包容态度，对能理解女性处境的男性持接纳态度，支持在部分很不平衡的方面矫枉过正，但反对没有理由的冲突。</p>\n<p>支持国内阶级斗争，坚决支持完善劳动法的实施（作为劳动者的屁股）。</p>\n<h2 id=\"个人兴趣\"><a href=\"#个人兴趣\" class=\"headerlink\" title=\"个人兴趣\"></a>个人兴趣</h2><p>最终幻想14 -和恋人结识的地方，也是非常好的游戏<br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_1.png\" alt=\"FF14-1\"><br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_2.png\" alt=\"FF14-2\"><br><img src=\"https://cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/ff14_3.png\" alt=\"FF14-3\"></p>\n<p>音乐方面：Vocaloid &amp; 华语HipHop &amp; 独立/日系/英伦摇滚</p>\n<p>最近在玩的游戏：荒野大镖客2，刺客信条：奥德赛、起源，火焰纹章：风花雪月。</p>\n<h2 id=\"人生目标\"><a href=\"#人生目标\" class=\"headerlink\" title=\"人生目标\"></a>人生目标</h2><p>想要无止境地获取知识，以及在享乐中游戏人生。</p>\n"},{"layout":"false","_content":"<!DOCTYPE html>\n<html lang=\"zh\">\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"theme-color\" content=\"#000000\">\n\t\t<title>巨匠手工收益计算器</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta name=\"author\" content=\"陈俪影\">\n\t\t<meta name=\"keywords\" content>\n\t\t<meta name=\"description\" content=\"陈俪影的博客\">\n\t\t<link rel=\"shortcut icon\" href=\"//cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/物理2-飞船2.svg\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t<link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+SC&display=swap\" rel=\"stylesheet\">\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script>\n\n\t\t<style type=\"text/css\">\n\t\t    @media (max-width: 768px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t    \t\twidth: 100%;\n\t\t    \t\theight: 90vh;\n\t\t    \t\tflex: 0 0 90vh;\n\t\t    \t}\n\t\t    \t#picture_container_cat{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: 1vh;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 10vh;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tword-break: break-all;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 35px;\n\t\t\t\t\theight: 35px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t    }\n\t\t    @media (min-width: 769px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 90vh;\n\t\t\t\t\tflex: 0 0 90vh;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t#picture_container_cat{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 0 1;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 1 0 60%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t    margin: 1.5vh;\n\t\t\t\t    position: absolute;\n\t\t\t    }\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t                border-radius: 2vh;\n\t                width: max-content;\n\t                height: max-content;\n\t                font-size: 13px;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t                padding: 2vh;\n\t                cursor: pointer;\n\t\t\t\t}\n\t\t\t\t.btn:hover{\n\t\t\t\t\tcolor: mistyrose;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t\theight: 50px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 110px;\n\t\t\t\t}\n\t\t    }\n\t\t    #main{\n\t\t    \tbackground-color: white;\n\t    \t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t    \t\twidth: 100vw;\n\t    \t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: space-between;\n\t\t    }\n\t\t    #line{\n\t\t    \twidth: 100%;\n\t\t    \tflex: 0 0 1vh;\n\t\t    \tbackground-color: lightcoral;\n\t\t    }\n\t\t\t#img_cat{\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t#content_3{\n\t\t\t\twidth: 90%;\n\t\t\t\theight: 90%;\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.content_col{\n\t\t\t\tdisplay: table;\n\t\t\t\tflex: 0 0 40%;\n\t\t\t\tmargin: 5%;\n\t\t\t}\n\t\t\t.content_table_row{\n\t\t\t\tdisplay: table-row;\n\t\t\t\t/*text-align: center;*/\n\t\t\t}\n/*\t\t\t.content_table_col{\n\t\t\t\tdisplay: table-column;\n\t\t\t}*/\n\t\t\t.content_table_cell{\n\t\t\t\tdisplay: table-cell;\n\t\t\t\ttext-align: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t\t.content_table_text{\n\t\t\t\tdisplay: table-caption;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<form class=\"btn_form\" id=\"btn_form_back\" method=\"get\" action=\"../index.html\" target=\"_self\">\n\t\t\t\t<button class=\"btn\" id=\"btn_back\">返回主页</button>\n\t\t\t</form>\n\t\t\t<div id=\"header\">\t\n\t\t\t\t<div id=\"title\">巨匠手工收益计算器</div>\n\t\t\t</div>\n\t\t\t<div id=\"line\"></div>\n\t\t\t<div id=\"content_1\">\n\t\t\t\t<div class=\"picture_container\" id=\"picture_container_cat\">\n\t\t\t\t\t<img id=\"img_cat\" src=\"巨匠猫猫.png\">\n\t\t\t\t</div>\n\t\t\t\t<div id=\"content_2\">\n\t\t\t\t\t<div id=\"content_3\">\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_text\">请输入材料的价格</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\" v-for=\"(item, index) in materials\">\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><img class='material' v-bind:src=\"item.name +'.png'\"></div>\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><input class=\"input_price\" type=\"number\" v-model=\"materials[index].price\">/个</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeCost\">通过材料费计算成本</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)成本<input class=\"input_compute\" type=\"number\" v-model=\"cost\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\t\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)售价<input class=\"input_compute\" type=\"number\" v-model=\"sell\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeProfit\">通过成本和售价计算利润</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)利润<input class=\"input_compute\" type=\"number\" v-bind:value=\"profit\" readonly=\"true\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\t\tvar content3 = new Vue({\n\t\t\t\t\t\t\tel: '#content_3',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tmaterials: [\n\t\t\t\t\t\t\t\t  { id: 0, name: '地下天然水', ename:'price_water', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 1, name: '水螅虫的伞盖', ename:'price_hydra', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 2, name: '青柠罗勒草', ename:'price_herb', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 3, name: '葛根', ename:'price_geroot', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 4, name: '雷之水晶', ename:'price_thunder_crys', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 5, name: '水之水晶', ename:'price_water_crys', price: '0' },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcost: '0',\n\t\t\t\t\t\t\t\tsell: '0',\n\t\t\t\t\t\t\t\tprofit: '0',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreated: function(){\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasMaterialPrices\")){\n\t\t\t\t\t\t\t\t\tfor(const material of this.materials){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = localStorage.getItem(material.ename);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasSellPrice\")){\n\t\t\t\t\t\t\t\t\tthis.sell = localStorage.getItem('sell');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethods: {\n\t\t\t\t\t\t\t\tfillEmptyAndSaveMaterialsData: function(material){\n\t\t\t\t\t\t\t\t\tif(!material.price.length || Number.isNaN(+material.price)){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(material.ename, material.price);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyCostData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.cost.length || Number.isNaN(+this.cost)){\n\t\t\t\t\t\t\t\t\t\tthis.cost = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyAndSaveSellData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.sell.length || Number.isNaN(+this.sell)){\n\t\t\t\t\t\t\t\t\t\tthis.sell = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('sell', this.sell);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeCost: function(){\n\t\t\t\t\t\t\t\t\tlet cost = 0;\n\t\t\t\t\t\t\t\t\tconst materials = this.materials;\n\t\t\t\t\t\t\t\t\tfor(const material of materials){\n\t\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveMaterialsData(material);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcost += +materials[0].price;\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[1].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[2].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[3].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[4].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[5].price);\n\t\t\t\t\t\t\t\t\tcost *= 333;\n\t\t\t\t\t\t\t\t\tthis.cost = String(cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasMaterialPrices\", true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeProfit: function(){\n\t\t\t\t\t\t\t\t\tthis.fillEmptyCostData();\n\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveSellData();\n\t\t\t\t\t\t\t\t\tthis.profit = (+this.sell)-(+this.cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasSellPrice\", true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t</script>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","source":"巨匠手工收益计算器/index.html","raw":"layout: false\n---\n<!DOCTYPE html>\n<html lang=\"zh\">\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"theme-color\" content=\"#000000\">\n\t\t<title>巨匠手工收益计算器</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta name=\"author\" content=\"陈俪影\">\n\t\t<meta name=\"keywords\" content>\n\t\t<meta name=\"description\" content=\"陈俪影的博客\">\n\t\t<link rel=\"shortcut icon\" href=\"//cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/物理2-飞船2.svg\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t<link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+SC&display=swap\" rel=\"stylesheet\">\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script>\n\n\t\t<style type=\"text/css\">\n\t\t    @media (max-width: 768px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t    \t\twidth: 100%;\n\t\t    \t\theight: 90vh;\n\t\t    \t\tflex: 0 0 90vh;\n\t\t    \t}\n\t\t    \t#picture_container_cat{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: 1vh;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 10vh;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tword-break: break-all;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 35px;\n\t\t\t\t\theight: 35px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t    }\n\t\t    @media (min-width: 769px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 90vh;\n\t\t\t\t\tflex: 0 0 90vh;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t#picture_container_cat{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 0 1;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 1 0 60%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t    margin: 1.5vh;\n\t\t\t\t    position: absolute;\n\t\t\t    }\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t                border-radius: 2vh;\n\t                width: max-content;\n\t                height: max-content;\n\t                font-size: 13px;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t                padding: 2vh;\n\t                cursor: pointer;\n\t\t\t\t}\n\t\t\t\t.btn:hover{\n\t\t\t\t\tcolor: mistyrose;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t\theight: 50px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 110px;\n\t\t\t\t}\n\t\t    }\n\t\t    #main{\n\t\t    \tbackground-color: white;\n\t    \t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t    \t\twidth: 100vw;\n\t    \t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: space-between;\n\t\t    }\n\t\t    #line{\n\t\t    \twidth: 100%;\n\t\t    \tflex: 0 0 1vh;\n\t\t    \tbackground-color: lightcoral;\n\t\t    }\n\t\t\t#img_cat{\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t#content_3{\n\t\t\t\twidth: 90%;\n\t\t\t\theight: 90%;\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.content_col{\n\t\t\t\tdisplay: table;\n\t\t\t\tflex: 0 0 40%;\n\t\t\t\tmargin: 5%;\n\t\t\t}\n\t\t\t.content_table_row{\n\t\t\t\tdisplay: table-row;\n\t\t\t\t/*text-align: center;*/\n\t\t\t}\n/*\t\t\t.content_table_col{\n\t\t\t\tdisplay: table-column;\n\t\t\t}*/\n\t\t\t.content_table_cell{\n\t\t\t\tdisplay: table-cell;\n\t\t\t\ttext-align: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t\t.content_table_text{\n\t\t\t\tdisplay: table-caption;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<form class=\"btn_form\" id=\"btn_form_back\" method=\"get\" action=\"../index.html\" target=\"_self\">\n\t\t\t\t<button class=\"btn\" id=\"btn_back\">返回主页</button>\n\t\t\t</form>\n\t\t\t<div id=\"header\">\t\n\t\t\t\t<div id=\"title\">巨匠手工收益计算器</div>\n\t\t\t</div>\n\t\t\t<div id=\"line\"></div>\n\t\t\t<div id=\"content_1\">\n\t\t\t\t<div class=\"picture_container\" id=\"picture_container_cat\">\n\t\t\t\t\t<img id=\"img_cat\" src=\"巨匠猫猫.png\">\n\t\t\t\t</div>\n\t\t\t\t<div id=\"content_2\">\n\t\t\t\t\t<div id=\"content_3\">\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_text\">请输入材料的价格</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\" v-for=\"(item, index) in materials\">\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><img class='material' v-bind:src=\"item.name +'.png'\"></div>\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><input class=\"input_price\" type=\"number\" v-model=\"materials[index].price\">/个</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeCost\">通过材料费计算成本</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)成本<input class=\"input_compute\" type=\"number\" v-model=\"cost\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\t\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)售价<input class=\"input_compute\" type=\"number\" v-model=\"sell\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeProfit\">通过成本和售价计算利润</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)利润<input class=\"input_compute\" type=\"number\" v-bind:value=\"profit\" readonly=\"true\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\t\tvar content3 = new Vue({\n\t\t\t\t\t\t\tel: '#content_3',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tmaterials: [\n\t\t\t\t\t\t\t\t  { id: 0, name: '地下天然水', ename:'price_water', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 1, name: '水螅虫的伞盖', ename:'price_hydra', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 2, name: '青柠罗勒草', ename:'price_herb', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 3, name: '葛根', ename:'price_geroot', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 4, name: '雷之水晶', ename:'price_thunder_crys', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 5, name: '水之水晶', ename:'price_water_crys', price: '0' },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcost: '0',\n\t\t\t\t\t\t\t\tsell: '0',\n\t\t\t\t\t\t\t\tprofit: '0',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreated: function(){\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasMaterialPrices\")){\n\t\t\t\t\t\t\t\t\tfor(const material of this.materials){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = localStorage.getItem(material.ename);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasSellPrice\")){\n\t\t\t\t\t\t\t\t\tthis.sell = localStorage.getItem('sell');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethods: {\n\t\t\t\t\t\t\t\tfillEmptyAndSaveMaterialsData: function(material){\n\t\t\t\t\t\t\t\t\tif(!material.price.length || Number.isNaN(+material.price)){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(material.ename, material.price);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyCostData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.cost.length || Number.isNaN(+this.cost)){\n\t\t\t\t\t\t\t\t\t\tthis.cost = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyAndSaveSellData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.sell.length || Number.isNaN(+this.sell)){\n\t\t\t\t\t\t\t\t\t\tthis.sell = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('sell', this.sell);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeCost: function(){\n\t\t\t\t\t\t\t\t\tlet cost = 0;\n\t\t\t\t\t\t\t\t\tconst materials = this.materials;\n\t\t\t\t\t\t\t\t\tfor(const material of materials){\n\t\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveMaterialsData(material);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcost += +materials[0].price;\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[1].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[2].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[3].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[4].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[5].price);\n\t\t\t\t\t\t\t\t\tcost *= 333;\n\t\t\t\t\t\t\t\t\tthis.cost = String(cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasMaterialPrices\", true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeProfit: function(){\n\t\t\t\t\t\t\t\t\tthis.fillEmptyCostData();\n\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveSellData();\n\t\t\t\t\t\t\t\t\tthis.profit = (+this.sell)-(+this.cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasSellPrice\", true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t</script>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","date":"2021-11-30T21:46:02.561Z","updated":"2021-11-30T21:46:02.561Z","path":"巨匠手工收益计算器/index.html","title":"","comments":1,"_id":"ckwmo9e3y0002lsv09nvzda5n","content":"<!DOCTYPE html>\n<html lang=\"zh\">\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"theme-color\" content=\"#000000\">\n\t\t<title>巨匠手工收益计算器</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta name=\"author\" content=\"陈俪影\">\n\t\t<meta name=\"keywords\" content>\n\t\t<meta name=\"description\" content=\"陈俪影的博客\">\n\t\t<link rel=\"shortcut icon\" href=\"//cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/物理2-飞船2.svg\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t<link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+SC&display=swap\" rel=\"stylesheet\">\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script>\n\n\t\t<style type=\"text/css\">\n\t\t    @media (max-width: 768px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t    \t\twidth: 100%;\n\t\t    \t\theight: 90vh;\n\t\t    \t\tflex: 0 0 90vh;\n\t\t    \t}\n\t\t    \t#picture_container_cat{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: 1vh;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 10vh;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tword-break: break-all;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 35px;\n\t\t\t\t\theight: 35px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t    }\n\t\t    @media (min-width: 769px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 90vh;\n\t\t\t\t\tflex: 0 0 90vh;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t#picture_container_cat{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 0 1;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 1 0 60%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t    margin: 1.5vh;\n\t\t\t\t    position: absolute;\n\t\t\t    }\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t                border-radius: 2vh;\n\t                width: max-content;\n\t                height: max-content;\n\t                font-size: 13px;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t                padding: 2vh;\n\t                cursor: pointer;\n\t\t\t\t}\n\t\t\t\t.btn:hover{\n\t\t\t\t\tcolor: mistyrose;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t\theight: 50px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 110px;\n\t\t\t\t}\n\t\t    }\n\t\t    #main{\n\t\t    \tbackground-color: white;\n\t    \t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t    \t\twidth: 100vw;\n\t    \t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: space-between;\n\t\t    }\n\t\t    #line{\n\t\t    \twidth: 100%;\n\t\t    \tflex: 0 0 1vh;\n\t\t    \tbackground-color: lightcoral;\n\t\t    }\n\t\t\t#img_cat{\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t#content_3{\n\t\t\t\twidth: 90%;\n\t\t\t\theight: 90%;\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.content_col{\n\t\t\t\tdisplay: table;\n\t\t\t\tflex: 0 0 40%;\n\t\t\t\tmargin: 5%;\n\t\t\t}\n\t\t\t.content_table_row{\n\t\t\t\tdisplay: table-row;\n\t\t\t\t/*text-align: center;*/\n\t\t\t}\n/*\t\t\t.content_table_col{\n\t\t\t\tdisplay: table-column;\n\t\t\t}*/\n\t\t\t.content_table_cell{\n\t\t\t\tdisplay: table-cell;\n\t\t\t\ttext-align: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t\t.content_table_text{\n\t\t\t\tdisplay: table-caption;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<form class=\"btn_form\" id=\"btn_form_back\" method=\"get\" action=\"../index.html\" target=\"_self\">\n\t\t\t\t<button class=\"btn\" id=\"btn_back\">返回主页</button>\n\t\t\t</form>\n\t\t\t<div id=\"header\">\t\n\t\t\t\t<div id=\"title\">巨匠手工收益计算器</div>\n\t\t\t</div>\n\t\t\t<div id=\"line\"></div>\n\t\t\t<div id=\"content_1\">\n\t\t\t\t<div class=\"picture_container\" id=\"picture_container_cat\">\n\t\t\t\t\t<img id=\"img_cat\" src=\"/%E5%B7%A8%E5%8C%A0%E6%89%8B%E5%B7%A5%E6%94%B6%E7%9B%8A%E8%AE%A1%E7%AE%97%E5%99%A8/index/巨匠猫猫.png\">\n\t\t\t\t</div>\n\t\t\t\t<div id=\"content_2\">\n\t\t\t\t\t<div id=\"content_3\">\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_text\">请输入材料的价格</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\" v-for=\"(item, index) in materials\">\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><img class=\"material\" v-bind:src=\"item.name +'.png'\"></div>\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><input class=\"input_price\" type=\"number\" v-model=\"materials[index].price\">/个</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeCost\">通过材料费计算成本</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)成本<input class=\"input_compute\" type=\"number\" v-model=\"cost\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\t\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)售价<input class=\"input_compute\" type=\"number\" v-model=\"sell\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeProfit\">通过成本和售价计算利润</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)利润<input class=\"input_compute\" type=\"number\" v-bind:value=\"profit\" readonly=\"true\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\t\tvar content3 = new Vue({\n\t\t\t\t\t\t\tel: '#content_3',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tmaterials: [\n\t\t\t\t\t\t\t\t  { id: 0, name: '地下天然水', ename:'price_water', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 1, name: '水螅虫的伞盖', ename:'price_hydra', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 2, name: '青柠罗勒草', ename:'price_herb', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 3, name: '葛根', ename:'price_geroot', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 4, name: '雷之水晶', ename:'price_thunder_crys', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 5, name: '水之水晶', ename:'price_water_crys', price: '0' },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcost: '0',\n\t\t\t\t\t\t\t\tsell: '0',\n\t\t\t\t\t\t\t\tprofit: '0',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreated: function(){\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasMaterialPrices\")){\n\t\t\t\t\t\t\t\t\tfor(const material of this.materials){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = localStorage.getItem(material.ename);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasSellPrice\")){\n\t\t\t\t\t\t\t\t\tthis.sell = localStorage.getItem('sell');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethods: {\n\t\t\t\t\t\t\t\tfillEmptyAndSaveMaterialsData: function(material){\n\t\t\t\t\t\t\t\t\tif(!material.price.length || Number.isNaN(+material.price)){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(material.ename, material.price);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyCostData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.cost.length || Number.isNaN(+this.cost)){\n\t\t\t\t\t\t\t\t\t\tthis.cost = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyAndSaveSellData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.sell.length || Number.isNaN(+this.sell)){\n\t\t\t\t\t\t\t\t\t\tthis.sell = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('sell', this.sell);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeCost: function(){\n\t\t\t\t\t\t\t\t\tlet cost = 0;\n\t\t\t\t\t\t\t\t\tconst materials = this.materials;\n\t\t\t\t\t\t\t\t\tfor(const material of materials){\n\t\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveMaterialsData(material);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcost += +materials[0].price;\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[1].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[2].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[3].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[4].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[5].price);\n\t\t\t\t\t\t\t\t\tcost *= 333;\n\t\t\t\t\t\t\t\t\tthis.cost = String(cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasMaterialPrices\", true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeProfit: function(){\n\t\t\t\t\t\t\t\t\tthis.fillEmptyCostData();\n\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveSellData();\n\t\t\t\t\t\t\t\t\tthis.profit = (+this.sell)-(+this.cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasSellPrice\", true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t</script>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"zh\">\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"theme-color\" content=\"#000000\">\n\t\t<title>巨匠手工收益计算器</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta name=\"author\" content=\"陈俪影\">\n\t\t<meta name=\"keywords\" content>\n\t\t<meta name=\"description\" content=\"陈俪影的博客\">\n\t\t<link rel=\"shortcut icon\" href=\"//cdn.jsdelivr.net/gh/MaryCLY/blog_cdn/source/images/物理2-飞船2.svg\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t<link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+SC&display=swap\" rel=\"stylesheet\">\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script>\n\n\t\t<style type=\"text/css\">\n\t\t    @media (max-width: 768px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t    \t\twidth: 100%;\n\t\t    \t\theight: 90vh;\n\t\t    \t\tflex: 0 0 90vh;\n\t\t    \t}\n\t\t    \t#picture_container_cat{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: 1vh;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 10vh;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tword-break: break-all;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 35px;\n\t\t\t\t\theight: 35px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t    }\n\t\t    @media (min-width: 769px){\n\t\t    \t#header{\n\t\t    \t\twidth: 100%;\n\t\t    \t\tflex: 0 0 9vh;\n\t\t    \t\tdisplay: flex;\n\t\t    \t\tjustify-content: center;\n\t\t    \t\talign-items: center;\n\t\t    \t}\n\t\t    \t#content_1{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 90vh;\n\t\t\t\t\tflex: 0 0 90vh;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t#picture_container_cat{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 0 1;\n\t\t\t\t}\n\t\t\t\t#content_2{\n\t\t\t\t\theight: 80%;\n\t\t\t\t\tflex: 1 0 60%;\n\t\t\t\t\tbackground-image: url('背景1.jpg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t    background-repeat: no-repeat;\n\t\t\t\t    background-position: center;\n\t\t\t\t    display: flex;\n\t\t\t\t    align-items: center;\n\t\t\t\t    justify-content: center;\n\t\t\t\t}\n\t\t\t\t#btn_form_back{\n\t\t\t\t    margin: 1.5vh;\n\t\t\t\t    position: absolute;\n\t\t\t    }\n\t\t\t\t.btn_form{\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.btn{\n\t\t\t\t\tbackground-color: lightcoral;\n\t\t\t\t\tborder: none;\n\t                border-radius: 2vh;\n\t                width: max-content;\n\t                height: max-content;\n\t                font-size: 13px;\n\t                font-family: 'Noto Serif SC', serif;\n\t                font-weight: bold;\n\t                color: white;\n\t                padding: 2vh;\n\t                cursor: pointer;\n\t\t\t\t}\n\t\t\t\t.btn:hover{\n\t\t\t\t\tcolor: mistyrose;\n\t\t\t\t}\n\t\t\t\t#title{\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t\t}\n\t\t\t\t.material{\n\t\t\t\t\twidth: 50px;\n\t\t\t\t\theight: 50px;\n\t\t\t\t}\n\t\t\t\t.input_price{\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\t.input_compute{\n\t\t\t\t\twidth: 110px;\n\t\t\t\t}\n\t\t    }\n\t\t    #main{\n\t\t    \tbackground-color: white;\n\t    \t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t    \t\twidth: 100vw;\n\t    \t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: space-between;\n\t\t    }\n\t\t    #line{\n\t\t    \twidth: 100%;\n\t\t    \tflex: 0 0 1vh;\n\t\t    \tbackground-color: lightcoral;\n\t\t    }\n\t\t\t#img_cat{\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t#content_3{\n\t\t\t\twidth: 90%;\n\t\t\t\theight: 90%;\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.8);\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.content_col{\n\t\t\t\tdisplay: table;\n\t\t\t\tflex: 0 0 40%;\n\t\t\t\tmargin: 5%;\n\t\t\t}\n\t\t\t.content_table_row{\n\t\t\t\tdisplay: table-row;\n\t\t\t\t/*text-align: center;*/\n\t\t\t}\n/*\t\t\t.content_table_col{\n\t\t\t\tdisplay: table-column;\n\t\t\t}*/\n\t\t\t.content_table_cell{\n\t\t\t\tdisplay: table-cell;\n\t\t\t\ttext-align: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t\t.content_table_text{\n\t\t\t\tdisplay: table-caption;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: 'Noto Serif SC', serif;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<form class=\"btn_form\" id=\"btn_form_back\" method=\"get\" action=\"../index.html\" target=\"_self\">\n\t\t\t\t<button class=\"btn\" id=\"btn_back\">返回主页</button>\n\t\t\t</form>\n\t\t\t<div id=\"header\">\t\n\t\t\t\t<div id=\"title\">巨匠手工收益计算器</div>\n\t\t\t</div>\n\t\t\t<div id=\"line\"></div>\n\t\t\t<div id=\"content_1\">\n\t\t\t\t<div class=\"picture_container\" id=\"picture_container_cat\">\n\t\t\t\t\t<img id=\"img_cat\" src=\"/%E5%B7%A8%E5%8C%A0%E6%89%8B%E5%B7%A5%E6%94%B6%E7%9B%8A%E8%AE%A1%E7%AE%97%E5%99%A8/index/巨匠猫猫.png\">\n\t\t\t\t</div>\n\t\t\t\t<div id=\"content_2\">\n\t\t\t\t\t<div id=\"content_3\">\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_text\">请输入材料的价格</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\" v-for=\"(item, index) in materials\">\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><img class=\"material\" v-bind:src=\"item.name +'.png'\"></div>\n\t\t\t\t\t\t\t\t  <div class=\"content_table_cell\"><input class=\"input_price\" type=\"number\" v-model=\"materials[index].price\">/个</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"content_col\">\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeCost\">通过材料费计算成本</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)成本<input class=\"input_compute\" type=\"number\" v-model=\"cost\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\t\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)售价<input class=\"input_compute\" type=\"number\" v-model=\"sell\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn\" v-on:click=\"computeProfit\">通过成本和售价计算利润</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"content_table_row\">\n\t\t\t\t\t\t\t\t<div class=\"content_table_cell\">\n\t\t\t\t\t\t\t\t\t一组(999)利润<input class=\"input_compute\" type=\"number\" v-bind:value=\"profit\" readonly=\"true\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\t\tvar content3 = new Vue({\n\t\t\t\t\t\t\tel: '#content_3',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tmaterials: [\n\t\t\t\t\t\t\t\t  { id: 0, name: '地下天然水', ename:'price_water', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 1, name: '水螅虫的伞盖', ename:'price_hydra', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 2, name: '青柠罗勒草', ename:'price_herb', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 3, name: '葛根', ename:'price_geroot', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 4, name: '雷之水晶', ename:'price_thunder_crys', price: '0' },\n\t\t\t\t\t\t\t\t  { id: 5, name: '水之水晶', ename:'price_water_crys', price: '0' },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcost: '0',\n\t\t\t\t\t\t\t\tsell: '0',\n\t\t\t\t\t\t\t\tprofit: '0',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreated: function(){\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasMaterialPrices\")){\n\t\t\t\t\t\t\t\t\tfor(const material of this.materials){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = localStorage.getItem(material.ename);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(localStorage.getItem(\"hasSellPrice\")){\n\t\t\t\t\t\t\t\t\tthis.sell = localStorage.getItem('sell');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethods: {\n\t\t\t\t\t\t\t\tfillEmptyAndSaveMaterialsData: function(material){\n\t\t\t\t\t\t\t\t\tif(!material.price.length || Number.isNaN(+material.price)){\n\t\t\t\t\t\t\t\t\t\tmaterial.price = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(material.ename, material.price);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyCostData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.cost.length || Number.isNaN(+this.cost)){\n\t\t\t\t\t\t\t\t\t\tthis.cost = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfillEmptyAndSaveSellData: function(){\n\t\t\t\t\t\t\t\t\tif(!this.sell.length || Number.isNaN(+this.sell)){\n\t\t\t\t\t\t\t\t\t\tthis.sell = '0';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('sell', this.sell);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeCost: function(){\n\t\t\t\t\t\t\t\t\tlet cost = 0;\n\t\t\t\t\t\t\t\t\tconst materials = this.materials;\n\t\t\t\t\t\t\t\t\tfor(const material of materials){\n\t\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveMaterialsData(material);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcost += +materials[0].price;\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[1].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[2].price);\n\t\t\t\t\t\t\t\t\tcost += 2 * (+materials[3].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[4].price);\n\t\t\t\t\t\t\t\t\tcost += 7 * (+materials[5].price);\n\t\t\t\t\t\t\t\t\tcost *= 333;\n\t\t\t\t\t\t\t\t\tthis.cost = String(cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasMaterialPrices\", true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcomputeProfit: function(){\n\t\t\t\t\t\t\t\t\tthis.fillEmptyCostData();\n\t\t\t\t\t\t\t\t\tthis.fillEmptyAndSaveSellData();\n\t\t\t\t\t\t\t\t\tthis.profit = (+this.sell)-(+this.cost);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"hasSellPrice\", true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t</script>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>"}],"Post":[{"title":"JS: Union-find(quick-union + weighting + path compression + map)","date":"2021-08-20T01:52:59.000Z","comment":true,"_content":"\n## 简介\n\nUnion-find，合并-查找，这个算法是在学习Algorithms这本书的时候看到的。\n\n### 用于解决的问题\n\n假定一个学校的圈子中，有A,B,C...这些人，而A,B存在联系，B,C存在联系，若要寻找A,C是否存在联系，只要存在B这个媒介，那么就说明有联系。为了建立这样的关系网，把存在联系的人连接合并成集合，这样在判断联系时，只需要判断是否存在这个集合里即可。抽象地说，就是在一个图中划分出连通子图。\n\n### 核心的方法需求\n\nUnion(p, q): 将点p和点q建立连接的方法。\n\nFind(p): 寻找点p所在的子集。通常用Find(p)==Find(q)来判断p和q具有连通性。\n\n<!-- more -->\n\n## 基本构建思路\n\n### Quick-Find\n\n这是最大化搜索效率的思路。在进行Union的时候会让所有的节点保存root（根节点），每次连接的时候为连通的节点设置同一个root，这样find时只需要读取root这个值即可。\n\n#### 图解\n\n![quick-find图解](qf1.png)\n\n#### Java代码\n\n![quick-find代码](qf2.png)\n\n#### 缺点\n\n如果一条很长的链被合并，可能需要大量地改变root值。\n\n### Quick-Union\n\n这是最大化合并效率的思路。在进行Union时只保存上级节点，这样find的时候一直追溯到根节点，也能判断是否在同个子集。\n\n此时使用类似链表的数据结构十分恰当。\n\n#### 图解\n\n![quick-union图解](qu1.png)\n\n#### Java代码\n\n![quick-union代码](qu2.png)\n\n#### 缺点\n\n如果有一条很长的链，查找效率会很低。\n\n### 二者比较\n\n#### 共通点\n\n不管是quick-find还是quick-union，算法中都有这样的共通点：\n\n1.每次union时会判断是否同根，如果是则直接跳过。\n\n2.在进行两个子集的union时，会连接两个子集的root。\n\n#### 时间复杂度比较\n\n![时间复杂度比较](compare.png)\n\n因为quick-union每次都要查找，所以在最坏情况下合并的效率跟quick-find拥有相同的复杂度，但好的情况下合并的效率会大大提高。\n\n由于quick-union的方法更优雅，我们接下来会采用quick-union并尝试优化。\n\n## Quick-Union算法的优化\n\n### Map\n\n因为所有的节点都有唯一的id，在我的算法中相比书中使用数组会选择使用HashMap保存节点，这样能够提高索引效率。同时，因为每个节点只有唯一的parent，而可能有多个child，且find过程中也只是追溯parent，所以只单向保存parent的id。\n\n结构：{key: id, value: parent_id}\n\n### Weighting\n\nWeighting，即平衡重量。基本思路是判断两个要合并的root的child数量，将小的合并到大的，这样可以避免生成长子链，然后提高查找效率。\n\n#### 图解\n\n![weighting图解](weighting.png)\n\n#### 代码变动\n\n由于每个节点只保存了parent，故无法追溯child的长度，因此每个节点新增一个size属性，每次union时将child以及其对应的子集size合并到该节点的size中。\n\nmap结构变化: {key: id, value: {parent: parent_id, size: size}}\n\nunion时： map.get([要合并的parent]).size+=map.get([被合并的child]).size +1 //+1是child本身\n\n### Path Compression\n\nPath Compression，即路径压缩。基本思路是在每次合并的时候直接将child（的root）合并到parent的root上，这样也可以避免生成长子链。\n\n#### 图解\n\n![path-compression图解](path-compression.jpg)\n\n## 最终代码\n\nquick-union + weighting + path compression + map\n\n``` javascript Union-Find.js\nconst map = new Map();\nclass Node {\n    //每个节点保存的结构\n    constructor(parent, size){\n        this.parent = parent || null;\n        this.size = size || 0;\n    }\n}\n\nfunction union(p, q){\n    if(!map.has(p)||!map.has(q)){\n        //有一个不在map里，说明是游离节点，自动设为child\n        if(!map.has(p)){\n            var child = p, parent = find(q); //path compression 父母直接设给根节点\n        } else {\n            var child = q, parent = find(p);\n        }\n        map.set(child, new Node(parent, 0));\n    } else {\n        //均存在map中，需要进行weighting的两个节点\n        const pr = find(p), qr = find(q), prs = map.get(pr).size, qrs = map.get(qr).size; //暂存两个节点的root\n        if(pr===qr){\n            //如果已经连通，不需要再连接了\n            return;\n        }\n        if(prs < qrs){\n            //把容量更小的那个设为child被合并\n            var child = pr, parent = qr;\n        } else {\n            var child = qr, parent = pr;\n        }\n        //root应该都存在map中\n        map.get(child).parent = parent;\n    }\n    if(!map.has(parent)){\n        map.set(parent, new Node(parent, map.get(child).size+1)); //map中新建一个root node，root的parent设给自己\n    } else {\n        map.get(parent).size+=map.get(child).size+1; //合并size\n    }\n};\n\nfunction find(p){\n    if(!map.has(p)){\n        return p;\n    }\n    while(map.get(p).parent!=p){\n        //如果parent等于自己，说明已经是根节点了，否则再往上追溯一个parent\n        p = map.get(p).parent;\n    }\n    return p;\n};\n\nfunction isConnected(p, q){\n    return (find(p)===find(q));\n}\n```\n\n## 时间复杂度\n\n最后贴上algorithms书中的各种方法的时间复杂度：\n\n![时间复杂度比较](compare-final.png)\n\n有weighting和path compression的quick union时间复杂度无限接近1。","source":"_posts/JS-Union-find-quick-union-weighting-path-compression-map.md","raw":"---\ntitle: 'JS: Union-find(quick-union + weighting + path compression + map)'\ndate: 2021-08-20 09:52:59\ntags: [JS, 算法]\ncategories: [JS, 算法]\ncomment: true\n---\n\n## 简介\n\nUnion-find，合并-查找，这个算法是在学习Algorithms这本书的时候看到的。\n\n### 用于解决的问题\n\n假定一个学校的圈子中，有A,B,C...这些人，而A,B存在联系，B,C存在联系，若要寻找A,C是否存在联系，只要存在B这个媒介，那么就说明有联系。为了建立这样的关系网，把存在联系的人连接合并成集合，这样在判断联系时，只需要判断是否存在这个集合里即可。抽象地说，就是在一个图中划分出连通子图。\n\n### 核心的方法需求\n\nUnion(p, q): 将点p和点q建立连接的方法。\n\nFind(p): 寻找点p所在的子集。通常用Find(p)==Find(q)来判断p和q具有连通性。\n\n<!-- more -->\n\n## 基本构建思路\n\n### Quick-Find\n\n这是最大化搜索效率的思路。在进行Union的时候会让所有的节点保存root（根节点），每次连接的时候为连通的节点设置同一个root，这样find时只需要读取root这个值即可。\n\n#### 图解\n\n![quick-find图解](qf1.png)\n\n#### Java代码\n\n![quick-find代码](qf2.png)\n\n#### 缺点\n\n如果一条很长的链被合并，可能需要大量地改变root值。\n\n### Quick-Union\n\n这是最大化合并效率的思路。在进行Union时只保存上级节点，这样find的时候一直追溯到根节点，也能判断是否在同个子集。\n\n此时使用类似链表的数据结构十分恰当。\n\n#### 图解\n\n![quick-union图解](qu1.png)\n\n#### Java代码\n\n![quick-union代码](qu2.png)\n\n#### 缺点\n\n如果有一条很长的链，查找效率会很低。\n\n### 二者比较\n\n#### 共通点\n\n不管是quick-find还是quick-union，算法中都有这样的共通点：\n\n1.每次union时会判断是否同根，如果是则直接跳过。\n\n2.在进行两个子集的union时，会连接两个子集的root。\n\n#### 时间复杂度比较\n\n![时间复杂度比较](compare.png)\n\n因为quick-union每次都要查找，所以在最坏情况下合并的效率跟quick-find拥有相同的复杂度，但好的情况下合并的效率会大大提高。\n\n由于quick-union的方法更优雅，我们接下来会采用quick-union并尝试优化。\n\n## Quick-Union算法的优化\n\n### Map\n\n因为所有的节点都有唯一的id，在我的算法中相比书中使用数组会选择使用HashMap保存节点，这样能够提高索引效率。同时，因为每个节点只有唯一的parent，而可能有多个child，且find过程中也只是追溯parent，所以只单向保存parent的id。\n\n结构：{key: id, value: parent_id}\n\n### Weighting\n\nWeighting，即平衡重量。基本思路是判断两个要合并的root的child数量，将小的合并到大的，这样可以避免生成长子链，然后提高查找效率。\n\n#### 图解\n\n![weighting图解](weighting.png)\n\n#### 代码变动\n\n由于每个节点只保存了parent，故无法追溯child的长度，因此每个节点新增一个size属性，每次union时将child以及其对应的子集size合并到该节点的size中。\n\nmap结构变化: {key: id, value: {parent: parent_id, size: size}}\n\nunion时： map.get([要合并的parent]).size+=map.get([被合并的child]).size +1 //+1是child本身\n\n### Path Compression\n\nPath Compression，即路径压缩。基本思路是在每次合并的时候直接将child（的root）合并到parent的root上，这样也可以避免生成长子链。\n\n#### 图解\n\n![path-compression图解](path-compression.jpg)\n\n## 最终代码\n\nquick-union + weighting + path compression + map\n\n``` javascript Union-Find.js\nconst map = new Map();\nclass Node {\n    //每个节点保存的结构\n    constructor(parent, size){\n        this.parent = parent || null;\n        this.size = size || 0;\n    }\n}\n\nfunction union(p, q){\n    if(!map.has(p)||!map.has(q)){\n        //有一个不在map里，说明是游离节点，自动设为child\n        if(!map.has(p)){\n            var child = p, parent = find(q); //path compression 父母直接设给根节点\n        } else {\n            var child = q, parent = find(p);\n        }\n        map.set(child, new Node(parent, 0));\n    } else {\n        //均存在map中，需要进行weighting的两个节点\n        const pr = find(p), qr = find(q), prs = map.get(pr).size, qrs = map.get(qr).size; //暂存两个节点的root\n        if(pr===qr){\n            //如果已经连通，不需要再连接了\n            return;\n        }\n        if(prs < qrs){\n            //把容量更小的那个设为child被合并\n            var child = pr, parent = qr;\n        } else {\n            var child = qr, parent = pr;\n        }\n        //root应该都存在map中\n        map.get(child).parent = parent;\n    }\n    if(!map.has(parent)){\n        map.set(parent, new Node(parent, map.get(child).size+1)); //map中新建一个root node，root的parent设给自己\n    } else {\n        map.get(parent).size+=map.get(child).size+1; //合并size\n    }\n};\n\nfunction find(p){\n    if(!map.has(p)){\n        return p;\n    }\n    while(map.get(p).parent!=p){\n        //如果parent等于自己，说明已经是根节点了，否则再往上追溯一个parent\n        p = map.get(p).parent;\n    }\n    return p;\n};\n\nfunction isConnected(p, q){\n    return (find(p)===find(q));\n}\n```\n\n## 时间复杂度\n\n最后贴上algorithms书中的各种方法的时间复杂度：\n\n![时间复杂度比较](compare-final.png)\n\n有weighting和path compression的quick union时间复杂度无限接近1。","slug":"JS-Union-find-quick-union-weighting-path-compression-map","published":1,"updated":"2021-11-29T19:48:47.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e3w0001lsv0hh9t23tf","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Union-find，合并-查找，这个算法是在学习Algorithms这本书的时候看到的。</p>\n<h3 id=\"用于解决的问题\"><a href=\"#用于解决的问题\" class=\"headerlink\" title=\"用于解决的问题\"></a>用于解决的问题</h3><p>假定一个学校的圈子中，有A,B,C…这些人，而A,B存在联系，B,C存在联系，若要寻找A,C是否存在联系，只要存在B这个媒介，那么就说明有联系。为了建立这样的关系网，把存在联系的人连接合并成集合，这样在判断联系时，只需要判断是否存在这个集合里即可。抽象地说，就是在一个图中划分出连通子图。</p>\n<h3 id=\"核心的方法需求\"><a href=\"#核心的方法需求\" class=\"headerlink\" title=\"核心的方法需求\"></a>核心的方法需求</h3><p>Union(p, q): 将点p和点q建立连接的方法。</p>\n<p>Find(p): 寻找点p所在的子集。通常用Find(p)==Find(q)来判断p和q具有连通性。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"基本构建思路\"><a href=\"#基本构建思路\" class=\"headerlink\" title=\"基本构建思路\"></a>基本构建思路</h2><h3 id=\"Quick-Find\"><a href=\"#Quick-Find\" class=\"headerlink\" title=\"Quick-Find\"></a>Quick-Find</h3><p>这是最大化搜索效率的思路。在进行Union的时候会让所有的节点保存root（根节点），每次连接的时候为连通的节点设置同一个root，这样find时只需要读取root这个值即可。</p>\n<h4 id=\"图解\"><a href=\"#图解\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//qf1.png\" alt=\"quick-find图解\"></p>\n<h4 id=\"Java代码\"><a href=\"#Java代码\" class=\"headerlink\" title=\"Java代码\"></a>Java代码</h4><p><img src=\"/.io//qf2.png\" alt=\"quick-find代码\"></p>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>如果一条很长的链被合并，可能需要大量地改变root值。</p>\n<h3 id=\"Quick-Union\"><a href=\"#Quick-Union\" class=\"headerlink\" title=\"Quick-Union\"></a>Quick-Union</h3><p>这是最大化合并效率的思路。在进行Union时只保存上级节点，这样find的时候一直追溯到根节点，也能判断是否在同个子集。</p>\n<p>此时使用类似链表的数据结构十分恰当。</p>\n<h4 id=\"图解-1\"><a href=\"#图解-1\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//qu1.png\" alt=\"quick-union图解\"></p>\n<h4 id=\"Java代码-1\"><a href=\"#Java代码-1\" class=\"headerlink\" title=\"Java代码\"></a>Java代码</h4><p><img src=\"/.io//qu2.png\" alt=\"quick-union代码\"></p>\n<h4 id=\"缺点-1\"><a href=\"#缺点-1\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>如果有一条很长的链，查找效率会很低。</p>\n<h3 id=\"二者比较\"><a href=\"#二者比较\" class=\"headerlink\" title=\"二者比较\"></a>二者比较</h3><h4 id=\"共通点\"><a href=\"#共通点\" class=\"headerlink\" title=\"共通点\"></a>共通点</h4><p>不管是quick-find还是quick-union，算法中都有这样的共通点：</p>\n<p>1.每次union时会判断是否同根，如果是则直接跳过。</p>\n<p>2.在进行两个子集的union时，会连接两个子集的root。</p>\n<h4 id=\"时间复杂度比较\"><a href=\"#时间复杂度比较\" class=\"headerlink\" title=\"时间复杂度比较\"></a>时间复杂度比较</h4><p><img src=\"/.io//compare.png\" alt=\"时间复杂度比较\"></p>\n<p>因为quick-union每次都要查找，所以在最坏情况下合并的效率跟quick-find拥有相同的复杂度，但好的情况下合并的效率会大大提高。</p>\n<p>由于quick-union的方法更优雅，我们接下来会采用quick-union并尝试优化。</p>\n<h2 id=\"Quick-Union算法的优化\"><a href=\"#Quick-Union算法的优化\" class=\"headerlink\" title=\"Quick-Union算法的优化\"></a>Quick-Union算法的优化</h2><h3 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h3><p>因为所有的节点都有唯一的id，在我的算法中相比书中使用数组会选择使用HashMap保存节点，这样能够提高索引效率。同时，因为每个节点只有唯一的parent，而可能有多个child，且find过程中也只是追溯parent，所以只单向保存parent的id。</p>\n<p>结构：{key: id, value: parent_id}</p>\n<h3 id=\"Weighting\"><a href=\"#Weighting\" class=\"headerlink\" title=\"Weighting\"></a>Weighting</h3><p>Weighting，即平衡重量。基本思路是判断两个要合并的root的child数量，将小的合并到大的，这样可以避免生成长子链，然后提高查找效率。</p>\n<h4 id=\"图解-2\"><a href=\"#图解-2\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//weighting.png\" alt=\"weighting图解\"></p>\n<h4 id=\"代码变动\"><a href=\"#代码变动\" class=\"headerlink\" title=\"代码变动\"></a>代码变动</h4><p>由于每个节点只保存了parent，故无法追溯child的长度，因此每个节点新增一个size属性，每次union时将child以及其对应的子集size合并到该节点的size中。</p>\n<p>map结构变化: {key: id, value: {parent: parent_id, size: size}}</p>\n<p>union时： map.get([要合并的parent]).size+=map.get([被合并的child]).size +1 //+1是child本身</p>\n<h3 id=\"Path-Compression\"><a href=\"#Path-Compression\" class=\"headerlink\" title=\"Path Compression\"></a>Path Compression</h3><p>Path Compression，即路径压缩。基本思路是在每次合并的时候直接将child（的root）合并到parent的root上，这样也可以避免生成长子链。</p>\n<h4 id=\"图解-3\"><a href=\"#图解-3\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//path-compression.jpg\" alt=\"path-compression图解\"></p>\n<h2 id=\"最终代码\"><a href=\"#最终代码\" class=\"headerlink\" title=\"最终代码\"></a>最终代码</h2><p>quick-union + weighting + path compression + map</p>\n<figure class=\"highlight javascript\"><figcaption><span>Union-Find.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//每个节点保存的结构</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">parent, size</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.parent = parent || <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.size = size || <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">union</span>(<span class=\"params\">p, q</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(p)||!map.has(q))&#123;</span><br><span class=\"line\">        <span class=\"comment\">//有一个不在map里，说明是游离节点，自动设为child</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!map.has(p))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = p, parent = find(q); <span class=\"comment\">//path compression 父母直接设给根节点</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = q, parent = find(p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map.set(child, <span class=\"keyword\">new</span> Node(parent, <span class=\"number\">0</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//均存在map中，需要进行weighting的两个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> pr = find(p), qr = find(q), prs = map.get(pr).size, qrs = map.get(qr).size; <span class=\"comment\">//暂存两个节点的root</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pr===qr)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果已经连通，不需要再连接了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prs &lt; qrs)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//把容量更小的那个设为child被合并</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = pr, parent = qr;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = qr, parent = pr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//root应该都存在map中</span></span><br><span class=\"line\">        map.get(child).parent = parent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(parent))&#123;</span><br><span class=\"line\">        map.set(parent, <span class=\"keyword\">new</span> Node(parent, map.get(child).size+<span class=\"number\">1</span>)); <span class=\"comment\">//map中新建一个root node，root的parent设给自己</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        map.get(parent).size+=map.get(child).size+<span class=\"number\">1</span>; <span class=\"comment\">//合并size</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(p))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(map.get(p).parent!=p)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果parent等于自己，说明已经是根节点了，否则再往上追溯一个parent</span></span><br><span class=\"line\">        p = map.get(p).parent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isConnected</span>(<span class=\"params\">p, q</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (find(p)===find(q));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>最后贴上algorithms书中的各种方法的时间复杂度：</p>\n<p><img src=\"/.io//compare-final.png\" alt=\"时间复杂度比较\"></p>\n<p>有weighting和path compression的quick union时间复杂度无限接近1。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Union-find，合并-查找，这个算法是在学习Algorithms这本书的时候看到的。</p>\n<h3 id=\"用于解决的问题\"><a href=\"#用于解决的问题\" class=\"headerlink\" title=\"用于解决的问题\"></a>用于解决的问题</h3><p>假定一个学校的圈子中，有A,B,C…这些人，而A,B存在联系，B,C存在联系，若要寻找A,C是否存在联系，只要存在B这个媒介，那么就说明有联系。为了建立这样的关系网，把存在联系的人连接合并成集合，这样在判断联系时，只需要判断是否存在这个集合里即可。抽象地说，就是在一个图中划分出连通子图。</p>\n<h3 id=\"核心的方法需求\"><a href=\"#核心的方法需求\" class=\"headerlink\" title=\"核心的方法需求\"></a>核心的方法需求</h3><p>Union(p, q): 将点p和点q建立连接的方法。</p>\n<p>Find(p): 寻找点p所在的子集。通常用Find(p)==Find(q)来判断p和q具有连通性。</p>","more":"<h2 id=\"基本构建思路\"><a href=\"#基本构建思路\" class=\"headerlink\" title=\"基本构建思路\"></a>基本构建思路</h2><h3 id=\"Quick-Find\"><a href=\"#Quick-Find\" class=\"headerlink\" title=\"Quick-Find\"></a>Quick-Find</h3><p>这是最大化搜索效率的思路。在进行Union的时候会让所有的节点保存root（根节点），每次连接的时候为连通的节点设置同一个root，这样find时只需要读取root这个值即可。</p>\n<h4 id=\"图解\"><a href=\"#图解\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//qf1.png\" alt=\"quick-find图解\"></p>\n<h4 id=\"Java代码\"><a href=\"#Java代码\" class=\"headerlink\" title=\"Java代码\"></a>Java代码</h4><p><img src=\"/.io//qf2.png\" alt=\"quick-find代码\"></p>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>如果一条很长的链被合并，可能需要大量地改变root值。</p>\n<h3 id=\"Quick-Union\"><a href=\"#Quick-Union\" class=\"headerlink\" title=\"Quick-Union\"></a>Quick-Union</h3><p>这是最大化合并效率的思路。在进行Union时只保存上级节点，这样find的时候一直追溯到根节点，也能判断是否在同个子集。</p>\n<p>此时使用类似链表的数据结构十分恰当。</p>\n<h4 id=\"图解-1\"><a href=\"#图解-1\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//qu1.png\" alt=\"quick-union图解\"></p>\n<h4 id=\"Java代码-1\"><a href=\"#Java代码-1\" class=\"headerlink\" title=\"Java代码\"></a>Java代码</h4><p><img src=\"/.io//qu2.png\" alt=\"quick-union代码\"></p>\n<h4 id=\"缺点-1\"><a href=\"#缺点-1\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><p>如果有一条很长的链，查找效率会很低。</p>\n<h3 id=\"二者比较\"><a href=\"#二者比较\" class=\"headerlink\" title=\"二者比较\"></a>二者比较</h3><h4 id=\"共通点\"><a href=\"#共通点\" class=\"headerlink\" title=\"共通点\"></a>共通点</h4><p>不管是quick-find还是quick-union，算法中都有这样的共通点：</p>\n<p>1.每次union时会判断是否同根，如果是则直接跳过。</p>\n<p>2.在进行两个子集的union时，会连接两个子集的root。</p>\n<h4 id=\"时间复杂度比较\"><a href=\"#时间复杂度比较\" class=\"headerlink\" title=\"时间复杂度比较\"></a>时间复杂度比较</h4><p><img src=\"/.io//compare.png\" alt=\"时间复杂度比较\"></p>\n<p>因为quick-union每次都要查找，所以在最坏情况下合并的效率跟quick-find拥有相同的复杂度，但好的情况下合并的效率会大大提高。</p>\n<p>由于quick-union的方法更优雅，我们接下来会采用quick-union并尝试优化。</p>\n<h2 id=\"Quick-Union算法的优化\"><a href=\"#Quick-Union算法的优化\" class=\"headerlink\" title=\"Quick-Union算法的优化\"></a>Quick-Union算法的优化</h2><h3 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h3><p>因为所有的节点都有唯一的id，在我的算法中相比书中使用数组会选择使用HashMap保存节点，这样能够提高索引效率。同时，因为每个节点只有唯一的parent，而可能有多个child，且find过程中也只是追溯parent，所以只单向保存parent的id。</p>\n<p>结构：{key: id, value: parent_id}</p>\n<h3 id=\"Weighting\"><a href=\"#Weighting\" class=\"headerlink\" title=\"Weighting\"></a>Weighting</h3><p>Weighting，即平衡重量。基本思路是判断两个要合并的root的child数量，将小的合并到大的，这样可以避免生成长子链，然后提高查找效率。</p>\n<h4 id=\"图解-2\"><a href=\"#图解-2\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//weighting.png\" alt=\"weighting图解\"></p>\n<h4 id=\"代码变动\"><a href=\"#代码变动\" class=\"headerlink\" title=\"代码变动\"></a>代码变动</h4><p>由于每个节点只保存了parent，故无法追溯child的长度，因此每个节点新增一个size属性，每次union时将child以及其对应的子集size合并到该节点的size中。</p>\n<p>map结构变化: {key: id, value: {parent: parent_id, size: size}}</p>\n<p>union时： map.get([要合并的parent]).size+=map.get([被合并的child]).size +1 //+1是child本身</p>\n<h3 id=\"Path-Compression\"><a href=\"#Path-Compression\" class=\"headerlink\" title=\"Path Compression\"></a>Path Compression</h3><p>Path Compression，即路径压缩。基本思路是在每次合并的时候直接将child（的root）合并到parent的root上，这样也可以避免生成长子链。</p>\n<h4 id=\"图解-3\"><a href=\"#图解-3\" class=\"headerlink\" title=\"图解\"></a>图解</h4><p><img src=\"/.io//path-compression.jpg\" alt=\"path-compression图解\"></p>\n<h2 id=\"最终代码\"><a href=\"#最终代码\" class=\"headerlink\" title=\"最终代码\"></a>最终代码</h2><p>quick-union + weighting + path compression + map</p>\n<figure class=\"highlight javascript\"><figcaption><span>Union-Find.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//每个节点保存的结构</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">parent, size</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.parent = parent || <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.size = size || <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">union</span>(<span class=\"params\">p, q</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(p)||!map.has(q))&#123;</span><br><span class=\"line\">        <span class=\"comment\">//有一个不在map里，说明是游离节点，自动设为child</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!map.has(p))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = p, parent = find(q); <span class=\"comment\">//path compression 父母直接设给根节点</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = q, parent = find(p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map.set(child, <span class=\"keyword\">new</span> Node(parent, <span class=\"number\">0</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//均存在map中，需要进行weighting的两个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> pr = find(p), qr = find(q), prs = map.get(pr).size, qrs = map.get(qr).size; <span class=\"comment\">//暂存两个节点的root</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pr===qr)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果已经连通，不需要再连接了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prs &lt; qrs)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//把容量更小的那个设为child被合并</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = pr, parent = qr;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> child = qr, parent = pr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//root应该都存在map中</span></span><br><span class=\"line\">        map.get(child).parent = parent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(parent))&#123;</span><br><span class=\"line\">        map.set(parent, <span class=\"keyword\">new</span> Node(parent, map.get(child).size+<span class=\"number\">1</span>)); <span class=\"comment\">//map中新建一个root node，root的parent设给自己</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        map.get(parent).size+=map.get(child).size+<span class=\"number\">1</span>; <span class=\"comment\">//合并size</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!map.has(p))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(map.get(p).parent!=p)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果parent等于自己，说明已经是根节点了，否则再往上追溯一个parent</span></span><br><span class=\"line\">        p = map.get(p).parent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isConnected</span>(<span class=\"params\">p, q</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (find(p)===find(q));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>最后贴上algorithms书中的各种方法的时间复杂度：</p>\n<p><img src=\"/.io//compare-final.png\" alt=\"时间复杂度比较\"></p>\n<p>有weighting和path compression的quick union时间复杂度无限接近1。</p>"},{"title":"Pow(x, n)%10 （快速幂+大数取模问题）","date":"2021-08-29T15:13:10.000Z","comment":true,"_content":"\n## 题目描述\n\n### 来自：Zoom2021年秋招前端工程师笔试编程题2\n\n给定2个非负整数x, n, 需要求 x^n （x的n次方）的最后一位。 x, n都可能很大很大。\n\n任何数的0次方都是1.\n\n## 分析\n\n### 思路1\n\n不难发现规律： ((x%y)^n)%y = (x^n)%y\n\n<!-- more -->\n\n因此很容易想到，第一步先把题目中的底数x提取成最后一位。但如果直接用编程语言库里自带的Math.pow(x, n)，依然可能会直接得到一个很大的结果，取模依然可能不正确。因此，我们需要考虑自己实现一套幂运算，在过程中多次取最后一位，这样就会使得所有的运算都是小数取模了。\n\n快速幂公式参考[LeetCode 50. Pow(x, n) （快速幂，清晰图解）-Krahets](https://leetcode-cn.com/problems/powx-n/solution/50-powx-n-kuai-su-mi-qing-xi-tu-jie-by-jyd/)\n\n### 思路2\n\n根据观察不难发现，0-9为底的幂运算取最后一位是存在一个循环的。我们先求出这个循环的规律，然后判断n是在循环的第几位，即可直接得到结果。\n\n### 注意\n\n由于Javascript BigInt过于复杂，没有实现x, y为大数时的算法。\n\n## 代码\n\n```javascript 公用方法.js\nfunction mod10( num ) {\n    return parseInt(num) % 10;\n}\n```\n\n```javascript 思路1.js\nfunction lastDigitQuickPow(str1, str2) {\n    let x = mod10(str1); // x直接取最后一位\n    let n = parseInt(str2); // 可能涉及大数，转成BigInt\n    if (n === 0) {\n        return 1; // 任何数的0次方都是1\n    }\n    let res = 1;\n    for (let i = x; n; i = mod10(i * i), n = n >> 1) {\n    \t// 每次使i平方，然后n减少一位二进制位（位右移）\n        if ((n & 1) == 1) {\n            res = mod10(res * i); // 如果当前位是1，则在结果中增加\n        }\n    }\n    return res;\n}\n```\n\n```javascript 思路2.js\nfunction lastDigit(str1, str2) {\n    let x = mod10(str1); // x直接取最后一位\n    let n = parseInt(str2); // 可能涉及大数，转成BigInt\n    if (n === 0) {\n        return 1; // 任何数的0次方都是1\n    }\n    let loopCount = 0;\n    let loopNum = [x];\n    for (let i = x; true;) {\n        i = mod10(i * x); // 查找循环的下一位\n        loopCount++;\n        if (i === x) {\n            break; // 得到循环的总长度loopCount和取余对应loopNum[]\n        } else {\n            loopNum.push(i);\n        }\n    }\n    let resMod = (n - 1) % loopCount; // 获取循环中的余数（左移一位）\n    return loopNum[resMod];\n}\n```","source":"_posts/Pow-x-n-10-（快速幂-大数取模问题）.md","raw":"---\ntitle: 'Pow(x, n)%10 （快速幂+大数取模问题）'\ndate: 2021-08-29 23:13:10\ntags: [JS, 算法, 快速幂, 大数越界]\ncategories: [JS, 算法]\ncomment: true\n---\n\n## 题目描述\n\n### 来自：Zoom2021年秋招前端工程师笔试编程题2\n\n给定2个非负整数x, n, 需要求 x^n （x的n次方）的最后一位。 x, n都可能很大很大。\n\n任何数的0次方都是1.\n\n## 分析\n\n### 思路1\n\n不难发现规律： ((x%y)^n)%y = (x^n)%y\n\n<!-- more -->\n\n因此很容易想到，第一步先把题目中的底数x提取成最后一位。但如果直接用编程语言库里自带的Math.pow(x, n)，依然可能会直接得到一个很大的结果，取模依然可能不正确。因此，我们需要考虑自己实现一套幂运算，在过程中多次取最后一位，这样就会使得所有的运算都是小数取模了。\n\n快速幂公式参考[LeetCode 50. Pow(x, n) （快速幂，清晰图解）-Krahets](https://leetcode-cn.com/problems/powx-n/solution/50-powx-n-kuai-su-mi-qing-xi-tu-jie-by-jyd/)\n\n### 思路2\n\n根据观察不难发现，0-9为底的幂运算取最后一位是存在一个循环的。我们先求出这个循环的规律，然后判断n是在循环的第几位，即可直接得到结果。\n\n### 注意\n\n由于Javascript BigInt过于复杂，没有实现x, y为大数时的算法。\n\n## 代码\n\n```javascript 公用方法.js\nfunction mod10( num ) {\n    return parseInt(num) % 10;\n}\n```\n\n```javascript 思路1.js\nfunction lastDigitQuickPow(str1, str2) {\n    let x = mod10(str1); // x直接取最后一位\n    let n = parseInt(str2); // 可能涉及大数，转成BigInt\n    if (n === 0) {\n        return 1; // 任何数的0次方都是1\n    }\n    let res = 1;\n    for (let i = x; n; i = mod10(i * i), n = n >> 1) {\n    \t// 每次使i平方，然后n减少一位二进制位（位右移）\n        if ((n & 1) == 1) {\n            res = mod10(res * i); // 如果当前位是1，则在结果中增加\n        }\n    }\n    return res;\n}\n```\n\n```javascript 思路2.js\nfunction lastDigit(str1, str2) {\n    let x = mod10(str1); // x直接取最后一位\n    let n = parseInt(str2); // 可能涉及大数，转成BigInt\n    if (n === 0) {\n        return 1; // 任何数的0次方都是1\n    }\n    let loopCount = 0;\n    let loopNum = [x];\n    for (let i = x; true;) {\n        i = mod10(i * x); // 查找循环的下一位\n        loopCount++;\n        if (i === x) {\n            break; // 得到循环的总长度loopCount和取余对应loopNum[]\n        } else {\n            loopNum.push(i);\n        }\n    }\n    let resMod = (n - 1) % loopCount; // 获取循环中的余数（左移一位）\n    return loopNum[resMod];\n}\n```","slug":"Pow-x-n-10-（快速幂-大数取模问题）","published":1,"updated":"2021-11-29T19:48:47.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e3z0003lsv0am8od9g4","content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><h3 id=\"来自：Zoom2021年秋招前端工程师笔试编程题2\"><a href=\"#来自：Zoom2021年秋招前端工程师笔试编程题2\" class=\"headerlink\" title=\"来自：Zoom2021年秋招前端工程师笔试编程题2\"></a>来自：Zoom2021年秋招前端工程师笔试编程题2</h3><p>给定2个非负整数x, n, 需要求 x^n （x的n次方）的最后一位。 x, n都可能很大很大。</p>\n<p>任何数的0次方都是1.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><h3 id=\"思路1\"><a href=\"#思路1\" class=\"headerlink\" title=\"思路1\"></a>思路1</h3><p>不难发现规律： ((x%y)^n)%y = (x^n)%y</p>\n<span id=\"more\"></span>\n\n<p>因此很容易想到，第一步先把题目中的底数x提取成最后一位。但如果直接用编程语言库里自带的Math.pow(x, n)，依然可能会直接得到一个很大的结果，取模依然可能不正确。因此，我们需要考虑自己实现一套幂运算，在过程中多次取最后一位，这样就会使得所有的运算都是小数取模了。</p>\n<p>快速幂公式参考<a href=\"https://leetcode-cn.com/problems/powx-n/solution/50-powx-n-kuai-su-mi-qing-xi-tu-jie-by-jyd/\">LeetCode 50. Pow(x, n) （快速幂，清晰图解）-Krahets</a></p>\n<h3 id=\"思路2\"><a href=\"#思路2\" class=\"headerlink\" title=\"思路2\"></a>思路2</h3><p>根据观察不难发现，0-9为底的幂运算取最后一位是存在一个循环的。我们先求出这个循环的规律，然后判断n是在循环的第几位，即可直接得到结果。</p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>由于Javascript BigInt过于复杂，没有实现x, y为大数时的算法。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight javascript\"><figcaption><span>公用方法.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mod10</span>(<span class=\"params\"> num </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(num) % <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>思路1.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lastDigitQuickPow</span>(<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = mod10(str1); <span class=\"comment\">// x直接取最后一位</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"built_in\">parseInt</span>(str2); <span class=\"comment\">// 可能涉及大数，转成BigInt</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// 任何数的0次方都是1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x; n; i = mod10(i * i), n = n &gt;&gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">// 每次使i平方，然后n减少一位二进制位（位右移）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((n &amp; <span class=\"number\">1</span>) == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            res = mod10(res * i); <span class=\"comment\">// 如果当前位是1，则在结果中增加</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>思路2.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lastDigit</span>(<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = mod10(str1); <span class=\"comment\">// x直接取最后一位</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"built_in\">parseInt</span>(str2); <span class=\"comment\">// 可能涉及大数，转成BigInt</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// 任何数的0次方都是1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loopCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loopNum = [x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x; <span class=\"literal\">true</span>;) &#123;</span><br><span class=\"line\">        i = mod10(i * x); <span class=\"comment\">// 查找循环的下一位</span></span><br><span class=\"line\">        loopCount++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i === x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>; <span class=\"comment\">// 得到循环的总长度loopCount和取余对应loopNum[]</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            loopNum.push(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resMod = (n - <span class=\"number\">1</span>) % loopCount; <span class=\"comment\">// 获取循环中的余数（左移一位）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> loopNum[resMod];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><h3 id=\"来自：Zoom2021年秋招前端工程师笔试编程题2\"><a href=\"#来自：Zoom2021年秋招前端工程师笔试编程题2\" class=\"headerlink\" title=\"来自：Zoom2021年秋招前端工程师笔试编程题2\"></a>来自：Zoom2021年秋招前端工程师笔试编程题2</h3><p>给定2个非负整数x, n, 需要求 x^n （x的n次方）的最后一位。 x, n都可能很大很大。</p>\n<p>任何数的0次方都是1.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><h3 id=\"思路1\"><a href=\"#思路1\" class=\"headerlink\" title=\"思路1\"></a>思路1</h3><p>不难发现规律： ((x%y)^n)%y = (x^n)%y</p>","more":"<p>因此很容易想到，第一步先把题目中的底数x提取成最后一位。但如果直接用编程语言库里自带的Math.pow(x, n)，依然可能会直接得到一个很大的结果，取模依然可能不正确。因此，我们需要考虑自己实现一套幂运算，在过程中多次取最后一位，这样就会使得所有的运算都是小数取模了。</p>\n<p>快速幂公式参考<a href=\"https://leetcode-cn.com/problems/powx-n/solution/50-powx-n-kuai-su-mi-qing-xi-tu-jie-by-jyd/\">LeetCode 50. Pow(x, n) （快速幂，清晰图解）-Krahets</a></p>\n<h3 id=\"思路2\"><a href=\"#思路2\" class=\"headerlink\" title=\"思路2\"></a>思路2</h3><p>根据观察不难发现，0-9为底的幂运算取最后一位是存在一个循环的。我们先求出这个循环的规律，然后判断n是在循环的第几位，即可直接得到结果。</p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>由于Javascript BigInt过于复杂，没有实现x, y为大数时的算法。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight javascript\"><figcaption><span>公用方法.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mod10</span>(<span class=\"params\"> num </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(num) % <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>思路1.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lastDigitQuickPow</span>(<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = mod10(str1); <span class=\"comment\">// x直接取最后一位</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"built_in\">parseInt</span>(str2); <span class=\"comment\">// 可能涉及大数，转成BigInt</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// 任何数的0次方都是1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x; n; i = mod10(i * i), n = n &gt;&gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">// 每次使i平方，然后n减少一位二进制位（位右移）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((n &amp; <span class=\"number\">1</span>) == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            res = mod10(res * i); <span class=\"comment\">// 如果当前位是1，则在结果中增加</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>思路2.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lastDigit</span>(<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = mod10(str1); <span class=\"comment\">// x直接取最后一位</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"built_in\">parseInt</span>(str2); <span class=\"comment\">// 可能涉及大数，转成BigInt</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// 任何数的0次方都是1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loopCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> loopNum = [x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x; <span class=\"literal\">true</span>;) &#123;</span><br><span class=\"line\">        i = mod10(i * x); <span class=\"comment\">// 查找循环的下一位</span></span><br><span class=\"line\">        loopCount++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i === x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>; <span class=\"comment\">// 得到循环的总长度loopCount和取余对应loopNum[]</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            loopNum.push(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resMod = (n - <span class=\"number\">1</span>) % loopCount; <span class=\"comment\">// 获取循环中的余数（左移一位）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> loopNum[resMod];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）","date":"2021-08-16T03:14:19.000Z","comment":true,"_content":"\n## 工程需求\n\n开发的应用：用微信小程序经由hera生成的跨平台移动端APP。\n\n在“收藏列表”的模块中，需要添加一个类似于微信/QQ对话列表，对每一条信息左滑可以置顶或删除的功能。\n\n## 方案参考\n\n由于公司的APP构建框架似乎无法显示微信的新组件movable-view，因此选用了网络上使用view组件来实现的方案。\n\n参考链接：https://blog.csdn.net/LiaoFengJi/article/details/105218664\n\n<!-- more -->\n\n## 提炼代码如下：\n\n```wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"touchStart\" bindtouchmove=\"touchMove\">\n\t<!-- 这里原本bindtouchstart和bindtouchmove是放在内容的组件里（item-left)，但因为我的按钮做得比较大所以设成了整个组件都可以滑动，使得整条内容上都可以右滑关闭菜单 -->\n\t<view class=\"item-left\" data-index=\"{{index}}\">\n\t\t<!-- 每条要显示的内容 -->\n\t</view>\n\t<view class=\"item-right\">\n\t\t<view class=\"btn-right\" bindtap=\"setTopItem\">置顶</view>\n\t\t<view class=\"btn-right\" bindtap=\"deleteItem\">删除</view>\n\t</view>\n</view>\n```\n\n```wxss index.wxss\n.item {\n  display: flex;\n}\n\n/* 内容部分 */\n.item-left {\n  width: 100%;\n  /*关键代码*/\n  margin-left: -400rpx; /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  -webkit-transition: all 0.4s;\n  transition: all 0.4s;\n  -webkit-transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  /*关键代码*/\n}\n\n/* 按钮部分 */\n.item-right {\n  height: 100%;\n  width: 400rpx; /*根据需要调整*/\n  display: flex;\n  flex-direction: row;\n  /*关键代码*/\n  transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/\n  -webkit-transition: all 0.4s;\n  transition: all 0.4s;\n  -webkit-transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/\n  /*关键代码*/\n}\n\n.btn-right {\n  width: 50%; /*这里根据自己的需要划成了两半*/\n}\n\n/* 向左滑动 */\n.touch-move-active .item-left,\n.touch-move-active .item-right {\n  /*关键代码*/\n  -webkit-transform: translateX(0);\n  transform: translateX(0);\n  /*关键代码*/\n}\n```\n\n```javascript index.js\n/* Page */\n  data: {\n    dataList: [/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/],\n    startX: 0,// 设置开始的位置X\n    startY: 0,// 设置开始的位置Y\n  },\n\n  // 开始滑动\n  touchStart(e) {\n    let dataList = this.data.dataList;\n    dataList.forEach(item => {\n    // 让原先滑动的块隐藏\n      if (item.isTouchMove) {\n        item.isTouchMove = !item.isTouchMove;\n      }\n    });\n    this.setData({\n      dataList: dataList,\n    });\n    // 初始化开始位置\n    this.data.startX = e.touches[0].clientX;\n    this.data.startY = e.touches[0].clientY;\n\t// 在参考代码中，这里全部都setData了，但实际上startX, Y属于没有涉及渲染的纯数据，尽量不要用setData\n\t},\n  // 滑动的过程\n  touchMove(e) {\n    let moveX = e.changedTouches[0].clientX,\n      moveY = e.changedTouches[0].clientY,\n      curIndex = e.currentTarget.dataset.index, \n      //注意，wxml里面一定要设置data-index=\"{{index}}\",这样e.currentTarget.dataset中才会传index的值\n      dataList = this.data.dataList,\n      // 拿到滑动的角度，判断是否大于 30°，若大于，则不滑动\n      angle = this.angle(\n        { X: this.data.startX,\n\t    Y: this.data.startY\n\t    }, { X: moveX,\n\t    Y: moveY\n\t    }\n\t  );\n\n    dataList.forEach((item, index) => {\n    // 这里相对参考代码做了精炼\n\t// 判断三个条件：遍历到的item是当前滑动的块，角度小于30度，滑动到的x坐标小于开始的x坐标（向左），均满足则判断为左滑\n      if (curIndex === index && angle < 30 && moveX < this.data.startX) {\n        item.isTouchMove = true;\n      } else {\n      \titem.isTouchMove = false; //否则右滑\n      }\n    });\n\n    this.setData({\n      dataList\n    });\n  },\n\n  /**\n   * 计算滑动角度\n   * @param {Object} start 起点坐标\n   * @param {Object} end 终点坐标\n   */\n  angle: function (start, end) {\n    var _X = end.X - start.X,\n      _Y = end.Y - start.Y\n    //返回角度 /Math.atan()返回数字的反正切值\n    return 360 * Math.atan(_Y / _X) / (2 * Math.PI);\n  },\n\n  // 删除\n  deleteItem(e) {\n  \t/* 这里是具体删除item的方法 */\n  }\n```\n\n## 实现效果\n\n![侧滑效果](侧滑效果.gif)\n\n## 结语\n\n本次实践对参考代码并非完全照搬，而是根据实际使用的需求进行了调整，且对代码中的一些地方做了精炼和改良，是充满自己的理解的。实际使用时，我的内容条其实是包装在自定义组件中，而函数全部通过triggerEvent发送到页面js，在页面中执行（因为需要对每条数据的isTouchMove做更改）。但为了方便理解，在本页中依然采用全部在同一个页面上操作的方法来完成。\n\n实际工程中，接下来还有更多的坑。当然，这些都是大前端开发跨平台APP的苦果，仅仅是参考微信小程序中的运用的可以忽略（貌似要使用movable-view也不难，js部分不带变的）。欲知后事如何，且听下回分解。","source":"_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）.md","raw":"---\ntitle: 关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）\ndate: 2021-08-16 11:14:19\ntags: [微信小程序,fs]\ncategories: 微信小程序\ncomment: true\n---\n\n## 工程需求\n\n开发的应用：用微信小程序经由hera生成的跨平台移动端APP。\n\n在“收藏列表”的模块中，需要添加一个类似于微信/QQ对话列表，对每一条信息左滑可以置顶或删除的功能。\n\n## 方案参考\n\n由于公司的APP构建框架似乎无法显示微信的新组件movable-view，因此选用了网络上使用view组件来实现的方案。\n\n参考链接：https://blog.csdn.net/LiaoFengJi/article/details/105218664\n\n<!-- more -->\n\n## 提炼代码如下：\n\n```wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"touchStart\" bindtouchmove=\"touchMove\">\n\t<!-- 这里原本bindtouchstart和bindtouchmove是放在内容的组件里（item-left)，但因为我的按钮做得比较大所以设成了整个组件都可以滑动，使得整条内容上都可以右滑关闭菜单 -->\n\t<view class=\"item-left\" data-index=\"{{index}}\">\n\t\t<!-- 每条要显示的内容 -->\n\t</view>\n\t<view class=\"item-right\">\n\t\t<view class=\"btn-right\" bindtap=\"setTopItem\">置顶</view>\n\t\t<view class=\"btn-right\" bindtap=\"deleteItem\">删除</view>\n\t</view>\n</view>\n```\n\n```wxss index.wxss\n.item {\n  display: flex;\n}\n\n/* 内容部分 */\n.item-left {\n  width: 100%;\n  /*关键代码*/\n  margin-left: -400rpx; /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  -webkit-transition: all 0.4s;\n  transition: all 0.4s;\n  -webkit-transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/\n  /*关键代码*/\n}\n\n/* 按钮部分 */\n.item-right {\n  height: 100%;\n  width: 400rpx; /*根据需要调整*/\n  display: flex;\n  flex-direction: row;\n  /*关键代码*/\n  transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/\n  -webkit-transition: all 0.4s;\n  transition: all 0.4s;\n  -webkit-transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/\n  /*关键代码*/\n}\n\n.btn-right {\n  width: 50%; /*这里根据自己的需要划成了两半*/\n}\n\n/* 向左滑动 */\n.touch-move-active .item-left,\n.touch-move-active .item-right {\n  /*关键代码*/\n  -webkit-transform: translateX(0);\n  transform: translateX(0);\n  /*关键代码*/\n}\n```\n\n```javascript index.js\n/* Page */\n  data: {\n    dataList: [/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/],\n    startX: 0,// 设置开始的位置X\n    startY: 0,// 设置开始的位置Y\n  },\n\n  // 开始滑动\n  touchStart(e) {\n    let dataList = this.data.dataList;\n    dataList.forEach(item => {\n    // 让原先滑动的块隐藏\n      if (item.isTouchMove) {\n        item.isTouchMove = !item.isTouchMove;\n      }\n    });\n    this.setData({\n      dataList: dataList,\n    });\n    // 初始化开始位置\n    this.data.startX = e.touches[0].clientX;\n    this.data.startY = e.touches[0].clientY;\n\t// 在参考代码中，这里全部都setData了，但实际上startX, Y属于没有涉及渲染的纯数据，尽量不要用setData\n\t},\n  // 滑动的过程\n  touchMove(e) {\n    let moveX = e.changedTouches[0].clientX,\n      moveY = e.changedTouches[0].clientY,\n      curIndex = e.currentTarget.dataset.index, \n      //注意，wxml里面一定要设置data-index=\"{{index}}\",这样e.currentTarget.dataset中才会传index的值\n      dataList = this.data.dataList,\n      // 拿到滑动的角度，判断是否大于 30°，若大于，则不滑动\n      angle = this.angle(\n        { X: this.data.startX,\n\t    Y: this.data.startY\n\t    }, { X: moveX,\n\t    Y: moveY\n\t    }\n\t  );\n\n    dataList.forEach((item, index) => {\n    // 这里相对参考代码做了精炼\n\t// 判断三个条件：遍历到的item是当前滑动的块，角度小于30度，滑动到的x坐标小于开始的x坐标（向左），均满足则判断为左滑\n      if (curIndex === index && angle < 30 && moveX < this.data.startX) {\n        item.isTouchMove = true;\n      } else {\n      \titem.isTouchMove = false; //否则右滑\n      }\n    });\n\n    this.setData({\n      dataList\n    });\n  },\n\n  /**\n   * 计算滑动角度\n   * @param {Object} start 起点坐标\n   * @param {Object} end 终点坐标\n   */\n  angle: function (start, end) {\n    var _X = end.X - start.X,\n      _Y = end.Y - start.Y\n    //返回角度 /Math.atan()返回数字的反正切值\n    return 360 * Math.atan(_Y / _X) / (2 * Math.PI);\n  },\n\n  // 删除\n  deleteItem(e) {\n  \t/* 这里是具体删除item的方法 */\n  }\n```\n\n## 实现效果\n\n![侧滑效果](侧滑效果.gif)\n\n## 结语\n\n本次实践对参考代码并非完全照搬，而是根据实际使用的需求进行了调整，且对代码中的一些地方做了精炼和改良，是充满自己的理解的。实际使用时，我的内容条其实是包装在自定义组件中，而函数全部通过triggerEvent发送到页面js，在页面中执行（因为需要对每条数据的isTouchMove做更改）。但为了方便理解，在本页中依然采用全部在同一个页面上操作的方法来完成。\n\n实际工程中，接下来还有更多的坑。当然，这些都是大前端开发跨平台APP的苦果，仅仅是参考微信小程序中的运用的可以忽略（貌似要使用movable-view也不难，js部分不带变的）。欲知后事如何，且听下回分解。","slug":"关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）","published":1,"updated":"2021-11-29T19:48:47.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e410006lsv00x5pfzhz","content":"<h2 id=\"工程需求\"><a href=\"#工程需求\" class=\"headerlink\" title=\"工程需求\"></a>工程需求</h2><p>开发的应用：用微信小程序经由hera生成的跨平台移动端APP。</p>\n<p>在“收藏列表”的模块中，需要添加一个类似于微信/QQ对话列表，对每一条信息左滑可以置顶或删除的功能。</p>\n<h2 id=\"方案参考\"><a href=\"#方案参考\" class=\"headerlink\" title=\"方案参考\"></a>方案参考</h2><p>由于公司的APP构建框架似乎无法显示微信的新组件movable-view，因此选用了网络上使用view组件来实现的方案。</p>\n<p>参考链接：<a href=\"https://blog.csdn.net/LiaoFengJi/article/details/105218664\">https://blog.csdn.net/LiaoFengJi/article/details/105218664</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"提炼代码如下：\"><a href=\"#提炼代码如下：\" class=\"headerlink\" title=\"提炼代码如下：\"></a>提炼代码如下：</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;touchStart&quot; bindtouchmove=&quot;touchMove&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 这里原本bindtouchstart和bindtouchmove是放在内容的组件里（item-left)，但因为我的按钮做得比较大所以设成了整个组件都可以滑动，使得整条内容上都可以右滑关闭菜单 --&gt;</span><br><span class=\"line\">\t&lt;view class=&quot;item-left&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t\t&lt;!-- 每条要显示的内容 --&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">\t&lt;view class=&quot;item-right&quot;&gt;</span><br><span class=\"line\">\t\t&lt;view class=&quot;btn-right&quot; bindtap=&quot;setTopItem&quot;&gt;置顶&lt;/view&gt;</span><br><span class=\"line\">\t\t&lt;view class=&quot;btn-right&quot; bindtap=&quot;deleteItem&quot;&gt;删除&lt;/view&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxss</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 内容部分 */</span><br><span class=\"line\">.item-left &#123;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  margin-left: -400rpx; /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  -webkit-transition: all 0.4s;</span><br><span class=\"line\">  transition: all 0.4s;</span><br><span class=\"line\">  -webkit-transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 按钮部分 */</span><br><span class=\"line\">.item-right &#123;</span><br><span class=\"line\">  height: 100%;</span><br><span class=\"line\">  width: 400rpx; /*根据需要调整*/</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  flex-direction: row;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/</span><br><span class=\"line\">  -webkit-transition: all 0.4s;</span><br><span class=\"line\">  transition: all 0.4s;</span><br><span class=\"line\">  -webkit-transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-right &#123;</span><br><span class=\"line\">  width: 50%; /*这里根据自己的需要划成了两半*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 向左滑动 */</span><br><span class=\"line\">.touch-move-active .item-left,</span><br><span class=\"line\">.touch-move-active .item-right &#123;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  -webkit-transform: translateX(0);</span><br><span class=\"line\">  transform: translateX(0);</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Page */</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">dataList</span>: [<span class=\"comment\">/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/</span>],</span><br><span class=\"line\">    <span class=\"attr\">startX</span>: <span class=\"number\">0</span>,<span class=\"comment\">// 设置开始的位置X</span></span><br><span class=\"line\">    <span class=\"attr\">startY</span>: <span class=\"number\">0</span>,<span class=\"comment\">// 设置开始的位置Y</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 开始滑动</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchStart</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataList = <span class=\"built_in\">this</span>.data.dataList;</span><br><span class=\"line\">    dataList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 让原先滑动的块隐藏</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.isTouchMove) &#123;</span><br><span class=\"line\">        item.isTouchMove = !item.isTouchMove;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 初始化开始位置</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startX = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startY = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">\t<span class=\"comment\">// 在参考代码中，这里全部都setData了，但实际上startX, Y属于没有涉及渲染的纯数据，尽量不要用setData</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 滑动的过程</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchMove</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> moveX = e.changedTouches[<span class=\"number\">0</span>].clientX,</span><br><span class=\"line\">      moveY = e.changedTouches[<span class=\"number\">0</span>].clientY,</span><br><span class=\"line\">      curIndex = e.currentTarget.dataset.index, </span><br><span class=\"line\">      <span class=\"comment\">//注意，wxml里面一定要设置data-index=&quot;&#123;&#123;index&#125;&#125;&quot;,这样e.currentTarget.dataset中才会传index的值</span></span><br><span class=\"line\">      dataList = <span class=\"built_in\">this</span>.data.dataList,</span><br><span class=\"line\">      <span class=\"comment\">// 拿到滑动的角度，判断是否大于 30°，若大于，则不滑动</span></span><br><span class=\"line\">      angle = <span class=\"built_in\">this</span>.angle(</span><br><span class=\"line\">        &#123; <span class=\"attr\">X</span>: <span class=\"built_in\">this</span>.data.startX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: <span class=\"built_in\">this</span>.data.startY</span><br><span class=\"line\">\t    &#125;, &#123; <span class=\"attr\">X</span>: moveX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: moveY</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t  );</span><br><span class=\"line\"></span><br><span class=\"line\">    dataList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里相对参考代码做了精炼</span></span><br><span class=\"line\">\t<span class=\"comment\">// 判断三个条件：遍历到的item是当前滑动的块，角度小于30度，滑动到的x坐标小于开始的x坐标（向左），均满足则判断为左滑</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (curIndex === index &amp;&amp; angle &lt; <span class=\"number\">30</span> &amp;&amp; moveX &lt; <span class=\"built_in\">this</span>.data.startX) &#123;</span><br><span class=\"line\">        item.isTouchMove = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      \titem.isTouchMove = <span class=\"literal\">false</span>; <span class=\"comment\">//否则右滑</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      dataList</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 计算滑动角度</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param <span class=\"type\">&#123;Object&#125;</span> </span>start 起点坐标</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param <span class=\"type\">&#123;Object&#125;</span> </span>end 终点坐标</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"attr\">angle</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">start, end</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _X = end.X - start.X,</span><br><span class=\"line\">      _Y = end.Y - start.Y</span><br><span class=\"line\">    <span class=\"comment\">//返回角度 /Math.atan()返回数字的反正切值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">360</span> * <span class=\"built_in\">Math</span>.atan(_Y / _X) / (<span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 删除</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">deleteItem</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">  \t<span class=\"comment\">/* 这里是具体删除item的方法 */</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h2><p><img src=\"/.io//%E4%BE%A7%E6%BB%91%E6%95%88%E6%9E%9C.gif\" alt=\"侧滑效果\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本次实践对参考代码并非完全照搬，而是根据实际使用的需求进行了调整，且对代码中的一些地方做了精炼和改良，是充满自己的理解的。实际使用时，我的内容条其实是包装在自定义组件中，而函数全部通过triggerEvent发送到页面js，在页面中执行（因为需要对每条数据的isTouchMove做更改）。但为了方便理解，在本页中依然采用全部在同一个页面上操作的方法来完成。</p>\n<p>实际工程中，接下来还有更多的坑。当然，这些都是大前端开发跨平台APP的苦果，仅仅是参考微信小程序中的运用的可以忽略（貌似要使用movable-view也不难，js部分不带变的）。欲知后事如何，且听下回分解。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"工程需求\"><a href=\"#工程需求\" class=\"headerlink\" title=\"工程需求\"></a>工程需求</h2><p>开发的应用：用微信小程序经由hera生成的跨平台移动端APP。</p>\n<p>在“收藏列表”的模块中，需要添加一个类似于微信/QQ对话列表，对每一条信息左滑可以置顶或删除的功能。</p>\n<h2 id=\"方案参考\"><a href=\"#方案参考\" class=\"headerlink\" title=\"方案参考\"></a>方案参考</h2><p>由于公司的APP构建框架似乎无法显示微信的新组件movable-view，因此选用了网络上使用view组件来实现的方案。</p>\n<p>参考链接：<a href=\"https://blog.csdn.net/LiaoFengJi/article/details/105218664\">https://blog.csdn.net/LiaoFengJi/article/details/105218664</a></p>","more":"<h2 id=\"提炼代码如下：\"><a href=\"#提炼代码如下：\" class=\"headerlink\" title=\"提炼代码如下：\"></a>提炼代码如下：</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;touchStart&quot; bindtouchmove=&quot;touchMove&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 这里原本bindtouchstart和bindtouchmove是放在内容的组件里（item-left)，但因为我的按钮做得比较大所以设成了整个组件都可以滑动，使得整条内容上都可以右滑关闭菜单 --&gt;</span><br><span class=\"line\">\t&lt;view class=&quot;item-left&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t\t&lt;!-- 每条要显示的内容 --&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">\t&lt;view class=&quot;item-right&quot;&gt;</span><br><span class=\"line\">\t\t&lt;view class=&quot;btn-right&quot; bindtap=&quot;setTopItem&quot;&gt;置顶&lt;/view&gt;</span><br><span class=\"line\">\t\t&lt;view class=&quot;btn-right&quot; bindtap=&quot;deleteItem&quot;&gt;删除&lt;/view&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxss</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.item &#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 内容部分 */</span><br><span class=\"line\">.item-left &#123;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  margin-left: -400rpx; /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  -webkit-transition: all 0.4s;</span><br><span class=\"line\">  transition: all 0.4s;</span><br><span class=\"line\">  -webkit-transform: translateX(400rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度*/</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 按钮部分 */</span><br><span class=\"line\">.item-right &#123;</span><br><span class=\"line\">  height: 100%;</span><br><span class=\"line\">  width: 400rpx; /*根据需要调整*/</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  flex-direction: row;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/</span><br><span class=\"line\">  -webkit-transition: all 0.4s;</span><br><span class=\"line\">  transition: all 0.4s;</span><br><span class=\"line\">  -webkit-transform: translateX(420rpx); /*rpx根据需要调整，具体数值为按钮部分的宽度多一些*/</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-right &#123;</span><br><span class=\"line\">  width: 50%; /*这里根据自己的需要划成了两半*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 向左滑动 */</span><br><span class=\"line\">.touch-move-active .item-left,</span><br><span class=\"line\">.touch-move-active .item-right &#123;</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">  -webkit-transform: translateX(0);</span><br><span class=\"line\">  transform: translateX(0);</span><br><span class=\"line\">  /*关键代码*/</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Page */</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">dataList</span>: [<span class=\"comment\">/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/</span>],</span><br><span class=\"line\">    <span class=\"attr\">startX</span>: <span class=\"number\">0</span>,<span class=\"comment\">// 设置开始的位置X</span></span><br><span class=\"line\">    <span class=\"attr\">startY</span>: <span class=\"number\">0</span>,<span class=\"comment\">// 设置开始的位置Y</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 开始滑动</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchStart</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataList = <span class=\"built_in\">this</span>.data.dataList;</span><br><span class=\"line\">    dataList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 让原先滑动的块隐藏</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.isTouchMove) &#123;</span><br><span class=\"line\">        item.isTouchMove = !item.isTouchMove;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 初始化开始位置</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startX = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startY = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">\t<span class=\"comment\">// 在参考代码中，这里全部都setData了，但实际上startX, Y属于没有涉及渲染的纯数据，尽量不要用setData</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 滑动的过程</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchMove</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> moveX = e.changedTouches[<span class=\"number\">0</span>].clientX,</span><br><span class=\"line\">      moveY = e.changedTouches[<span class=\"number\">0</span>].clientY,</span><br><span class=\"line\">      curIndex = e.currentTarget.dataset.index, </span><br><span class=\"line\">      <span class=\"comment\">//注意，wxml里面一定要设置data-index=&quot;&#123;&#123;index&#125;&#125;&quot;,这样e.currentTarget.dataset中才会传index的值</span></span><br><span class=\"line\">      dataList = <span class=\"built_in\">this</span>.data.dataList,</span><br><span class=\"line\">      <span class=\"comment\">// 拿到滑动的角度，判断是否大于 30°，若大于，则不滑动</span></span><br><span class=\"line\">      angle = <span class=\"built_in\">this</span>.angle(</span><br><span class=\"line\">        &#123; <span class=\"attr\">X</span>: <span class=\"built_in\">this</span>.data.startX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: <span class=\"built_in\">this</span>.data.startY</span><br><span class=\"line\">\t    &#125;, &#123; <span class=\"attr\">X</span>: moveX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: moveY</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t  );</span><br><span class=\"line\"></span><br><span class=\"line\">    dataList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里相对参考代码做了精炼</span></span><br><span class=\"line\">\t<span class=\"comment\">// 判断三个条件：遍历到的item是当前滑动的块，角度小于30度，滑动到的x坐标小于开始的x坐标（向左），均满足则判断为左滑</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (curIndex === index &amp;&amp; angle &lt; <span class=\"number\">30</span> &amp;&amp; moveX &lt; <span class=\"built_in\">this</span>.data.startX) &#123;</span><br><span class=\"line\">        item.isTouchMove = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      \titem.isTouchMove = <span class=\"literal\">false</span>; <span class=\"comment\">//否则右滑</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      dataList</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 计算滑动角度</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param <span class=\"type\">&#123;Object&#125;</span> </span>start 起点坐标</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param <span class=\"type\">&#123;Object&#125;</span> </span>end 终点坐标</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"attr\">angle</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">start, end</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _X = end.X - start.X,</span><br><span class=\"line\">      _Y = end.Y - start.Y</span><br><span class=\"line\">    <span class=\"comment\">//返回角度 /Math.atan()返回数字的反正切值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">360</span> * <span class=\"built_in\">Math</span>.atan(_Y / _X) / (<span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 删除</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">deleteItem</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">  \t<span class=\"comment\">/* 这里是具体删除item的方法 */</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h2><p><img src=\"/.io//%E4%BE%A7%E6%BB%91%E6%95%88%E6%9E%9C.gif\" alt=\"侧滑效果\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本次实践对参考代码并非完全照搬，而是根据实际使用的需求进行了调整，且对代码中的一些地方做了精炼和改良，是充满自己的理解的。实际使用时，我的内容条其实是包装在自定义组件中，而函数全部通过triggerEvent发送到页面js，在页面中执行（因为需要对每条数据的isTouchMove做更改）。但为了方便理解，在本页中依然采用全部在同一个页面上操作的方法来完成。</p>\n<p>实际工程中，接下来还有更多的坑。当然，这些都是大前端开发跨平台APP的苦果，仅仅是参考微信小程序中的运用的可以忽略（貌似要使用movable-view也不难，js部分不带变的）。欲知后事如何，且听下回分解。</p>"},{"title":"关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）","date":"2021-08-18T08:35:47.000Z","comment":true,"_content":"\n上一章内容：[关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）](/2021/08/16/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）)\n\n原代码不再贴出。\n\n## 新的工程需求\n\n上次算是做出来一个像样的侧滑置顶删除功能了，在微信小程序调试中以及安卓机上调试都没有问题，但在iOS测试机上运行时却出现了问题：\n\n不知道是因为这个APP在iOS端上的一个整体功能还是微信小程序原生的触发，在右滑取消菜单的时候会触发一个返回到上级页面的操作……着实是让人不解。理论上，iOS原生的返回手势只有在手指接近屏幕左侧且右滑的时候才会触发。事实上，这个APP的另一个模块也有类似的侧滑删除功能，且右滑该条消息取消菜单时不会触发返回。于是mentor带我去请教了负责这块的iOS开发大哥，他表示：可以尝试在右滑取消时接管手势，但是微信小程序如何实现他也不知道。\n\n## 初步想法：阻止手势穿透\n\n微信小程序的事件有着冒泡机制，而手势则是整个窗口的一些事件（具体事件为tap, touchstart, touchmove, touchend, touchcancel等）。在wxml代码中进行事件捕捉时，需要设定组件的属性catchtap/bindtap, catchtouchstart/bindtouchstart等，这些都是用来捕捉微信小程序原生事件的属性。catch和bind的区别则是，catch会阻止事件冒泡，而bind不会。也就是说，只要设置catchtap，tap事件就会被局限在这个组件上，在它之后可能会收到事件的父组件、子组件都无法收到这个事件了。所以，如果对消息条组件设置catchtap，会不会就能够阻止页面返回呢？\n\n<!-- more -->\n\n## 尝试：将bind换成catch\n\n``` wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"touchStart\" catchtouchmove=\"touchMove\">\n\t<!-- 内容 -->\n</view>\n```\n\n可以是可以阻止滚动，但结果带来了其他的麻烦，因为catch也阻止了上下滑动触发页面滚动的手势，所以如果有很多内容，手势会被限制在某条组件内，页面就动不了了。\n\n## 尝试：使bind和catch的事件根据isTouchMove进行变化\n\n``` wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\" \n    bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n\t<!-- 内容 -->\n</view>\n```\n\n但是没有用，微信小程序并不能同时使用bind和catch两种属性，只会取其一。之后想想，这样的思路也不对，传空的事件名并不会使得事件解绑，而是引发了一个空的函数。\n\n## 尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\n\n``` wxml index.wxml\n<block wx:for=\"{{dataList}}\" data-index=\"{{index}}\">\n    <!-- 一个是没有被打开菜单的（支持上下滑动和返回） -->\n    <view wx:if=\"{{!item.isTouchMove}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n        <!-- 内容 -->\n    </view>\n    <!-- 被打开菜单的（阻止上下滑动和返回） -->\n    <view wx:else class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\">\n        <!-- 内容 -->\n    </view>\n</block>\n``` \n\n效果是可行，但是会牺牲滑出和收起菜单的动画效果，因为通过css实现的动画效果只能在同一个组件中进行。\n\n## 最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\n\n绞尽脑汁之后，突然灵机一动想到了这样一个比较邪教的方法。\n\n思路：设置一个hidden属性（用来标记被划开菜单的条目，即需要设成catch的条目的index），在每次动画开始时进行setTimeOut设定延时，等待动画完毕后渲染hidden，根据hidden的值悄悄将所有条目替换成catch或bind的组件。\n\n注意：css中，动画设定是0.4s，延时应当适当小于这个值。\n\n``` wxml index.wxml\n<block wx:for=\"{{dataList}}\" data-index=\"{{index}}\">\n    <!-- 一个是没有被打开菜单的（支持上下滑动和返回） -->\n    <view wx:if=\"{{index!==hidden}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n        <!-- 内容 -->\n    </view>\n    <!-- 被打开菜单的（阻止上下滑动和返回） -->\n    <view wx:else class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\">\n        <!-- 内容 -->\n    </view>\n</block>\n``` \n\n```javascript index.js\n/* Page */\n  data: {\n    dataList: [/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/],\n    startX: 0,\n    startY: 0,\n    hidden: null,//标记被隐藏的块index\n  },\n\n\n  touchStart(e) {\n    let dataList = this.data.dataList;\n    dataList.forEach(item => {\n      if (item.isTouchMove) {\n        item.isTouchMove = !item.isTouchMove;\n      }\n    });\n    this.setData({\n      dataList: dataList,\n    });\n\n    this.data.hidden = null; //先把hidden置null, 但不渲染\n\n    this.data.startX = e.touches[0].clientX;\n    this.data.startY = e.touches[0].clientY;\n  },\n  touchMove(e) {\n    let moveX = e.changedTouches[0].clientX,\n      moveY = e.changedTouches[0].clientY,\n      curIndex = e.currentTarget.dataset.index, \n      dataList = this.data.dataList,\n      angle = this.angle(\n        { X: this.data.startX,\n\t    Y: this.data.startY\n\t    }, { X: moveX,\n\t    Y: moveY\n\t    }\n\t  );\n    const that = this; //用于在forEach函数里访问data\n    dataList.forEach((item, index) => {\n      if (curIndex === index && angle < 30 && moveX < this.data.startX) {\n        item.isTouchMove = true;\n        that.data.hidden = index;//如果有块被滑动，将hidden设为此块，否则就会保持在null\n      } else {\n      \titem.isTouchMove = false; \n      }\n    });\n\n    this.setData({\n      dataList: dataList,\n    });\n\n    setTimeOut({\n      that.setData({\n        hidden: that.data.hidden //0.3s后渲染hidden来替换组件，此时动画基本放完了\n      })\n    }, 300);\n  },\n```\n\n经检验，如果动画设在0.3s，对于快速滑动也能比较好地适应。既保证了动画的流畅性，又保证了接管手势，不触发意外返回。\n\n## 总结\n\n至此，这个功能总算是顺利完成。虽然性能问题可能有待商榷（因为要进行大量的if else），但是目前来说是没有想出更好的解决方法。我感觉这个功能对我来说还是比较有锻炼性的，如果另辟蹊径也能达到目的的话，不妨大胆尝试。如有更好的想法，欢迎在评论区留言。","source":"_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）.md","raw":"---\ntitle: 关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）\ndate: 2021-08-18 16:35:47\ntags: [微信小程序,fs]\ncategories: 微信小程序\ncomment: true\n---\n\n上一章内容：[关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）](/2021/08/16/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）)\n\n原代码不再贴出。\n\n## 新的工程需求\n\n上次算是做出来一个像样的侧滑置顶删除功能了，在微信小程序调试中以及安卓机上调试都没有问题，但在iOS测试机上运行时却出现了问题：\n\n不知道是因为这个APP在iOS端上的一个整体功能还是微信小程序原生的触发，在右滑取消菜单的时候会触发一个返回到上级页面的操作……着实是让人不解。理论上，iOS原生的返回手势只有在手指接近屏幕左侧且右滑的时候才会触发。事实上，这个APP的另一个模块也有类似的侧滑删除功能，且右滑该条消息取消菜单时不会触发返回。于是mentor带我去请教了负责这块的iOS开发大哥，他表示：可以尝试在右滑取消时接管手势，但是微信小程序如何实现他也不知道。\n\n## 初步想法：阻止手势穿透\n\n微信小程序的事件有着冒泡机制，而手势则是整个窗口的一些事件（具体事件为tap, touchstart, touchmove, touchend, touchcancel等）。在wxml代码中进行事件捕捉时，需要设定组件的属性catchtap/bindtap, catchtouchstart/bindtouchstart等，这些都是用来捕捉微信小程序原生事件的属性。catch和bind的区别则是，catch会阻止事件冒泡，而bind不会。也就是说，只要设置catchtap，tap事件就会被局限在这个组件上，在它之后可能会收到事件的父组件、子组件都无法收到这个事件了。所以，如果对消息条组件设置catchtap，会不会就能够阻止页面返回呢？\n\n<!-- more -->\n\n## 尝试：将bind换成catch\n\n``` wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"touchStart\" catchtouchmove=\"touchMove\">\n\t<!-- 内容 -->\n</view>\n```\n\n可以是可以阻止滚动，但结果带来了其他的麻烦，因为catch也阻止了上下滑动触发页面滚动的手势，所以如果有很多内容，手势会被限制在某条组件内，页面就动不了了。\n\n## 尝试：使bind和catch的事件根据isTouchMove进行变化\n\n``` wxml index.wxml\n<view wx:for=\"{{dataList}}\" data-index=\"{{index}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\" \n    bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n\t<!-- 内容 -->\n</view>\n```\n\n但是没有用，微信小程序并不能同时使用bind和catch两种属性，只会取其一。之后想想，这样的思路也不对，传空的事件名并不会使得事件解绑，而是引发了一个空的函数。\n\n## 尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\n\n``` wxml index.wxml\n<block wx:for=\"{{dataList}}\" data-index=\"{{index}}\">\n    <!-- 一个是没有被打开菜单的（支持上下滑动和返回） -->\n    <view wx:if=\"{{!item.isTouchMove}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n        <!-- 内容 -->\n    </view>\n    <!-- 被打开菜单的（阻止上下滑动和返回） -->\n    <view wx:else class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\">\n        <!-- 内容 -->\n    </view>\n</block>\n``` \n\n效果是可行，但是会牺牲滑出和收起菜单的动画效果，因为通过css实现的动画效果只能在同一个组件中进行。\n\n## 最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\n\n绞尽脑汁之后，突然灵机一动想到了这样一个比较邪教的方法。\n\n思路：设置一个hidden属性（用来标记被划开菜单的条目，即需要设成catch的条目的index），在每次动画开始时进行setTimeOut设定延时，等待动画完毕后渲染hidden，根据hidden的值悄悄将所有条目替换成catch或bind的组件。\n\n注意：css中，动画设定是0.4s，延时应当适当小于这个值。\n\n``` wxml index.wxml\n<block wx:for=\"{{dataList}}\" data-index=\"{{index}}\">\n    <!-- 一个是没有被打开菜单的（支持上下滑动和返回） -->\n    <view wx:if=\"{{index!==hidden}}\" class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" bindtouchstart=\"{{item.isTouchMove ? '' : 'touchstart'}}\" bindtouchmove=\"{{item.isTouchMove ? '' : 'touchmove'}}\">\n        <!-- 内容 -->\n    </view>\n    <!-- 被打开菜单的（阻止上下滑动和返回） -->\n    <view wx:else class=\"item {{item.isTouchMove ? 'touch-move-active' : ''}}\" catchtouchstart=\"{{item.isTouchMove ? 'touchstart' : ''}}\" catchtouchmove=\"{{item.isTouchMove ? 'touchmove' : ''}}\">\n        <!-- 内容 -->\n    </view>\n</block>\n``` \n\n```javascript index.js\n/* Page */\n  data: {\n    dataList: [/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/],\n    startX: 0,\n    startY: 0,\n    hidden: null,//标记被隐藏的块index\n  },\n\n\n  touchStart(e) {\n    let dataList = this.data.dataList;\n    dataList.forEach(item => {\n      if (item.isTouchMove) {\n        item.isTouchMove = !item.isTouchMove;\n      }\n    });\n    this.setData({\n      dataList: dataList,\n    });\n\n    this.data.hidden = null; //先把hidden置null, 但不渲染\n\n    this.data.startX = e.touches[0].clientX;\n    this.data.startY = e.touches[0].clientY;\n  },\n  touchMove(e) {\n    let moveX = e.changedTouches[0].clientX,\n      moveY = e.changedTouches[0].clientY,\n      curIndex = e.currentTarget.dataset.index, \n      dataList = this.data.dataList,\n      angle = this.angle(\n        { X: this.data.startX,\n\t    Y: this.data.startY\n\t    }, { X: moveX,\n\t    Y: moveY\n\t    }\n\t  );\n    const that = this; //用于在forEach函数里访问data\n    dataList.forEach((item, index) => {\n      if (curIndex === index && angle < 30 && moveX < this.data.startX) {\n        item.isTouchMove = true;\n        that.data.hidden = index;//如果有块被滑动，将hidden设为此块，否则就会保持在null\n      } else {\n      \titem.isTouchMove = false; \n      }\n    });\n\n    this.setData({\n      dataList: dataList,\n    });\n\n    setTimeOut({\n      that.setData({\n        hidden: that.data.hidden //0.3s后渲染hidden来替换组件，此时动画基本放完了\n      })\n    }, 300);\n  },\n```\n\n经检验，如果动画设在0.3s，对于快速滑动也能比较好地适应。既保证了动画的流畅性，又保证了接管手势，不触发意外返回。\n\n## 总结\n\n至此，这个功能总算是顺利完成。虽然性能问题可能有待商榷（因为要进行大量的if else），但是目前来说是没有想出更好的解决方法。我感觉这个功能对我来说还是比较有锻炼性的，如果另辟蹊径也能达到目的的话，不妨大胆尝试。如有更好的想法，欢迎在评论区留言。","slug":"关于我如何艰难地在公司业务中实现侧滑置顶删除功能（二）","published":1,"updated":"2021-11-29T19:48:47.650Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e420007lsv0e8pzhd4t","content":"<p>上一章内容：<a href=\"/2021/08/16/%E5%85%B3%E4%BA%8E%E6%88%91%E5%A6%82%E4%BD%95%E8%89%B0%E9%9A%BE%E5%9C%B0%E5%9C%A8%E5%85%AC%E5%8F%B8%E4%B8%9A%E5%8A%A1%E4%B8%AD%E5%AE%9E%E7%8E%B0%E4%BE%A7%E6%BB%91%E7%BD%AE%E9%A1%B6%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD%EF%BC%88%E4%B8%80%EF%BC%89\">关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）</a></p>\n<p>原代码不再贴出。</p>\n<h2 id=\"新的工程需求\"><a href=\"#新的工程需求\" class=\"headerlink\" title=\"新的工程需求\"></a>新的工程需求</h2><p>上次算是做出来一个像样的侧滑置顶删除功能了，在微信小程序调试中以及安卓机上调试都没有问题，但在iOS测试机上运行时却出现了问题：</p>\n<p>不知道是因为这个APP在iOS端上的一个整体功能还是微信小程序原生的触发，在右滑取消菜单的时候会触发一个返回到上级页面的操作……着实是让人不解。理论上，iOS原生的返回手势只有在手指接近屏幕左侧且右滑的时候才会触发。事实上，这个APP的另一个模块也有类似的侧滑删除功能，且右滑该条消息取消菜单时不会触发返回。于是mentor带我去请教了负责这块的iOS开发大哥，他表示：可以尝试在右滑取消时接管手势，但是微信小程序如何实现他也不知道。</p>\n<h2 id=\"初步想法：阻止手势穿透\"><a href=\"#初步想法：阻止手势穿透\" class=\"headerlink\" title=\"初步想法：阻止手势穿透\"></a>初步想法：阻止手势穿透</h2><p>微信小程序的事件有着冒泡机制，而手势则是整个窗口的一些事件（具体事件为tap, touchstart, touchmove, touchend, touchcancel等）。在wxml代码中进行事件捕捉时，需要设定组件的属性catchtap/bindtap, catchtouchstart/bindtouchstart等，这些都是用来捕捉微信小程序原生事件的属性。catch和bind的区别则是，catch会阻止事件冒泡，而bind不会。也就是说，只要设置catchtap，tap事件就会被局限在这个组件上，在它之后可能会收到事件的父组件、子组件都无法收到这个事件了。所以，如果对消息条组件设置catchtap，会不会就能够阻止页面返回呢？</p>\n<span id=\"more\"></span>\n\n<h2 id=\"尝试：将bind换成catch\"><a href=\"#尝试：将bind换成catch\" class=\"headerlink\" title=\"尝试：将bind换成catch\"></a>尝试：将bind换成catch</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;touchStart&quot; catchtouchmove=&quot;touchMove&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以是可以阻止滚动，但结果带来了其他的麻烦，因为catch也阻止了上下滑动触发页面滚动的手势，所以如果有很多内容，手势会被限制在某条组件内，页面就动不了了。</p>\n<h2 id=\"尝试：使bind和catch的事件根据isTouchMove进行变化\"><a href=\"#尝试：使bind和catch的事件根据isTouchMove进行变化\" class=\"headerlink\" title=\"尝试：使bind和catch的事件根据isTouchMove进行变化\"></a>尝试：使bind和catch的事件根据isTouchMove进行变化</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot; </span><br><span class=\"line\">    bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但是没有用，微信小程序并不能同时使用bind和catch两种属性，只会取其一。之后想想，这样的思路也不对，传空的事件名并不会使得事件解绑，而是引发了一个空的函数。</p>\n<h2 id=\"尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\"><a href=\"#尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\" class=\"headerlink\" title=\"尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\"></a>尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;block wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 一个是没有被打开菜单的（支持上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:if=&quot;&#123;&#123;!item.isTouchMove&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">    &lt;!-- 被打开菜单的（阻止上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:else class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/block&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果是可行，但是会牺牲滑出和收起菜单的动画效果，因为通过css实现的动画效果只能在同一个组件中进行。</p>\n<h2 id=\"最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\"><a href=\"#最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\" class=\"headerlink\" title=\"最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\"></a>最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换</h2><p>绞尽脑汁之后，突然灵机一动想到了这样一个比较邪教的方法。</p>\n<p>思路：设置一个hidden属性（用来标记被划开菜单的条目，即需要设成catch的条目的index），在每次动画开始时进行setTimeOut设定延时，等待动画完毕后渲染hidden，根据hidden的值悄悄将所有条目替换成catch或bind的组件。</p>\n<p>注意：css中，动画设定是0.4s，延时应当适当小于这个值。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;block wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 一个是没有被打开菜单的（支持上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:if=&quot;&#123;&#123;index!==hidden&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">    &lt;!-- 被打开菜单的（阻止上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:else class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/block&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Page */</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">dataList</span>: [<span class=\"comment\">/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/</span>],</span><br><span class=\"line\">    <span class=\"attr\">startX</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">startY</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">hidden</span>: <span class=\"literal\">null</span>,<span class=\"comment\">//标记被隐藏的块index</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchStart</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataList = <span class=\"built_in\">this</span>.data.dataList;</span><br><span class=\"line\">    dataList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.isTouchMove) &#123;</span><br><span class=\"line\">        item.isTouchMove = !item.isTouchMove;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.hidden = <span class=\"literal\">null</span>; <span class=\"comment\">//先把hidden置null, 但不渲染</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startX = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startY = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchMove</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> moveX = e.changedTouches[<span class=\"number\">0</span>].clientX,</span><br><span class=\"line\">      moveY = e.changedTouches[<span class=\"number\">0</span>].clientY,</span><br><span class=\"line\">      curIndex = e.currentTarget.dataset.index, </span><br><span class=\"line\">      dataList = <span class=\"built_in\">this</span>.data.dataList,</span><br><span class=\"line\">      angle = <span class=\"built_in\">this</span>.angle(</span><br><span class=\"line\">        &#123; <span class=\"attr\">X</span>: <span class=\"built_in\">this</span>.data.startX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: <span class=\"built_in\">this</span>.data.startY</span><br><span class=\"line\">\t    &#125;, &#123; <span class=\"attr\">X</span>: moveX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: moveY</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t  );</span><br><span class=\"line\">    <span class=\"keyword\">const</span> that = <span class=\"built_in\">this</span>; <span class=\"comment\">//用于在forEach函数里访问data</span></span><br><span class=\"line\">    dataList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (curIndex === index &amp;&amp; angle &lt; <span class=\"number\">30</span> &amp;&amp; moveX &lt; <span class=\"built_in\">this</span>.data.startX) &#123;</span><br><span class=\"line\">        item.isTouchMove = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        that.data.hidden = index;<span class=\"comment\">//如果有块被滑动，将hidden设为此块，否则就会保持在null</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      \titem.isTouchMove = <span class=\"literal\">false</span>; </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeOut(&#123;</span><br><span class=\"line\">      that.setData(&#123;</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: that.data.hidden <span class=\"comment\">//0.3s后渲染hidden来替换组件，此时动画基本放完了</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;, <span class=\"number\">300</span>);</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>经检验，如果动画设在0.3s，对于快速滑动也能比较好地适应。既保证了动画的流畅性，又保证了接管手势，不触发意外返回。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>至此，这个功能总算是顺利完成。虽然性能问题可能有待商榷（因为要进行大量的if else），但是目前来说是没有想出更好的解决方法。我感觉这个功能对我来说还是比较有锻炼性的，如果另辟蹊径也能达到目的的话，不妨大胆尝试。如有更好的想法，欢迎在评论区留言。</p>\n","site":{"data":{}},"excerpt":"<p>上一章内容：<a href=\"/2021/08/16/%E5%85%B3%E4%BA%8E%E6%88%91%E5%A6%82%E4%BD%95%E8%89%B0%E9%9A%BE%E5%9C%B0%E5%9C%A8%E5%85%AC%E5%8F%B8%E4%B8%9A%E5%8A%A1%E4%B8%AD%E5%AE%9E%E7%8E%B0%E4%BE%A7%E6%BB%91%E7%BD%AE%E9%A1%B6%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD%EF%BC%88%E4%B8%80%EF%BC%89\">关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）</a></p>\n<p>原代码不再贴出。</p>\n<h2 id=\"新的工程需求\"><a href=\"#新的工程需求\" class=\"headerlink\" title=\"新的工程需求\"></a>新的工程需求</h2><p>上次算是做出来一个像样的侧滑置顶删除功能了，在微信小程序调试中以及安卓机上调试都没有问题，但在iOS测试机上运行时却出现了问题：</p>\n<p>不知道是因为这个APP在iOS端上的一个整体功能还是微信小程序原生的触发，在右滑取消菜单的时候会触发一个返回到上级页面的操作……着实是让人不解。理论上，iOS原生的返回手势只有在手指接近屏幕左侧且右滑的时候才会触发。事实上，这个APP的另一个模块也有类似的侧滑删除功能，且右滑该条消息取消菜单时不会触发返回。于是mentor带我去请教了负责这块的iOS开发大哥，他表示：可以尝试在右滑取消时接管手势，但是微信小程序如何实现他也不知道。</p>\n<h2 id=\"初步想法：阻止手势穿透\"><a href=\"#初步想法：阻止手势穿透\" class=\"headerlink\" title=\"初步想法：阻止手势穿透\"></a>初步想法：阻止手势穿透</h2><p>微信小程序的事件有着冒泡机制，而手势则是整个窗口的一些事件（具体事件为tap, touchstart, touchmove, touchend, touchcancel等）。在wxml代码中进行事件捕捉时，需要设定组件的属性catchtap/bindtap, catchtouchstart/bindtouchstart等，这些都是用来捕捉微信小程序原生事件的属性。catch和bind的区别则是，catch会阻止事件冒泡，而bind不会。也就是说，只要设置catchtap，tap事件就会被局限在这个组件上，在它之后可能会收到事件的父组件、子组件都无法收到这个事件了。所以，如果对消息条组件设置catchtap，会不会就能够阻止页面返回呢？</p>","more":"<h2 id=\"尝试：将bind换成catch\"><a href=\"#尝试：将bind换成catch\" class=\"headerlink\" title=\"尝试：将bind换成catch\"></a>尝试：将bind换成catch</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;touchStart&quot; catchtouchmove=&quot;touchMove&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以是可以阻止滚动，但结果带来了其他的麻烦，因为catch也阻止了上下滑动触发页面滚动的手势，所以如果有很多内容，手势会被限制在某条组件内，页面就动不了了。</p>\n<h2 id=\"尝试：使bind和catch的事件根据isTouchMove进行变化\"><a href=\"#尝试：使bind和catch的事件根据isTouchMove进行变化\" class=\"headerlink\" title=\"尝试：使bind和catch的事件根据isTouchMove进行变化\"></a>尝试：使bind和catch的事件根据isTouchMove进行变化</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot; </span><br><span class=\"line\">    bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但是没有用，微信小程序并不能同时使用bind和catch两种属性，只会取其一。之后想想，这样的思路也不对，传空的事件名并不会使得事件解绑，而是引发了一个空的函数。</p>\n<h2 id=\"尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\"><a href=\"#尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\" class=\"headerlink\" title=\"尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个\"></a>尝试：建立两个一模一样但分别是bind和catch的组件，然后根据isTouchMove的值选择显示哪一个</h2><figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;block wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 一个是没有被打开菜单的（支持上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:if=&quot;&#123;&#123;!item.isTouchMove&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">    &lt;!-- 被打开菜单的（阻止上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:else class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/block&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果是可行，但是会牺牲滑出和收起菜单的动画效果，因为通过css实现的动画效果只能在同一个组件中进行。</p>\n<h2 id=\"最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\"><a href=\"#最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\" class=\"headerlink\" title=\"最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换\"></a>最终方案：建立两个一模一样但分别是bind和catch的组件，在每次动画结束后悄悄替换</h2><p>绞尽脑汁之后，突然灵机一动想到了这样一个比较邪教的方法。</p>\n<p>思路：设置一个hidden属性（用来标记被划开菜单的条目，即需要设成catch的条目的index），在每次动画开始时进行setTimeOut设定延时，等待动画完毕后渲染hidden，根据hidden的值悄悄将所有条目替换成catch或bind的组件。</p>\n<p>注意：css中，动画设定是0.4s，延时应当适当小于这个值。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;block wx:for=&quot;&#123;&#123;dataList&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 一个是没有被打开菜单的（支持上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:if=&quot;&#123;&#123;index!==hidden&#125;&#125;&quot; class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; bindtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchstart&#x27;&#125;&#125;&quot; bindtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;&#x27; : &#x27;touchmove&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">    &lt;!-- 被打开菜单的（阻止上下滑动和返回） --&gt;</span><br><span class=\"line\">    &lt;view wx:else class=&quot;item &#123;&#123;item.isTouchMove ? &#x27;touch-move-active&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchstart=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchstart&#x27; : &#x27;&#x27;&#125;&#125;&quot; catchtouchmove=&quot;&#123;&#123;item.isTouchMove ? &#x27;touchmove&#x27; : &#x27;&#x27;&#125;&#125;&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 内容 --&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/block&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Page */</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">dataList</span>: [<span class=\"comment\">/*存放的数据，每条中应有一个默认为false的属性isTouchMove*/</span>],</span><br><span class=\"line\">    <span class=\"attr\">startX</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">startY</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">hidden</span>: <span class=\"literal\">null</span>,<span class=\"comment\">//标记被隐藏的块index</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchStart</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataList = <span class=\"built_in\">this</span>.data.dataList;</span><br><span class=\"line\">    dataList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.isTouchMove) &#123;</span><br><span class=\"line\">        item.isTouchMove = !item.isTouchMove;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.hidden = <span class=\"literal\">null</span>; <span class=\"comment\">//先把hidden置null, 但不渲染</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startX = e.touches[<span class=\"number\">0</span>].clientX;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data.startY = e.touches[<span class=\"number\">0</span>].clientY;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">touchMove</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> moveX = e.changedTouches[<span class=\"number\">0</span>].clientX,</span><br><span class=\"line\">      moveY = e.changedTouches[<span class=\"number\">0</span>].clientY,</span><br><span class=\"line\">      curIndex = e.currentTarget.dataset.index, </span><br><span class=\"line\">      dataList = <span class=\"built_in\">this</span>.data.dataList,</span><br><span class=\"line\">      angle = <span class=\"built_in\">this</span>.angle(</span><br><span class=\"line\">        &#123; <span class=\"attr\">X</span>: <span class=\"built_in\">this</span>.data.startX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: <span class=\"built_in\">this</span>.data.startY</span><br><span class=\"line\">\t    &#125;, &#123; <span class=\"attr\">X</span>: moveX,</span><br><span class=\"line\">\t    <span class=\"attr\">Y</span>: moveY</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t  );</span><br><span class=\"line\">    <span class=\"keyword\">const</span> that = <span class=\"built_in\">this</span>; <span class=\"comment\">//用于在forEach函数里访问data</span></span><br><span class=\"line\">    dataList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (curIndex === index &amp;&amp; angle &lt; <span class=\"number\">30</span> &amp;&amp; moveX &lt; <span class=\"built_in\">this</span>.data.startX) &#123;</span><br><span class=\"line\">        item.isTouchMove = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        that.data.hidden = index;<span class=\"comment\">//如果有块被滑动，将hidden设为此块，否则就会保持在null</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      \titem.isTouchMove = <span class=\"literal\">false</span>; </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">dataList</span>: dataList,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeOut(&#123;</span><br><span class=\"line\">      that.setData(&#123;</span><br><span class=\"line\">        <span class=\"attr\">hidden</span>: that.data.hidden <span class=\"comment\">//0.3s后渲染hidden来替换组件，此时动画基本放完了</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;, <span class=\"number\">300</span>);</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>经检验，如果动画设在0.3s，对于快速滑动也能比较好地适应。既保证了动画的流畅性，又保证了接管手势，不触发意外返回。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>至此，这个功能总算是顺利完成。虽然性能问题可能有待商榷（因为要进行大量的if else），但是目前来说是没有想出更好的解决方法。我感觉这个功能对我来说还是比较有锻炼性的，如果另辟蹊径也能达到目的的话，不妨大胆尝试。如有更好的想法，欢迎在评论区留言。</p>"},{"title":"巨匠手工收益计算器","date":"2021-11-04T15:40:07.000Z","comment":true,"_content":"\n## 引言\n出于即兴制作一个网页的想法，考虑到最近玩FF14的实际需求，于是制作了这样一个页面的小工具来实现根据材料价格来计算成本，并且根据成本和售价计算利润的功能，然后索性将页面搭载在了自己的博客上（买不起服务器）。\n夹带私货，把自己的女仆装猫娘图片挂在了网页上。做了不同设备适配的响应式布局（使用了媒体查询）。\n\n## 地址导航\n[巨匠手工收益计算器](/巨匠手工收益计算器/index.html)\n\n<!--more-->\n\n## 使用方式\n在左边的输入框中输入各个材料的价格，点击第一个按钮就可以计算成本。成本也可以手动输入。\n在成本被写入后，可写入售价并点击第二个按钮，就可以计算利润。\n\n## 更新日志\n```\n2021.11.27 使用vue进行重构。修正了成本也会被加入localStorage的问题。\n2021.11.04 修复了未输入数据或数据格式不为数字时点击计算出错的问题（置0）；增加了点击按钮时保存本地数据，下次进入自动加载的功能。\n2021.11.03 调整了移动端小屏的按钮设计。未修复display:table的兼容性问题。\n```","source":"_posts/巨匠手工收益计算器.md","raw":"---\ntitle: 巨匠手工收益计算器\ndate: 2021-11-04 23:40:07\ntags: [FF14, 项目]\ncategories: [FF14, 项目]\ncomment: true\n---\n\n## 引言\n出于即兴制作一个网页的想法，考虑到最近玩FF14的实际需求，于是制作了这样一个页面的小工具来实现根据材料价格来计算成本，并且根据成本和售价计算利润的功能，然后索性将页面搭载在了自己的博客上（买不起服务器）。\n夹带私货，把自己的女仆装猫娘图片挂在了网页上。做了不同设备适配的响应式布局（使用了媒体查询）。\n\n## 地址导航\n[巨匠手工收益计算器](/巨匠手工收益计算器/index.html)\n\n<!--more-->\n\n## 使用方式\n在左边的输入框中输入各个材料的价格，点击第一个按钮就可以计算成本。成本也可以手动输入。\n在成本被写入后，可写入售价并点击第二个按钮，就可以计算利润。\n\n## 更新日志\n```\n2021.11.27 使用vue进行重构。修正了成本也会被加入localStorage的问题。\n2021.11.04 修复了未输入数据或数据格式不为数字时点击计算出错的问题（置0）；增加了点击按钮时保存本地数据，下次进入自动加载的功能。\n2021.11.03 调整了移动端小屏的按钮设计。未修复display:table的兼容性问题。\n```","slug":"巨匠手工收益计算器","published":1,"updated":"2021-11-29T19:48:47.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e430008lsv0fe1dei5t","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>出于即兴制作一个网页的想法，考虑到最近玩FF14的实际需求，于是制作了这样一个页面的小工具来实现根据材料价格来计算成本，并且根据成本和售价计算利润的功能，然后索性将页面搭载在了自己的博客上（买不起服务器）。<br>夹带私货，把自己的女仆装猫娘图片挂在了网页上。做了不同设备适配的响应式布局（使用了媒体查询）。</p>\n<h2 id=\"地址导航\"><a href=\"#地址导航\" class=\"headerlink\" title=\"地址导航\"></a>地址导航</h2><p><a href=\"/%E5%B7%A8%E5%8C%A0%E6%89%8B%E5%B7%A5%E6%94%B6%E7%9B%8A%E8%AE%A1%E7%AE%97%E5%99%A8/index.html\">巨匠手工收益计算器</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><p>在左边的输入框中输入各个材料的价格，点击第一个按钮就可以计算成本。成本也可以手动输入。<br>在成本被写入后，可写入售价并点击第二个按钮，就可以计算利润。</p>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2021.11.27 使用vue进行重构。修正了成本也会被加入localStorage的问题。</span><br><span class=\"line\">2021.11.04 修复了未输入数据或数据格式不为数字时点击计算出错的问题（置0）；增加了点击按钮时保存本地数据，下次进入自动加载的功能。</span><br><span class=\"line\">2021.11.03 调整了移动端小屏的按钮设计。未修复display:table的兼容性问题。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>出于即兴制作一个网页的想法，考虑到最近玩FF14的实际需求，于是制作了这样一个页面的小工具来实现根据材料价格来计算成本，并且根据成本和售价计算利润的功能，然后索性将页面搭载在了自己的博客上（买不起服务器）。<br>夹带私货，把自己的女仆装猫娘图片挂在了网页上。做了不同设备适配的响应式布局（使用了媒体查询）。</p>\n<h2 id=\"地址导航\"><a href=\"#地址导航\" class=\"headerlink\" title=\"地址导航\"></a>地址导航</h2><p><a href=\"/%E5%B7%A8%E5%8C%A0%E6%89%8B%E5%B7%A5%E6%94%B6%E7%9B%8A%E8%AE%A1%E7%AE%97%E5%99%A8/index.html\">巨匠手工收益计算器</a></p>","more":"<h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><p>在左边的输入框中输入各个材料的价格，点击第一个按钮就可以计算成本。成本也可以手动输入。<br>在成本被写入后，可写入售价并点击第二个按钮，就可以计算利润。</p>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2021.11.27 使用vue进行重构。修正了成本也会被加入localStorage的问题。</span><br><span class=\"line\">2021.11.04 修复了未输入数据或数据格式不为数字时点击计算出错的问题（置0）；增加了点击按钮时保存本地数据，下次进入自动加载的功能。</span><br><span class=\"line\">2021.11.03 调整了移动端小屏的按钮设计。未修复display:table的兼容性问题。</span><br></pre></td></tr></table></figure>"},{"title":"微信小程序：灵活适配不同标题栏高度的设备的方法","date":"2021-08-14T15:40:07.000Z","comment":true,"_content":"\n## 工程需求\n\n开发的应用：用微信小程序经由hera生成的跨平台移动端App。\n\n作为实习生在工作中遇到了这样的需求：需要顶部的标题栏和选择标签栏保持一直在窗口顶部（样式即top:0; position:fixed;），而其他的内容组件则可以随着页面滚动（样式即position:absolute;）。而我开发的小程序属于跨平台App，不知道公司的标题栏大小是如何设置的，总之会产生不同设备上标题栏高度不一的问题（尤其体现在微信小程序和hera生成的Android/IOS应用之间）。那么则需要解决一个问题，如何让absolute的内容组件自动贴着fixed的顶部组件生成呢？\n\n首先，对于需要分别设置不同position的组件，当然不能使用flex布局之类的进行自动黏贴。那么接下来的想法是想办法获取fixed部分的底部高度。\n\n## 方案参考\n\n在公司其他员工的代码中发现了这样的操作：在html页面中建立一个wxs脚本，运行时获取设备是否为Android，如果是则通过Android系统接口获取标题栏高度而进行对固定内容组件的top样式的渲染，否则就不要使用位置fixed。\n\n私以为，还能够用更优雅的代码和适配性更强的方案去解决这个问题，于是经过一番思考有了以下的方案：\n\n<!-- more -->\n\n## 最终方案\n\n### 大体思路如下：\n\n在onLoad函数中使用微信小程序的SelectorQuery选取需要设置fixed的view，然后获取它的底部高度，再对需要设置absolute的内容组件的top样式进行渲染。\n\n### 主要代码：\n\n``` javascript index.js\n/* page */\n\tdata: {\n\t\tdAbsoluteTop: 0, //准备设置固定内容组件的高度\n\t},\n\n\tonLoad: function(){\n\t\tconst that = this;\n\t\tconst query = wx.createSelectorQuery();\n\t\tquery.select('#fixed-view').boundingClientRect();\n\t\tquery.selectViewport().scrollOffset();\n\t\tquery.exec(function(res){\n\t\t\tthat.setData({\n\t\t\t\tdAbsoluteTop: res[0].bottom //根据底部渲染\n\t\t\t});\n\t\t});\n\t},\n```\n\n``` wxml index.wxml\n<view id=\"fixed-view\" style=\"position: fixed; top: 0; display: flex; flex-direction: column;\">\n\t<titlebar /> <!-- 标题栏 -->\n\t<tabbar /> <!-- 选择标签栏 -->\n</view>\n<view style=\"position: absolute; top: {{dAbsolute}};\">\n\t<!-- 内容 -->\n</view>\n```\n\n经不同设备检验，效果良好。","source":"_posts/微信小程序：灵活适配不同标题栏高度的设备的方法.md","raw":"---\ntitle: 微信小程序：灵活适配不同标题栏高度的设备的方法\ndate: 2021-08-14 23:40:07\ntags: [微信小程序,fs]\ncategories: 微信小程序\ncomment: true\n---\n\n## 工程需求\n\n开发的应用：用微信小程序经由hera生成的跨平台移动端App。\n\n作为实习生在工作中遇到了这样的需求：需要顶部的标题栏和选择标签栏保持一直在窗口顶部（样式即top:0; position:fixed;），而其他的内容组件则可以随着页面滚动（样式即position:absolute;）。而我开发的小程序属于跨平台App，不知道公司的标题栏大小是如何设置的，总之会产生不同设备上标题栏高度不一的问题（尤其体现在微信小程序和hera生成的Android/IOS应用之间）。那么则需要解决一个问题，如何让absolute的内容组件自动贴着fixed的顶部组件生成呢？\n\n首先，对于需要分别设置不同position的组件，当然不能使用flex布局之类的进行自动黏贴。那么接下来的想法是想办法获取fixed部分的底部高度。\n\n## 方案参考\n\n在公司其他员工的代码中发现了这样的操作：在html页面中建立一个wxs脚本，运行时获取设备是否为Android，如果是则通过Android系统接口获取标题栏高度而进行对固定内容组件的top样式的渲染，否则就不要使用位置fixed。\n\n私以为，还能够用更优雅的代码和适配性更强的方案去解决这个问题，于是经过一番思考有了以下的方案：\n\n<!-- more -->\n\n## 最终方案\n\n### 大体思路如下：\n\n在onLoad函数中使用微信小程序的SelectorQuery选取需要设置fixed的view，然后获取它的底部高度，再对需要设置absolute的内容组件的top样式进行渲染。\n\n### 主要代码：\n\n``` javascript index.js\n/* page */\n\tdata: {\n\t\tdAbsoluteTop: 0, //准备设置固定内容组件的高度\n\t},\n\n\tonLoad: function(){\n\t\tconst that = this;\n\t\tconst query = wx.createSelectorQuery();\n\t\tquery.select('#fixed-view').boundingClientRect();\n\t\tquery.selectViewport().scrollOffset();\n\t\tquery.exec(function(res){\n\t\t\tthat.setData({\n\t\t\t\tdAbsoluteTop: res[0].bottom //根据底部渲染\n\t\t\t});\n\t\t});\n\t},\n```\n\n``` wxml index.wxml\n<view id=\"fixed-view\" style=\"position: fixed; top: 0; display: flex; flex-direction: column;\">\n\t<titlebar /> <!-- 标题栏 -->\n\t<tabbar /> <!-- 选择标签栏 -->\n</view>\n<view style=\"position: absolute; top: {{dAbsolute}};\">\n\t<!-- 内容 -->\n</view>\n```\n\n经不同设备检验，效果良好。","slug":"微信小程序：灵活适配不同标题栏高度的设备的方法","published":1,"updated":"2021-11-29T19:48:47.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e44000blsv03oekf9ys","content":"<h2 id=\"工程需求\"><a href=\"#工程需求\" class=\"headerlink\" title=\"工程需求\"></a>工程需求</h2><p>开发的应用：用微信小程序经由hera生成的跨平台移动端App。</p>\n<p>作为实习生在工作中遇到了这样的需求：需要顶部的标题栏和选择标签栏保持一直在窗口顶部（样式即top:0; position:fixed;），而其他的内容组件则可以随着页面滚动（样式即position:absolute;）。而我开发的小程序属于跨平台App，不知道公司的标题栏大小是如何设置的，总之会产生不同设备上标题栏高度不一的问题（尤其体现在微信小程序和hera生成的Android/IOS应用之间）。那么则需要解决一个问题，如何让absolute的内容组件自动贴着fixed的顶部组件生成呢？</p>\n<p>首先，对于需要分别设置不同position的组件，当然不能使用flex布局之类的进行自动黏贴。那么接下来的想法是想办法获取fixed部分的底部高度。</p>\n<h2 id=\"方案参考\"><a href=\"#方案参考\" class=\"headerlink\" title=\"方案参考\"></a>方案参考</h2><p>在公司其他员工的代码中发现了这样的操作：在html页面中建立一个wxs脚本，运行时获取设备是否为Android，如果是则通过Android系统接口获取标题栏高度而进行对固定内容组件的top样式的渲染，否则就不要使用位置fixed。</p>\n<p>私以为，还能够用更优雅的代码和适配性更强的方案去解决这个问题，于是经过一番思考有了以下的方案：</p>\n<span id=\"more\"></span>\n\n<h2 id=\"最终方案\"><a href=\"#最终方案\" class=\"headerlink\" title=\"最终方案\"></a>最终方案</h2><h3 id=\"大体思路如下：\"><a href=\"#大体思路如下：\" class=\"headerlink\" title=\"大体思路如下：\"></a>大体思路如下：</h3><p>在onLoad函数中使用微信小程序的SelectorQuery选取需要设置fixed的view，然后获取它的底部高度，再对需要设置absolute的内容组件的top样式进行渲染。</p>\n<h3 id=\"主要代码：\"><a href=\"#主要代码：\" class=\"headerlink\" title=\"主要代码：\"></a>主要代码：</h3><figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* page */</span></span><br><span class=\"line\">\t<span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">dAbsoluteTop</span>: <span class=\"number\">0</span>, <span class=\"comment\">//准备设置固定内容组件的高度</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> query = wx.createSelectorQuery();</span><br><span class=\"line\">\t\tquery.select(<span class=\"string\">&#x27;#fixed-view&#x27;</span>).boundingClientRect();</span><br><span class=\"line\">\t\tquery.selectViewport().scrollOffset();</span><br><span class=\"line\">\t\tquery.exec(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.setData(&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">dAbsoluteTop</span>: res[<span class=\"number\">0</span>].bottom <span class=\"comment\">//根据底部渲染</span></span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view id=&quot;fixed-view&quot; style=&quot;position: fixed; top: 0; display: flex; flex-direction: column;&quot;&gt;</span><br><span class=\"line\">\t&lt;titlebar /&gt; &lt;!-- 标题栏 --&gt;</span><br><span class=\"line\">\t&lt;tabbar /&gt; &lt;!-- 选择标签栏 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br><span class=\"line\">&lt;view style=&quot;position: absolute; top: &#123;&#123;dAbsolute&#125;&#125;;&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>经不同设备检验，效果良好。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"工程需求\"><a href=\"#工程需求\" class=\"headerlink\" title=\"工程需求\"></a>工程需求</h2><p>开发的应用：用微信小程序经由hera生成的跨平台移动端App。</p>\n<p>作为实习生在工作中遇到了这样的需求：需要顶部的标题栏和选择标签栏保持一直在窗口顶部（样式即top:0; position:fixed;），而其他的内容组件则可以随着页面滚动（样式即position:absolute;）。而我开发的小程序属于跨平台App，不知道公司的标题栏大小是如何设置的，总之会产生不同设备上标题栏高度不一的问题（尤其体现在微信小程序和hera生成的Android/IOS应用之间）。那么则需要解决一个问题，如何让absolute的内容组件自动贴着fixed的顶部组件生成呢？</p>\n<p>首先，对于需要分别设置不同position的组件，当然不能使用flex布局之类的进行自动黏贴。那么接下来的想法是想办法获取fixed部分的底部高度。</p>\n<h2 id=\"方案参考\"><a href=\"#方案参考\" class=\"headerlink\" title=\"方案参考\"></a>方案参考</h2><p>在公司其他员工的代码中发现了这样的操作：在html页面中建立一个wxs脚本，运行时获取设备是否为Android，如果是则通过Android系统接口获取标题栏高度而进行对固定内容组件的top样式的渲染，否则就不要使用位置fixed。</p>\n<p>私以为，还能够用更优雅的代码和适配性更强的方案去解决这个问题，于是经过一番思考有了以下的方案：</p>","more":"<h2 id=\"最终方案\"><a href=\"#最终方案\" class=\"headerlink\" title=\"最终方案\"></a>最终方案</h2><h3 id=\"大体思路如下：\"><a href=\"#大体思路如下：\" class=\"headerlink\" title=\"大体思路如下：\"></a>大体思路如下：</h3><p>在onLoad函数中使用微信小程序的SelectorQuery选取需要设置fixed的view，然后获取它的底部高度，再对需要设置absolute的内容组件的top样式进行渲染。</p>\n<h3 id=\"主要代码：\"><a href=\"#主要代码：\" class=\"headerlink\" title=\"主要代码：\"></a>主要代码：</h3><figure class=\"highlight javascript\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* page */</span></span><br><span class=\"line\">\t<span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">dAbsoluteTop</span>: <span class=\"number\">0</span>, <span class=\"comment\">//准备设置固定内容组件的高度</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> query = wx.createSelectorQuery();</span><br><span class=\"line\">\t\tquery.select(<span class=\"string\">&#x27;#fixed-view&#x27;</span>).boundingClientRect();</span><br><span class=\"line\">\t\tquery.selectViewport().scrollOffset();</span><br><span class=\"line\">\t\tquery.exec(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.setData(&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">dAbsoluteTop</span>: res[<span class=\"number\">0</span>].bottom <span class=\"comment\">//根据底部渲染</span></span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><figcaption><span>index.wxml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view id=&quot;fixed-view&quot; style=&quot;position: fixed; top: 0; display: flex; flex-direction: column;&quot;&gt;</span><br><span class=\"line\">\t&lt;titlebar /&gt; &lt;!-- 标题栏 --&gt;</span><br><span class=\"line\">\t&lt;tabbar /&gt; &lt;!-- 选择标签栏 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br><span class=\"line\">&lt;view style=&quot;position: absolute; top: &#123;&#123;dAbsolute&#125;&#125;;&quot;&gt;</span><br><span class=\"line\">\t&lt;!-- 内容 --&gt;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n\n<p>经不同设备检验，效果良好。</p>"},{"title":"牛客错题簿-CSS","date":"2021-08-31T18:47:04.000Z","_content":"\nCSS选择器的权重（赋属性时的覆盖优先级）：\n  * style: 1000 （HTML中的行内样式）\n  * id: 100 （#id{}）\n  * class: 10 （.class{}）\n  * element: 1 （element{}）\n\n<!--more-->\n---\n\n[CSS盒模型](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model)：\n  * 块级盒子和内联盒子\n  * 标准盒模型（content-box）和替代（奇异/IE）盒模型（border-box）\n  * 盒子内的部分\n    - content: 内容。在content-box中设置的宽和高就是内容的宽高。会应用该元素的背景。\n    - padding: 内边距。边框与内容区域之间的部分，增加内边距可以让边框和内容之间更宽敞。不能设置负值。内边距会应用该元素的背景。\n    - border: 边框。内边距以外的部分。如果要设置边框，一定要设置大小和样式，否则不会生效。当设置为solid时，边框实际上是四个等腰梯形均分边框外界和内边距外界两个矩形之间的空间。因此当内容和内边距的面积都是0的时候，就会变成均分一个矩形，也就是四个三角形。由此可以实现将内容设为0，某些边框设为透明来显示三角形。\n    - margin: 外边距。在border以外的矩形部分，用来推开其他盒子。如果设置负值，则会向其他盒子重叠。会显示父元素的背景（因为是透明的）。两个紧挨的外边距会出现折叠的情况，通常只会设定成两个里面的较大值。\n  * 不管是padding, border, 还是margin, 他们的大小设置百分比时都是参照父元素的宽度。\n  * 当使用padding或margin属性设置时：\n    - padding: 10px; 上下左右全部设为10px;\n    - padding: 10px 2px; 上下设为10px, 左右设为2px;\n    - padding: 2px 3px 4px; 上设为2px, 左右设为3px, 下设为4px;\n    - padding: 2px 3px 4px 5px; 上右下左（顺时针）分别设置。\n\n---\n\n改变一个元素状态CSS属性的排列顺序可以改变显示优先级，在后的会优先显示。\n\n题目：超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了，解决方法是改变CSS属性的排列顺序？\n\n答案：a:link {} a:visited {} a:hover {} a:active {}\n\n---\n\nword-break属性可以调整是否为整个单词换行，[white-space](https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space)属性可以设定是否以及在哪些地方自动换行，所以严格来说如果要设置不换行应该设置white-space（可以设为nowrap）。\n\n---\n\nCSS选择器中，nth-child是从1开始数的。\n\n---\n\nCSS中link和@import的区别:\n  * link属于XHTML标签，而@import完全是CSS提供的一种方式。\n  * 当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。\n  * link在支持CSS的浏览器上都支持而@import只在5.0以上的版本有效。\n  * 当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。\n\n---\n\n","source":"_posts/牛客错题簿-CSS.md","raw":"---\ntitle: 牛客错题簿-CSS\ndate: 2021-09-01 02:47:04\ntags: CSS\ncategories: CSS\n---\n\nCSS选择器的权重（赋属性时的覆盖优先级）：\n  * style: 1000 （HTML中的行内样式）\n  * id: 100 （#id{}）\n  * class: 10 （.class{}）\n  * element: 1 （element{}）\n\n<!--more-->\n---\n\n[CSS盒模型](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model)：\n  * 块级盒子和内联盒子\n  * 标准盒模型（content-box）和替代（奇异/IE）盒模型（border-box）\n  * 盒子内的部分\n    - content: 内容。在content-box中设置的宽和高就是内容的宽高。会应用该元素的背景。\n    - padding: 内边距。边框与内容区域之间的部分，增加内边距可以让边框和内容之间更宽敞。不能设置负值。内边距会应用该元素的背景。\n    - border: 边框。内边距以外的部分。如果要设置边框，一定要设置大小和样式，否则不会生效。当设置为solid时，边框实际上是四个等腰梯形均分边框外界和内边距外界两个矩形之间的空间。因此当内容和内边距的面积都是0的时候，就会变成均分一个矩形，也就是四个三角形。由此可以实现将内容设为0，某些边框设为透明来显示三角形。\n    - margin: 外边距。在border以外的矩形部分，用来推开其他盒子。如果设置负值，则会向其他盒子重叠。会显示父元素的背景（因为是透明的）。两个紧挨的外边距会出现折叠的情况，通常只会设定成两个里面的较大值。\n  * 不管是padding, border, 还是margin, 他们的大小设置百分比时都是参照父元素的宽度。\n  * 当使用padding或margin属性设置时：\n    - padding: 10px; 上下左右全部设为10px;\n    - padding: 10px 2px; 上下设为10px, 左右设为2px;\n    - padding: 2px 3px 4px; 上设为2px, 左右设为3px, 下设为4px;\n    - padding: 2px 3px 4px 5px; 上右下左（顺时针）分别设置。\n\n---\n\n改变一个元素状态CSS属性的排列顺序可以改变显示优先级，在后的会优先显示。\n\n题目：超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了，解决方法是改变CSS属性的排列顺序？\n\n答案：a:link {} a:visited {} a:hover {} a:active {}\n\n---\n\nword-break属性可以调整是否为整个单词换行，[white-space](https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space)属性可以设定是否以及在哪些地方自动换行，所以严格来说如果要设置不换行应该设置white-space（可以设为nowrap）。\n\n---\n\nCSS选择器中，nth-child是从1开始数的。\n\n---\n\nCSS中link和@import的区别:\n  * link属于XHTML标签，而@import完全是CSS提供的一种方式。\n  * 当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。\n  * link在支持CSS的浏览器上都支持而@import只在5.0以上的版本有效。\n  * 当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。\n\n---\n\n","slug":"牛客错题簿-CSS","published":1,"updated":"2021-11-29T19:48:47.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e45000clsv00h4cca9n","content":"<p>CSS选择器的权重（赋属性时的覆盖优先级）：</p>\n<ul>\n<li>style: 1000 （HTML中的行内样式）</li>\n<li>id: 100 （#id{}）</li>\n<li>class: 10 （.class{}）</li>\n<li>element: 1 （element{}）</li>\n</ul>\n<span id=\"more\"></span>\n<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">CSS盒模型</a>：</p>\n<ul>\n<li>块级盒子和内联盒子</li>\n<li>标准盒模型（content-box）和替代（奇异/IE）盒模型（border-box）</li>\n<li>盒子内的部分<ul>\n<li>content: 内容。在content-box中设置的宽和高就是内容的宽高。会应用该元素的背景。</li>\n<li>padding: 内边距。边框与内容区域之间的部分，增加内边距可以让边框和内容之间更宽敞。不能设置负值。内边距会应用该元素的背景。</li>\n<li>border: 边框。内边距以外的部分。如果要设置边框，一定要设置大小和样式，否则不会生效。当设置为solid时，边框实际上是四个等腰梯形均分边框外界和内边距外界两个矩形之间的空间。因此当内容和内边距的面积都是0的时候，就会变成均分一个矩形，也就是四个三角形。由此可以实现将内容设为0，某些边框设为透明来显示三角形。</li>\n<li>margin: 外边距。在border以外的矩形部分，用来推开其他盒子。如果设置负值，则会向其他盒子重叠。会显示父元素的背景（因为是透明的）。两个紧挨的外边距会出现折叠的情况，通常只会设定成两个里面的较大值。</li>\n</ul>\n</li>\n<li>不管是padding, border, 还是margin, 他们的大小设置百分比时都是参照父元素的宽度。</li>\n<li>当使用padding或margin属性设置时：<ul>\n<li>padding: 10px; 上下左右全部设为10px;</li>\n<li>padding: 10px 2px; 上下设为10px, 左右设为2px;</li>\n<li>padding: 2px 3px 4px; 上设为2px, 左右设为3px, 下设为4px;</li>\n<li>padding: 2px 3px 4px 5px; 上右下左（顺时针）分别设置。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>改变一个元素状态CSS属性的排列顺序可以改变显示优先级，在后的会优先显示。</p>\n<p>题目：超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了，解决方法是改变CSS属性的排列顺序？</p>\n<p>答案：a:link {} a:visited {} a:hover {} a:active {}</p>\n<hr>\n<p>word-break属性可以调整是否为整个单词换行，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space\">white-space</a>属性可以设定是否以及在哪些地方自动换行，所以严格来说如果要设置不换行应该设置white-space（可以设为nowrap）。</p>\n<hr>\n<p>CSS选择器中，nth-child是从1开始数的。</p>\n<hr>\n<p>CSS中link和@import的区别:</p>\n<ul>\n<li>link属于XHTML标签，而@import完全是CSS提供的一种方式。</li>\n<li>当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。</li>\n<li>link在支持CSS的浏览器上都支持而@import只在5.0以上的版本有效。</li>\n<li>当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。</li>\n</ul>\n<hr>\n","site":{"data":{}},"excerpt":"<p>CSS选择器的权重（赋属性时的覆盖优先级）：</p>\n<ul>\n<li>style: 1000 （HTML中的行内样式）</li>\n<li>id: 100 （#id{}）</li>\n<li>class: 10 （.class{}）</li>\n<li>element: 1 （element{}）</li>\n</ul>","more":"<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\">CSS盒模型</a>：</p>\n<ul>\n<li>块级盒子和内联盒子</li>\n<li>标准盒模型（content-box）和替代（奇异/IE）盒模型（border-box）</li>\n<li>盒子内的部分<ul>\n<li>content: 内容。在content-box中设置的宽和高就是内容的宽高。会应用该元素的背景。</li>\n<li>padding: 内边距。边框与内容区域之间的部分，增加内边距可以让边框和内容之间更宽敞。不能设置负值。内边距会应用该元素的背景。</li>\n<li>border: 边框。内边距以外的部分。如果要设置边框，一定要设置大小和样式，否则不会生效。当设置为solid时，边框实际上是四个等腰梯形均分边框外界和内边距外界两个矩形之间的空间。因此当内容和内边距的面积都是0的时候，就会变成均分一个矩形，也就是四个三角形。由此可以实现将内容设为0，某些边框设为透明来显示三角形。</li>\n<li>margin: 外边距。在border以外的矩形部分，用来推开其他盒子。如果设置负值，则会向其他盒子重叠。会显示父元素的背景（因为是透明的）。两个紧挨的外边距会出现折叠的情况，通常只会设定成两个里面的较大值。</li>\n</ul>\n</li>\n<li>不管是padding, border, 还是margin, 他们的大小设置百分比时都是参照父元素的宽度。</li>\n<li>当使用padding或margin属性设置时：<ul>\n<li>padding: 10px; 上下左右全部设为10px;</li>\n<li>padding: 10px 2px; 上下设为10px, 左右设为2px;</li>\n<li>padding: 2px 3px 4px; 上设为2px, 左右设为3px, 下设为4px;</li>\n<li>padding: 2px 3px 4px 5px; 上右下左（顺时针）分别设置。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>改变一个元素状态CSS属性的排列顺序可以改变显示优先级，在后的会优先显示。</p>\n<p>题目：超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了，解决方法是改变CSS属性的排列顺序？</p>\n<p>答案：a:link {} a:visited {} a:hover {} a:active {}</p>\n<hr>\n<p>word-break属性可以调整是否为整个单词换行，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space\">white-space</a>属性可以设定是否以及在哪些地方自动换行，所以严格来说如果要设置不换行应该设置white-space（可以设为nowrap）。</p>\n<hr>\n<p>CSS选择器中，nth-child是从1开始数的。</p>\n<hr>\n<p>CSS中link和@import的区别:</p>\n<ul>\n<li>link属于XHTML标签，而@import完全是CSS提供的一种方式。</li>\n<li>当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。</li>\n<li>link在支持CSS的浏览器上都支持而@import只在5.0以上的版本有效。</li>\n<li>当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。</li>\n</ul>\n<hr>"},{"title":"牛客错题簿-HTML","date":"2021-08-31T18:46:56.000Z","_content":"\nsection标签：Html5语义化后的新标签，表示将一大块内容分成几个部分。\n<!--more-->\n---\n\nnoscript标签：如果脚本未执行（如浏览器未支持JavaScript脚本），则会显示标签里的内容。\n```HTML\n<script type=\"text/javascript\">\n\t<!--\n\tdocument.write(\"Hello World!\")\n\t//-->\n</script><noscript>Your browser does not support JavaScript!</noscript>\n```\n---\n\n[HTMLFormElement.enctype](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/enctype)属性常用来指明提交表单的内容类型，可选的值如下：\n  * application/x-www-form-urlencoded: 初始的默认值，在发送前编码所有字符\n  * multipart/form-data:  不对字符编码，适用于使用\\<input> 标签上传文件\n  * text/plain: HTML5 引入的类型，空格转换为 \"+\" 加号，但不对特殊字符编码\n\n这些值可以通过元素 \\<button> or \\<input> 的属性form.enctype来改写。\n\n---\n\n\\<head>是文章的头部，\\<slider>是侧边栏，\\<main>是主要内容，\\<footer>是尾部。\n\n---\n\ninput属于窗体元素,层级显示比flash、其它元素都高。请判断这句话的正确与否。（错误）\n\n解释：在HTML中，帧元素（frameset）的显示优先级最高，其次是表单元素，然后是非表单元素。flash属于帧元素，优先级更高。input属于窗体元素是正确的。\n\n---\n\nCanvas和SVG的不同点：\n\nCanvas\n  * 依赖分辨率\n  * 不支持事件处理器\n  * 弱的文本渲染能力\n  * 能够以 .png 或 .jpg 格式保存结果图像\n  * 最适合图像密集型的游戏，其中的许多对象会被频繁重绘\n  * Canvas 是逐像素进行渲染的。\n  * 在 Canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。\n\nSVG\n  * 不依赖分辨率\n  * 支持事件处理器\n  * 最适合带有大型渲染区域的应用程序（比如谷歌地图）\n  * 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）\n  * 不适合游戏应用\n\n---\n\ninput中的滑块控件type是range（理解成了slider，但slider是侧边栏）。\n\n---\n\n[HTML的全局属性](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes)：所有标签都可以使用的属性。\n比如style, id, class等等。\n\n---\n\n什么情况会创建块格式化上下文 BFC（一个隔离的容器，容器里的子元素不会影响到外面的元素）\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\n\n---\n\n不能被冒泡的9个事件：load和unload、 mouseenter和mouseleave、 blur和focus、 error、 resize和abort\n\n---\n\n\\<a>可以包含任何其他元素，但不能包含\\<a>本身。\n\n---\n\nDom Tree的根节点是Document对象。\n\n---","source":"_posts/牛客错题簿-HTML.md","raw":"---\ntitle: 牛客错题簿-HTML\ndate: 2021-09-01 02:46:56\ntags: HTML\ncategories: HTML\n---\n\nsection标签：Html5语义化后的新标签，表示将一大块内容分成几个部分。\n<!--more-->\n---\n\nnoscript标签：如果脚本未执行（如浏览器未支持JavaScript脚本），则会显示标签里的内容。\n```HTML\n<script type=\"text/javascript\">\n\t<!--\n\tdocument.write(\"Hello World!\")\n\t//-->\n</script><noscript>Your browser does not support JavaScript!</noscript>\n```\n---\n\n[HTMLFormElement.enctype](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/enctype)属性常用来指明提交表单的内容类型，可选的值如下：\n  * application/x-www-form-urlencoded: 初始的默认值，在发送前编码所有字符\n  * multipart/form-data:  不对字符编码，适用于使用\\<input> 标签上传文件\n  * text/plain: HTML5 引入的类型，空格转换为 \"+\" 加号，但不对特殊字符编码\n\n这些值可以通过元素 \\<button> or \\<input> 的属性form.enctype来改写。\n\n---\n\n\\<head>是文章的头部，\\<slider>是侧边栏，\\<main>是主要内容，\\<footer>是尾部。\n\n---\n\ninput属于窗体元素,层级显示比flash、其它元素都高。请判断这句话的正确与否。（错误）\n\n解释：在HTML中，帧元素（frameset）的显示优先级最高，其次是表单元素，然后是非表单元素。flash属于帧元素，优先级更高。input属于窗体元素是正确的。\n\n---\n\nCanvas和SVG的不同点：\n\nCanvas\n  * 依赖分辨率\n  * 不支持事件处理器\n  * 弱的文本渲染能力\n  * 能够以 .png 或 .jpg 格式保存结果图像\n  * 最适合图像密集型的游戏，其中的许多对象会被频繁重绘\n  * Canvas 是逐像素进行渲染的。\n  * 在 Canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。\n\nSVG\n  * 不依赖分辨率\n  * 支持事件处理器\n  * 最适合带有大型渲染区域的应用程序（比如谷歌地图）\n  * 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）\n  * 不适合游戏应用\n\n---\n\ninput中的滑块控件type是range（理解成了slider，但slider是侧边栏）。\n\n---\n\n[HTML的全局属性](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes)：所有标签都可以使用的属性。\n比如style, id, class等等。\n\n---\n\n什么情况会创建块格式化上下文 BFC（一个隔离的容器，容器里的子元素不会影响到外面的元素）\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\n\n---\n\n不能被冒泡的9个事件：load和unload、 mouseenter和mouseleave、 blur和focus、 error、 resize和abort\n\n---\n\n\\<a>可以包含任何其他元素，但不能包含\\<a>本身。\n\n---\n\nDom Tree的根节点是Document对象。\n\n---","slug":"牛客错题簿-HTML","published":1,"updated":"2021-11-29T19:48:47.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e4d001nlsv0examc027","content":"<p>section标签：Html5语义化后的新标签，表示将一大块内容分成几个部分。</p>\n<span id=\"more\"></span>\n<hr>\n<p>noscript标签：如果脚本未执行（如浏览器未支持JavaScript脚本），则会显示标签里的内容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">\t<span class=\"comment\">&lt;!--</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"><span class=\"handlebars\">\tdocument.write(&quot;Hello World!&quot;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"><span class=\"handlebars\">\t//--&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\"></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span>Your browser does not support JavaScript!<span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/enctype\">HTMLFormElement.enctype</a>属性常用来指明提交表单的内容类型，可选的值如下：</p>\n<ul>\n<li>application/x-www-form-urlencoded: 初始的默认值，在发送前编码所有字符</li>\n<li>multipart/form-data:  不对字符编码，适用于使用&lt;input&gt; 标签上传文件</li>\n<li>text/plain: HTML5 引入的类型，空格转换为 “+” 加号，但不对特殊字符编码</li>\n</ul>\n<p>这些值可以通过元素 &lt;button&gt; or &lt;input&gt; 的属性form.enctype来改写。</p>\n<hr>\n<p>&lt;head&gt;是文章的头部，&lt;slider&gt;是侧边栏，&lt;main&gt;是主要内容，&lt;footer&gt;是尾部。</p>\n<hr>\n<p>input属于窗体元素,层级显示比flash、其它元素都高。请判断这句话的正确与否。（错误）</p>\n<p>解释：在HTML中，帧元素（frameset）的显示优先级最高，其次是表单元素，然后是非表单元素。flash属于帧元素，优先级更高。input属于窗体元素是正确的。</p>\n<hr>\n<p>Canvas和SVG的不同点：</p>\n<p>Canvas</p>\n<ul>\n<li>依赖分辨率</li>\n<li>不支持事件处理器</li>\n<li>弱的文本渲染能力</li>\n<li>能够以 .png 或 .jpg 格式保存结果图像</li>\n<li>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</li>\n<li>Canvas 是逐像素进行渲染的。</li>\n<li>在 Canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。</li>\n</ul>\n<p>SVG</p>\n<ul>\n<li>不依赖分辨率</li>\n<li>支持事件处理器</li>\n<li>最适合带有大型渲染区域的应用程序（比如谷歌地图）</li>\n<li>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</li>\n<li>不适合游戏应用</li>\n</ul>\n<hr>\n<p>input中的滑块控件type是range（理解成了slider，但slider是侧边栏）。</p>\n<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes\">HTML的全局属性</a>：所有标签都可以使用的属性。<br>比如style, id, class等等。</p>\n<hr>\n<p>什么情况会创建块格式化上下文 BFC（一个隔离的容器，容器里的子元素不会影响到外面的元素）</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a></p>\n<hr>\n<p>不能被冒泡的9个事件：load和unload、 mouseenter和mouseleave、 blur和focus、 error、 resize和abort</p>\n<hr>\n<p>&lt;a&gt;可以包含任何其他元素，但不能包含&lt;a&gt;本身。</p>\n<hr>\n<p>Dom Tree的根节点是Document对象。</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>section标签：Html5语义化后的新标签，表示将一大块内容分成几个部分。</p>","more":"<hr>\n<p>noscript标签：如果脚本未执行（如浏览器未支持JavaScript脚本），则会显示标签里的内容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">\t<span class=\"comment\">&lt;!--</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"><span class=\"handlebars\">\tdocument.write(&quot;Hello World!&quot;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"><span class=\"handlebars\">\t//--&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\"></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span>Your browser does not support JavaScript!<span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/enctype\">HTMLFormElement.enctype</a>属性常用来指明提交表单的内容类型，可选的值如下：</p>\n<ul>\n<li>application/x-www-form-urlencoded: 初始的默认值，在发送前编码所有字符</li>\n<li>multipart/form-data:  不对字符编码，适用于使用&lt;input&gt; 标签上传文件</li>\n<li>text/plain: HTML5 引入的类型，空格转换为 “+” 加号，但不对特殊字符编码</li>\n</ul>\n<p>这些值可以通过元素 &lt;button&gt; or &lt;input&gt; 的属性form.enctype来改写。</p>\n<hr>\n<p>&lt;head&gt;是文章的头部，&lt;slider&gt;是侧边栏，&lt;main&gt;是主要内容，&lt;footer&gt;是尾部。</p>\n<hr>\n<p>input属于窗体元素,层级显示比flash、其它元素都高。请判断这句话的正确与否。（错误）</p>\n<p>解释：在HTML中，帧元素（frameset）的显示优先级最高，其次是表单元素，然后是非表单元素。flash属于帧元素，优先级更高。input属于窗体元素是正确的。</p>\n<hr>\n<p>Canvas和SVG的不同点：</p>\n<p>Canvas</p>\n<ul>\n<li>依赖分辨率</li>\n<li>不支持事件处理器</li>\n<li>弱的文本渲染能力</li>\n<li>能够以 .png 或 .jpg 格式保存结果图像</li>\n<li>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</li>\n<li>Canvas 是逐像素进行渲染的。</li>\n<li>在 Canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。</li>\n</ul>\n<p>SVG</p>\n<ul>\n<li>不依赖分辨率</li>\n<li>支持事件处理器</li>\n<li>最适合带有大型渲染区域的应用程序（比如谷歌地图）</li>\n<li>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</li>\n<li>不适合游戏应用</li>\n</ul>\n<hr>\n<p>input中的滑块控件type是range（理解成了slider，但slider是侧边栏）。</p>\n<hr>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes\">HTML的全局属性</a>：所有标签都可以使用的属性。<br>比如style, id, class等等。</p>\n<hr>\n<p>什么情况会创建块格式化上下文 BFC（一个隔离的容器，容器里的子元素不会影响到外面的元素）</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a></p>\n<hr>\n<p>不能被冒泡的9个事件：load和unload、 mouseenter和mouseleave、 blur和focus、 error、 resize和abort</p>\n<hr>\n<p>&lt;a&gt;可以包含任何其他元素，但不能包含&lt;a&gt;本身。</p>\n<hr>\n<p>Dom Tree的根节点是Document对象。</p>\n<hr>"},{"title":"牛客错题簿-JS","date":"2021-08-31T18:47:29.000Z","_content":"\nJavaScipt是一门单线程的语言。\n\n解释：因为用于页面交互和操作DOM，多线程会导致各种同步错误。为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以，这个新标准并没有改变JavaScript单线程的本质。\n<!--more-->\n---\n\n```JavaScript\nnull instanceof Object;\n// false : null 的原型不是Object，但是typeof null返回object是某种规定\nNaN == NaN;\n// false : NaN是一个过于笼统的概念，不知道究竟表示的是什么数，因此不管是==或===都不相等\n```\n\n---\n\n表单的JS选择：\n```JavaScript\nwindow.onload = function(){\n    //首先获得下拉框的节点对象；\n    var obj = document.getElementById(\"obj\");\n    //1.如何获得当前选中的值？：\n    var value = obj.value;\n    //2.如何获得该下拉框所有的option的节点对象\n    var options = obj.options;\n    //注意：得到的options是一个对象数组\n    //3.如何获得第几个option的value值?比如我要获取第一option的value,可以这样：\n    var value1 =options[0].value;\n    //4.如何获得第几个option的文本内容?比如我要获取第一option的文本,可以这样：\n    var text1 = options[0].text;\n    //5.如何获得当前选中的option的索引？\n    var index = obj.selectedIndex;\n    //6.如何获得当前选中的option的文本内容？\n    //从第2个问题，我们已经获得所有的option的对象数组options了\n    //又从第5个问题，我们获取到了当前选中的option的索引值\n    //所以我们只要同options[index]下标的方法得到当前选中的option了\n    var selectedText =options[index].text;\n}\n```\n\n---\n\n```JavaScript\nvar datas=[10,20,30];\ndatas.unshift(40,50); datas.pop();\ndatas.push(60,70); datas.shift();\nconsole.log(datas.toString());\n```\n输出的结果应该是：50,10,20,60,70;\n\n解释：unshift和push如果携带多个参数，属于在头和尾合并这样一个数组，而非按顺序执行。\n\n---\n\n参考[Array.prototype.sort()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)\n\nArray.sort()的比较函数的意义是：\ncompareFunction(a, b)：\n  * return<0, a排列在b之前；\n  * return=0, 相对位置不变；\n  * return>0, a排列在b之后；\n\n所以如果要数字升序，可以使用a-b作为比较函数；降序，则使用b-a；\n\n```JavaScript\nvar numbers = [4, 2, 5, 1, 3];\nnumbers.sort(function(a, b) {\n  return a - b;\n});\nconsole.log(numbers);\n\n// 也可以写成：\nvar numbers = [4, 2, 5, 1, 3];\nnumbers.sort((a, b) => a - b);\nconsole.log(numbers);\n\n// [1, 2, 3, 4, 5]\n```\n---\n\nJavaScript正则表达式内容：\n\n以下代码的执行后，str 的值是：\n```JavaScript\nvar str = \"Hellllo world\";\nstr = str.replace(/(l)\\1/g, '$1');\n```\n[String.prototype.replace](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace)\n其中$1意为第1个括号选取的字符串，也就是l；\n\n[正则表达式](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions)语法中，\n\\1也意为第1个括号选取的字符串，也就是l；\n而/.../g，即全局标签g，会进行全局匹配，也就是多次选取。\n\n因此实际上的过程是：正则表达式全局选取\"ll\"，选中了两个\"ll\"，然后分别替换为\"l\"；最终的结果就是\"Hello world\"。\n\n---\n\nDate.now()返回的是一个毫秒数，也就是Number。而new Date({Number})可以根据时间戳创建一个Date对象。\n\n---\n\nJavaScript内部对象：\n  * History 包含用户（在浏览器窗口中）访问过的 URL\n  * Location 包含有关当前 URL 的信息\n  * Window 表示浏览器中打开的窗口\n  * Navigator 包含有关浏览器的信息\n\n---\n\n以下代码执行后，控制台的输出是：\n```JavaScript\nvar a = 10;\nfunction a(){}\nconsole.log(typeof a)\n```\n函数提升大于变量提升，变量提升会提升到除函数声明的后面，这个过程等价于：\n```JavaScript\nfunction a(){}\nvar a; //顺便一提，var可以进行重声明，但let不能，如果let a会报错。\na = 10;\nconsole.log(typeof a)\n```\n所以结果是\"Number\"\n\n---\n\n关于this对象：\n  * 在不改变this指向的前提下，this总是指向函数的直接调用者。\n  * 如果有new关键字，this指向new出来的那个对象。\n  * IE中attachEvent中的this总是指向全局对象Window。\n\n---\n\n下列函数哪些是JavaScript的全局函数？\n正确：encodeURI, parseFloat, eval\n错误：setTimeOut\n因为setTimeOut是window的函数。\n\n---\n\nparseInt的转换方式：\n1、如果都是字母， 返回：NaN\nparseInt(\"abc\", 10)  //返回 NaN\n2、如果都是数字，则返回整数\nparseInt(\"123\", 10)   //返回 123\n3、如果字母和数字都存在\n(1)、以数字开头，则取截止到第一个字母出现之前的所有数字进行转换\nparseInt(\"12x2bc\", 10)   // 返回：12\n(2)、如果参数“string”，以字母开头，直接返回NaN （10进制中字母不是一个有效的的表示）\nparseInt(\"df2bc\", 10)  //返回 NaN\n\n---\n\n","source":"_posts/牛客错题簿-JS.md","raw":"---\ntitle: 牛客错题簿-JS\ndate: 2021-09-01 02:47:29\ntags: JS\ncategories: JS\n---\n\nJavaScipt是一门单线程的语言。\n\n解释：因为用于页面交互和操作DOM，多线程会导致各种同步错误。为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以，这个新标准并没有改变JavaScript单线程的本质。\n<!--more-->\n---\n\n```JavaScript\nnull instanceof Object;\n// false : null 的原型不是Object，但是typeof null返回object是某种规定\nNaN == NaN;\n// false : NaN是一个过于笼统的概念，不知道究竟表示的是什么数，因此不管是==或===都不相等\n```\n\n---\n\n表单的JS选择：\n```JavaScript\nwindow.onload = function(){\n    //首先获得下拉框的节点对象；\n    var obj = document.getElementById(\"obj\");\n    //1.如何获得当前选中的值？：\n    var value = obj.value;\n    //2.如何获得该下拉框所有的option的节点对象\n    var options = obj.options;\n    //注意：得到的options是一个对象数组\n    //3.如何获得第几个option的value值?比如我要获取第一option的value,可以这样：\n    var value1 =options[0].value;\n    //4.如何获得第几个option的文本内容?比如我要获取第一option的文本,可以这样：\n    var text1 = options[0].text;\n    //5.如何获得当前选中的option的索引？\n    var index = obj.selectedIndex;\n    //6.如何获得当前选中的option的文本内容？\n    //从第2个问题，我们已经获得所有的option的对象数组options了\n    //又从第5个问题，我们获取到了当前选中的option的索引值\n    //所以我们只要同options[index]下标的方法得到当前选中的option了\n    var selectedText =options[index].text;\n}\n```\n\n---\n\n```JavaScript\nvar datas=[10,20,30];\ndatas.unshift(40,50); datas.pop();\ndatas.push(60,70); datas.shift();\nconsole.log(datas.toString());\n```\n输出的结果应该是：50,10,20,60,70;\n\n解释：unshift和push如果携带多个参数，属于在头和尾合并这样一个数组，而非按顺序执行。\n\n---\n\n参考[Array.prototype.sort()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)\n\nArray.sort()的比较函数的意义是：\ncompareFunction(a, b)：\n  * return<0, a排列在b之前；\n  * return=0, 相对位置不变；\n  * return>0, a排列在b之后；\n\n所以如果要数字升序，可以使用a-b作为比较函数；降序，则使用b-a；\n\n```JavaScript\nvar numbers = [4, 2, 5, 1, 3];\nnumbers.sort(function(a, b) {\n  return a - b;\n});\nconsole.log(numbers);\n\n// 也可以写成：\nvar numbers = [4, 2, 5, 1, 3];\nnumbers.sort((a, b) => a - b);\nconsole.log(numbers);\n\n// [1, 2, 3, 4, 5]\n```\n---\n\nJavaScript正则表达式内容：\n\n以下代码的执行后，str 的值是：\n```JavaScript\nvar str = \"Hellllo world\";\nstr = str.replace(/(l)\\1/g, '$1');\n```\n[String.prototype.replace](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace)\n其中$1意为第1个括号选取的字符串，也就是l；\n\n[正则表达式](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions)语法中，\n\\1也意为第1个括号选取的字符串，也就是l；\n而/.../g，即全局标签g，会进行全局匹配，也就是多次选取。\n\n因此实际上的过程是：正则表达式全局选取\"ll\"，选中了两个\"ll\"，然后分别替换为\"l\"；最终的结果就是\"Hello world\"。\n\n---\n\nDate.now()返回的是一个毫秒数，也就是Number。而new Date({Number})可以根据时间戳创建一个Date对象。\n\n---\n\nJavaScript内部对象：\n  * History 包含用户（在浏览器窗口中）访问过的 URL\n  * Location 包含有关当前 URL 的信息\n  * Window 表示浏览器中打开的窗口\n  * Navigator 包含有关浏览器的信息\n\n---\n\n以下代码执行后，控制台的输出是：\n```JavaScript\nvar a = 10;\nfunction a(){}\nconsole.log(typeof a)\n```\n函数提升大于变量提升，变量提升会提升到除函数声明的后面，这个过程等价于：\n```JavaScript\nfunction a(){}\nvar a; //顺便一提，var可以进行重声明，但let不能，如果let a会报错。\na = 10;\nconsole.log(typeof a)\n```\n所以结果是\"Number\"\n\n---\n\n关于this对象：\n  * 在不改变this指向的前提下，this总是指向函数的直接调用者。\n  * 如果有new关键字，this指向new出来的那个对象。\n  * IE中attachEvent中的this总是指向全局对象Window。\n\n---\n\n下列函数哪些是JavaScript的全局函数？\n正确：encodeURI, parseFloat, eval\n错误：setTimeOut\n因为setTimeOut是window的函数。\n\n---\n\nparseInt的转换方式：\n1、如果都是字母， 返回：NaN\nparseInt(\"abc\", 10)  //返回 NaN\n2、如果都是数字，则返回整数\nparseInt(\"123\", 10)   //返回 123\n3、如果字母和数字都存在\n(1)、以数字开头，则取截止到第一个字母出现之前的所有数字进行转换\nparseInt(\"12x2bc\", 10)   // 返回：12\n(2)、如果参数“string”，以字母开头，直接返回NaN （10进制中字母不是一个有效的的表示）\nparseInt(\"df2bc\", 10)  //返回 NaN\n\n---\n\n","slug":"牛客错题簿-JS","published":1,"updated":"2021-11-29T19:48:47.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwmo9e4e001olsv088sqg9mt","content":"<p>JavaScipt是一门单线程的语言。</p>\n<p>解释：因为用于页面交互和操作DOM，多线程会导致各种同步错误。为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以，这个新标准并没有改变JavaScript单线程的本质。</p>\n<span id=\"more\"></span>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">null</span> <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>;</span><br><span class=\"line\"><span class=\"comment\">// false : null 的原型不是Object，但是typeof null返回object是某种规定</span></span><br><span class=\"line\"><span class=\"literal\">NaN</span> == <span class=\"literal\">NaN</span>;</span><br><span class=\"line\"><span class=\"comment\">// false : NaN是一个过于笼统的概念，不知道究竟表示的是什么数，因此不管是==或===都不相等</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>表单的JS选择：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//首先获得下拉框的节点对象；</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;obj&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//1.如何获得当前选中的值？：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = obj.value;</span><br><span class=\"line\">    <span class=\"comment\">//2.如何获得该下拉框所有的option的节点对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = obj.options;</span><br><span class=\"line\">    <span class=\"comment\">//注意：得到的options是一个对象数组</span></span><br><span class=\"line\">    <span class=\"comment\">//3.如何获得第几个option的value值?比如我要获取第一option的value,可以这样：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> value1 =options[<span class=\"number\">0</span>].value;</span><br><span class=\"line\">    <span class=\"comment\">//4.如何获得第几个option的文本内容?比如我要获取第一option的文本,可以这样：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> text1 = options[<span class=\"number\">0</span>].text;</span><br><span class=\"line\">    <span class=\"comment\">//5.如何获得当前选中的option的索引？</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = obj.selectedIndex;</span><br><span class=\"line\">    <span class=\"comment\">//6.如何获得当前选中的option的文本内容？</span></span><br><span class=\"line\">    <span class=\"comment\">//从第2个问题，我们已经获得所有的option的对象数组options了</span></span><br><span class=\"line\">    <span class=\"comment\">//又从第5个问题，我们获取到了当前选中的option的索引值</span></span><br><span class=\"line\">    <span class=\"comment\">//所以我们只要同options[index]下标的方法得到当前选中的option了</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> selectedText =options[index].text;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> datas=[<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">datas.unshift(<span class=\"number\">40</span>,<span class=\"number\">50</span>); datas.pop();</span><br><span class=\"line\">datas.push(<span class=\"number\">60</span>,<span class=\"number\">70</span>); datas.shift();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(datas.toString());</span><br></pre></td></tr></table></figure>\n<p>输出的结果应该是：50,10,20,60,70;</p>\n<p>解释：unshift和push如果携带多个参数，属于在头和尾合并这样一个数组，而非按顺序执行。</p>\n<hr>\n<p>参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">Array.prototype.sort()</a></p>\n<p>Array.sort()的比较函数的意义是：<br>compareFunction(a, b)：</p>\n<ul>\n<li>return&lt;0, a排列在b之前；</li>\n<li>return=0, 相对位置不变；</li>\n<li>return&gt;0, a排列在b之后；</li>\n</ul>\n<p>所以如果要数字升序，可以使用a-b作为比较函数；降序，则使用b-a；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(numbers);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 也可以写成：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(numbers);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>JavaScript正则表达式内容：</p>\n<p>以下代码的执行后，str 的值是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;Hellllo world&quot;</span>;</span><br><span class=\"line\">str = str.replace(<span class=\"regexp\">/(l)\\1/g</span>, <span class=\"string\">&#x27;$1&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\">String.prototype.replace</a><br>其中$1意为第1个括号选取的字符串，也就是l；</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions\">正则表达式</a>语法中，<br>\\1也意为第1个括号选取的字符串，也就是l；<br>而/…/g，即全局标签g，会进行全局匹配，也就是多次选取。</p>\n<p>因此实际上的过程是：正则表达式全局选取”ll”，选中了两个”ll”，然后分别替换为”l”；最终的结果就是”Hello world”。</p>\n<hr>\n<p>Date.now()返回的是一个毫秒数，也就是Number。而new Date({Number})可以根据时间戳创建一个Date对象。</p>\n<hr>\n<p>JavaScript内部对象：</p>\n<ul>\n<li>History 包含用户（在浏览器窗口中）访问过的 URL</li>\n<li>Location 包含有关当前 URL 的信息</li>\n<li>Window 表示浏览器中打开的窗口</li>\n<li>Navigator 包含有关浏览器的信息</li>\n</ul>\n<hr>\n<p>以下代码执行后，控制台的输出是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a)</span><br></pre></td></tr></table></figure>\n<p>函数提升大于变量提升，变量提升会提升到除函数声明的后面，这个过程等价于：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//顺便一提，var可以进行重声明，但let不能，如果let a会报错。</span></span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a)</span><br></pre></td></tr></table></figure>\n<p>所以结果是”Number”</p>\n<hr>\n<p>关于this对象：</p>\n<ul>\n<li>在不改变this指向的前提下，this总是指向函数的直接调用者。</li>\n<li>如果有new关键字，this指向new出来的那个对象。</li>\n<li>IE中attachEvent中的this总是指向全局对象Window。</li>\n</ul>\n<hr>\n<p>下列函数哪些是JavaScript的全局函数？<br>正确：encodeURI, parseFloat, eval<br>错误：setTimeOut<br>因为setTimeOut是window的函数。</p>\n<hr>\n<p>parseInt的转换方式：<br>1、如果都是字母， 返回：NaN<br>parseInt(“abc”, 10)  //返回 NaN<br>2、如果都是数字，则返回整数<br>parseInt(“123”, 10)   //返回 123<br>3、如果字母和数字都存在<br>(1)、以数字开头，则取截止到第一个字母出现之前的所有数字进行转换<br>parseInt(“12x2bc”, 10)   // 返回：12<br>(2)、如果参数“string”，以字母开头，直接返回NaN （10进制中字母不是一个有效的的表示）<br>parseInt(“df2bc”, 10)  //返回 NaN</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>JavaScipt是一门单线程的语言。</p>\n<p>解释：因为用于页面交互和操作DOM，多线程会导致各种同步错误。为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以，这个新标准并没有改变JavaScript单线程的本质。</p>","more":"<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">null</span> <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>;</span><br><span class=\"line\"><span class=\"comment\">// false : null 的原型不是Object，但是typeof null返回object是某种规定</span></span><br><span class=\"line\"><span class=\"literal\">NaN</span> == <span class=\"literal\">NaN</span>;</span><br><span class=\"line\"><span class=\"comment\">// false : NaN是一个过于笼统的概念，不知道究竟表示的是什么数，因此不管是==或===都不相等</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>表单的JS选择：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//首先获得下拉框的节点对象；</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;obj&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//1.如何获得当前选中的值？：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = obj.value;</span><br><span class=\"line\">    <span class=\"comment\">//2.如何获得该下拉框所有的option的节点对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = obj.options;</span><br><span class=\"line\">    <span class=\"comment\">//注意：得到的options是一个对象数组</span></span><br><span class=\"line\">    <span class=\"comment\">//3.如何获得第几个option的value值?比如我要获取第一option的value,可以这样：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> value1 =options[<span class=\"number\">0</span>].value;</span><br><span class=\"line\">    <span class=\"comment\">//4.如何获得第几个option的文本内容?比如我要获取第一option的文本,可以这样：</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> text1 = options[<span class=\"number\">0</span>].text;</span><br><span class=\"line\">    <span class=\"comment\">//5.如何获得当前选中的option的索引？</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> index = obj.selectedIndex;</span><br><span class=\"line\">    <span class=\"comment\">//6.如何获得当前选中的option的文本内容？</span></span><br><span class=\"line\">    <span class=\"comment\">//从第2个问题，我们已经获得所有的option的对象数组options了</span></span><br><span class=\"line\">    <span class=\"comment\">//又从第5个问题，我们获取到了当前选中的option的索引值</span></span><br><span class=\"line\">    <span class=\"comment\">//所以我们只要同options[index]下标的方法得到当前选中的option了</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> selectedText =options[index].text;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> datas=[<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">datas.unshift(<span class=\"number\">40</span>,<span class=\"number\">50</span>); datas.pop();</span><br><span class=\"line\">datas.push(<span class=\"number\">60</span>,<span class=\"number\">70</span>); datas.shift();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(datas.toString());</span><br></pre></td></tr></table></figure>\n<p>输出的结果应该是：50,10,20,60,70;</p>\n<p>解释：unshift和push如果携带多个参数，属于在头和尾合并这样一个数组，而非按顺序执行。</p>\n<hr>\n<p>参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">Array.prototype.sort()</a></p>\n<p>Array.sort()的比较函数的意义是：<br>compareFunction(a, b)：</p>\n<ul>\n<li>return&lt;0, a排列在b之前；</li>\n<li>return=0, 相对位置不变；</li>\n<li>return&gt;0, a排列在b之后；</li>\n</ul>\n<p>所以如果要数字升序，可以使用a-b作为比较函数；降序，则使用b-a；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(numbers);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 也可以写成：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(numbers);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>JavaScript正则表达式内容：</p>\n<p>以下代码的执行后，str 的值是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;Hellllo world&quot;</span>;</span><br><span class=\"line\">str = str.replace(<span class=\"regexp\">/(l)\\1/g</span>, <span class=\"string\">&#x27;$1&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\">String.prototype.replace</a><br>其中$1意为第1个括号选取的字符串，也就是l；</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions\">正则表达式</a>语法中，<br>\\1也意为第1个括号选取的字符串，也就是l；<br>而/…/g，即全局标签g，会进行全局匹配，也就是多次选取。</p>\n<p>因此实际上的过程是：正则表达式全局选取”ll”，选中了两个”ll”，然后分别替换为”l”；最终的结果就是”Hello world”。</p>\n<hr>\n<p>Date.now()返回的是一个毫秒数，也就是Number。而new Date({Number})可以根据时间戳创建一个Date对象。</p>\n<hr>\n<p>JavaScript内部对象：</p>\n<ul>\n<li>History 包含用户（在浏览器窗口中）访问过的 URL</li>\n<li>Location 包含有关当前 URL 的信息</li>\n<li>Window 表示浏览器中打开的窗口</li>\n<li>Navigator 包含有关浏览器的信息</li>\n</ul>\n<hr>\n<p>以下代码执行后，控制台的输出是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a)</span><br></pre></td></tr></table></figure>\n<p>函数提升大于变量提升，变量提升会提升到除函数声明的后面，这个过程等价于：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//顺便一提，var可以进行重声明，但let不能，如果let a会报错。</span></span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a)</span><br></pre></td></tr></table></figure>\n<p>所以结果是”Number”</p>\n<hr>\n<p>关于this对象：</p>\n<ul>\n<li>在不改变this指向的前提下，this总是指向函数的直接调用者。</li>\n<li>如果有new关键字，this指向new出来的那个对象。</li>\n<li>IE中attachEvent中的this总是指向全局对象Window。</li>\n</ul>\n<hr>\n<p>下列函数哪些是JavaScript的全局函数？<br>正确：encodeURI, parseFloat, eval<br>错误：setTimeOut<br>因为setTimeOut是window的函数。</p>\n<hr>\n<p>parseInt的转换方式：<br>1、如果都是字母， 返回：NaN<br>parseInt(“abc”, 10)  //返回 NaN<br>2、如果都是数字，则返回整数<br>parseInt(“123”, 10)   //返回 123<br>3、如果字母和数字都存在<br>(1)、以数字开头，则取截止到第一个字母出现之前的所有数字进行转换<br>parseInt(“12x2bc”, 10)   // 返回：12<br>(2)、如果参数“string”，以字母开头，直接返回NaN （10进制中字母不是一个有效的的表示）<br>parseInt(“df2bc”, 10)  //返回 NaN</p>\n<hr>"}],"PostAsset":[{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/compare-final.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"compare-final.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/compare.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"compare.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/path-compression.jpg","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"path-compression.jpg","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qf1.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"qf1.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qf2.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"qf2.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qu1.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"qu1.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/qu2.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"qu2.png","modified":1,"renderable":1},{"_id":"source/_posts/JS-Union-find-quick-union-weighting-path-compression-map/weighting.png","post":"ckwmo9e3w0001lsv0hh9t23tf","slug":"weighting.png","modified":1,"renderable":1},{"_id":"source/_posts/关于我如何艰难地在公司业务中实现侧滑置顶删除功能（一）/侧滑效果.gif","post":"ckwmo9e410006lsv00x5pfzhz","slug":"侧滑效果.gif","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ckwmo9e410006lsv00x5pfzhz","category_id":"ckwmo9e46000dlsv010s57fnh","_id":"ckwmo9e47000klsv067o46a28"},{"post_id":"ckwmo9e420007lsv0e8pzhd4t","category_id":"ckwmo9e46000dlsv010s57fnh","_id":"ckwmo9e48000mlsv01ih40hdk"},{"post_id":"ckwmo9e3w0001lsv0hh9t23tf","category_id":"ckwmo9e400004lsv00jaih9rz","_id":"ckwmo9e48000plsv0ec4700qc"},{"post_id":"ckwmo9e3w0001lsv0hh9t23tf","category_id":"ckwmo9e47000jlsv0cxhz1nf0","_id":"ckwmo9e48000slsv0044uee71"},{"post_id":"ckwmo9e44000blsv03oekf9ys","category_id":"ckwmo9e46000dlsv010s57fnh","_id":"ckwmo9e490010lsv00xip3p4z"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","category_id":"ckwmo9e400004lsv00jaih9rz","_id":"ckwmo9e4a0013lsv03pqsglox"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","category_id":"ckwmo9e47000jlsv0cxhz1nf0","_id":"ckwmo9e4a0017lsv0dzrg3ekk"},{"post_id":"ckwmo9e45000clsv00h4cca9n","category_id":"ckwmo9e49000zlsv01onl9z3i","_id":"ckwmo9e4a0018lsv0b4c39fs9"},{"post_id":"ckwmo9e430008lsv0fe1dei5t","category_id":"ckwmo9e48000nlsv01nmdfpbj","_id":"ckwmo9e4b001clsv0e8r90i2p"},{"post_id":"ckwmo9e430008lsv0fe1dei5t","category_id":"ckwmo9e4a0014lsv0ener62yt","_id":"ckwmo9e4b001elsv0ga6s5dd4"},{"post_id":"ckwmo9e4e001olsv088sqg9mt","category_id":"ckwmo9e400004lsv00jaih9rz","_id":"ckwmo9e4g001slsv0crpl8v07"},{"post_id":"ckwmo9e4d001nlsv0examc027","category_id":"ckwmo9e4e001plsv0hbxefljy","_id":"ckwmo9e4h001ulsv08iy11r8o"}],"PostTag":[{"post_id":"ckwmo9e3w0001lsv0hh9t23tf","tag_id":"ckwmo9e410005lsv0buej2pjm","_id":"ckwmo9e46000flsv0e0tt2tds"},{"post_id":"ckwmo9e3w0001lsv0hh9t23tf","tag_id":"ckwmo9e43000alsv07d1rczm8","_id":"ckwmo9e46000glsv06sk6honz"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","tag_id":"ckwmo9e410005lsv0buej2pjm","_id":"ckwmo9e48000tlsv03dor3a91"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","tag_id":"ckwmo9e43000alsv07d1rczm8","_id":"ckwmo9e49000ulsv0dklsg3y2"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","tag_id":"ckwmo9e47000llsv0d5se0ftc","_id":"ckwmo9e49000xlsv0eefoa1ma"},{"post_id":"ckwmo9e3z0003lsv0am8od9g4","tag_id":"ckwmo9e48000olsv0a3staxcx","_id":"ckwmo9e49000ylsv0djyib15d"},{"post_id":"ckwmo9e410006lsv00x5pfzhz","tag_id":"ckwmo9e48000rlsv0537z0em5","_id":"ckwmo9e4a0012lsv0cln4fghh"},{"post_id":"ckwmo9e410006lsv00x5pfzhz","tag_id":"ckwmo9e49000wlsv0bz8ydeoa","_id":"ckwmo9e4a0015lsv0f57thgec"},{"post_id":"ckwmo9e420007lsv0e8pzhd4t","tag_id":"ckwmo9e48000rlsv0537z0em5","_id":"ckwmo9e4b001alsv018qeb2h6"},{"post_id":"ckwmo9e420007lsv0e8pzhd4t","tag_id":"ckwmo9e49000wlsv0bz8ydeoa","_id":"ckwmo9e4b001blsv00jzk9g37"},{"post_id":"ckwmo9e430008lsv0fe1dei5t","tag_id":"ckwmo9e4b0019lsv01n937hxa","_id":"ckwmo9e4b001glsv03zbl4tnr"},{"post_id":"ckwmo9e430008lsv0fe1dei5t","tag_id":"ckwmo9e4b001dlsv0er0kfuvr","_id":"ckwmo9e4b001hlsv0huxg0ni0"},{"post_id":"ckwmo9e44000blsv03oekf9ys","tag_id":"ckwmo9e48000rlsv0537z0em5","_id":"ckwmo9e4c001klsv0a62oe9ak"},{"post_id":"ckwmo9e44000blsv03oekf9ys","tag_id":"ckwmo9e49000wlsv0bz8ydeoa","_id":"ckwmo9e4c001llsv05k607ul0"},{"post_id":"ckwmo9e45000clsv00h4cca9n","tag_id":"ckwmo9e4c001jlsv02cb3be53","_id":"ckwmo9e4c001mlsv0edhta0at"},{"post_id":"ckwmo9e4e001olsv088sqg9mt","tag_id":"ckwmo9e410005lsv0buej2pjm","_id":"ckwmo9e4g001rlsv0b9cahrtr"},{"post_id":"ckwmo9e4d001nlsv0examc027","tag_id":"ckwmo9e4e001qlsv09i3chcn2","_id":"ckwmo9e4g001tlsv05nhd69yo"}],"Tag":[{"name":"JS","_id":"ckwmo9e410005lsv0buej2pjm"},{"name":"算法","_id":"ckwmo9e43000alsv07d1rczm8"},{"name":"快速幂","_id":"ckwmo9e47000llsv0d5se0ftc"},{"name":"大数越界","_id":"ckwmo9e48000olsv0a3staxcx"},{"name":"微信小程序","_id":"ckwmo9e48000rlsv0537z0em5"},{"name":"fs","_id":"ckwmo9e49000wlsv0bz8ydeoa"},{"name":"FF14","_id":"ckwmo9e4b0019lsv01n937hxa"},{"name":"项目","_id":"ckwmo9e4b001dlsv0er0kfuvr"},{"name":"CSS","_id":"ckwmo9e4c001jlsv02cb3be53"},{"name":"HTML","_id":"ckwmo9e4e001qlsv09i3chcn2"}]}}